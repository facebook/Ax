Search.setIndex({"docnames": ["analysis", "ax", "benchmark", "core", "early_stopping", "exceptions", "global_stopping", "index", "metrics", "modelbridge", "models", "plot", "runners", "service", "storage", "telemetry", "utils"], "filenames": ["analysis.rst", "ax.rst", "benchmark.rst", "core.rst", "early_stopping.rst", "exceptions.rst", "global_stopping.rst", "index.rst", "metrics.rst", "modelbridge.rst", "models.rst", "plot.rst", "runners.rst", "service.rst", "storage.rst", "telemetry.rst", "utils.rst"], "titles": ["ax.analysis", "ax", "ax.benchmark", "ax.core", "ax.early_stopping", "ax.exceptions", "ax.global_stopping", "API Reference", "ax.metrics", "ax.modelbridge", "ax.models", "ax.plot", "ax.runners", "ax.service", "ax.storage", "ax.telemetry", "ax.utils"], "terms": {"dict": [3, 9, 10, 16], "str": [3, 5, 9, 10, 16], "union": [3, 9, 10, 16], "nonetyp": [3, 9, 10], "bool": [3, 5, 9, 10, 16], "float": [3, 9, 10, 16], "int": [3, 5, 9, 10, 16], "name": [3, 9, 10, 16], "option": [3, 5, 9, 10, 16], "none": [3, 5, 9, 10, 16], "sourc": [3, 5, 9, 10, 16], "base": [3, 5, 7], "sortablebas": [3, 16], "defin": [3, 5, 9, 10, 16], "random": [3, 7], "assign": 3, "unit": [3, 9, 16], "given": [3, 5, 9, 10, 16], "thu": [3, 16], "encapsul": 3, "parametr": 3, "need": [3, 5, 9, 10, 16], "clone": 3, "clear_nam": 3, "fals": [3, 5, 9, 10, 16], "creat": [3, 9, 10, 16], "copi": [3, 9, 16], "thi": [3, 5, 9, 10, 16], "whether": [3, 9, 10, 16], "should": [3, 5, 9, 10, 16], "set": [3, 5, 9, 10, 16], "its": [3, 9, 10, 16], "instead": [3, 9, 10, 16], "being": [3, 9, 10, 16], "default": [3, 9, 10, 16], "properti": [3, 5, 9, 10, 16], "has_nam": 3, "return": [3, 9, 10, 16], "true": [3, 9, 10, 16], "": [3, 9, 10, 16], "i": [3, 5, 9, 10, 16], "static": [3, 16], "md5hash": 3, "uniqu": 3, "identifi": [3, 9, 10, 16], "parameter": [3, 9, 10], "map": [3, 7, 10], "param": [3, 9, 10, 16], "valu": [3, 9, 10, 16], "hash": 3, "get": [3, 5, 9, 10, 16], "throw": [3, 16], "name_or_short_signatur": 3, "exist": [3, 9, 10, 16], "els": [3, 10, 16], "last": [3, 9], "8": [3, 16], "charact": 3, "us": [3, 5, 9, 10, 16], "present": [3, 9, 10], "candid": [3, 5, 9, 10], "e": [3, 5, 9, 10, 16], "g": [3, 5, 9, 10, 16], "plot": [3, 5, 7, 9], "tabl": 3, "where": [3, 9, 10, 16], "do": [3, 9, 10, 16], "yet": [3, 10], "have": [3, 9, 10, 16], "sinc": [3, 9, 16], "ar": [3, 5, 9, 10, 16], "automat": [3, 9, 10], "upon": [3, 5], "addit": [3, 5, 9, 10, 16], "from": [3, 5, 9, 10, 16], "signatur": [3, 9, 10, 16], "represent": [3, 9, 10, 16], "base_tri": [3, 9], "trial_typ": 3, "ttl_second": 3, "index": [3, 7, 9, 10, 16], "abc": [3, 9, 10, 16], "repres": [3, 9, 10, 16], "contain": [3, 9, 10, 16], "deploi": 3, "togeth": [3, 10, 16], "There": [3, 10, 16], "two": [3, 9, 10, 16], "kind": 3, "regular": 3, "which": [3, 5, 9, 10, 16], "onli": [3, 9, 10, 16], "singl": [3, 9, 10, 16], "an": [3, 5, 9, 10, 16], "arbitrari": 3, "number": [3, 5, 9, 10, 16], "part": [3, 9, 10, 16], "If": [3, 9, 10, 16], "specifi": [3, 9, 10, 16], "consid": [3, 9, 10, 16], "fail": [3, 5, 9, 10, 16], "after": [3, 9, 10, 16], "mani": [3, 16], "second": [3, 16], "time": [3, 9, 10, 16], "wa": [3, 5, 9, 10, 16], "ran": 3, "unless": [3, 9, 10], "complet": [3, 5, 16], "befor": [3, 9, 10, 16], "meant": [3, 9, 10], "detect": [3, 16], "dead": 3, "evalu": [3, 9, 10, 16], "process": [3, 5, 10, 16], "might": 3, "crash": 3, "etc": [3, 9, 10, 16], "live": [3, 10], "ha": [3, 5, 9, 10, 16], "pass": [3, 5, 9, 10, 16], "accordingli": 3, "gener": [3, 7, 10, 16], "determin": [3, 9, 10, 16], "purpos": [3, 9], "load": [3, 5, 10, 16], "storag": [3, 7, 10, 16], "abstract": [3, 5, 9, 16], "abandoned_arm": 3, "list": [3, 9, 10, 16], "all": [3, 5, 9, 10, 16], "abandon": [3, 16], "associ": [3, 9, 10, 16], "abandoned_reason": 3, "arms_by_nam": 3, "assign_runn": 3, "doesn": [3, 5], "t": [3, 5, 9, 10, 16], "alreadi": 3, "one": [3, 9, 10, 16], "reason": [3, 5], "stop": [3, 5, 16], "function": [3, 5, 7, 9, 10], "mark": [3, 16], "A": [3, 9, 10, 16], "messag": [3, 5, 16], "inform": [3, 5, 10, 16], "why": 3, "The": [3, 5, 9, 10, 16], "instanc": [3, 9, 10, 16], "completed_successfulli": 3, "check": [3, 9, 10, 16], "statu": [3, 9, 16], "deployed_nam": 3, "extern": [3, 10, 16], "framework": 3, "deriv": [3, 5], "field": [3, 9, 10, 16], "run_metadata": 3, "did_not_complet": 3, "termin": [3, 9, 16], "belong": [3, 9, 10], "failed_reason": 3, "fetch_data": 3, "kwarg": [3, 9, 10], "ani": [3, 5, 9, 10, 16], "fetch": 3, "note": [3, 9, 10, 16], "can": [3, 5, 9, 10, 16], "lossi": 3, "ex": 3, "could": [3, 9], "implicitli": 3, "cast": [3, 16], "lose": 3, "row": [3, 10], "some": [3, 9, 10, 16], "default_data_typ": 3, "misconfigur": [3, 5], "trial_index": [3, 9, 16], "provid": [3, 5, 9, 10, 16], "ones": [3, 9, 10, 16], "keyword": [3, 9, 10, 16], "arg": [3, 9, 10, 16], "underli": [3, 5, 9, 10, 16], "fetch_data_result": 3, "common": [3, 5, 7, 10], "result": [3, 9, 10], "metricfetch": 3, "metricfetchresult": 3, "generator_run": [3, 9], "run": [3, 5, 9, 16], "within": [3, 9, 10, 16], "is_abandon": 3, "lookup_data": 3, "lookup": [3, 16], "cach": [3, 10], "merg": [3, 9], "across": [3, 9, 10, 16], "timestamp": [3, 16], "latest": 3, "mark_abandon": 3, "unsaf": [3, 16], "pend": [3, 9, 10], "point": [3, 5, 7, 9, 10, 16], "avoid": 3, "model": [3, 7], "suggest": [3, 5], "same": [3, 9, 10, 16], "again": 3, "new": [3, 5, 9, 10, 16], "also": [3, 9, 10, 16], "exclud": [3, 16], "train": [3, 9, 10, 16], "fit_abandon": [3, 9], "bridg": [3, 7], "ignor": [3, 9, 10, 16], "saniti": 3, "state": [3, 9, 10, 16], "transit": [3, 9], "mark_arm_abandon": 3, "arm_nam": [3, 9], "mark_a": 3, "trialstatu": [3, 9, 16], "u": [3, 9, 16], "respect": [3, 9, 10, 16], "mark_": 3, "method": [3, 5, 9, 10, 16], "mark_complet": 3, "mark_early_stop": 3, "earli": [3, 16], "mark_fail": 3, "mark_run": 3, "no_runner_requir": 3, "start": [3, 9, 10, 16], "skip": 3, "presenc": 3, "mark_stag": 3, "stage": [3, 16], "accord": [3, 9, 10, 16], "behavior": [3, 9, 10, 16], "containin": 3, "metadata": [3, 9, 10, 16], "deploy": [3, 16], "It": [3, 5, 9, 10, 16], "system": [3, 9, 10, 16], "both": [3, 9, 10, 16], "dure": [3, 5, 9, 10], "how": [3, 5, 9, 10, 16], "experiment": 3, "lifecycl": 3, "new_statu": 3, "stop_metadata": 3, "must": [3, 5, 9, 10, 16], "early_stop": 3, "time_complet": 3, "datetim": [3, 16], "time_cr": 3, "creation": [3, 16], "time_run_start": 3, "collect": [3, 10, 16], "time_stag": 3, "relev": [3, 10, 16], "differ": [3, 5, 9, 10, 16], "onc": 3, "never": [3, 16], "infinit": [3, 16], "ttl": 3, "reflect": 3, "update_run_metadata": 3, "updat": [3, 5, 9, 10, 16], "store": [3, 5, 9, 10], "update_stop_metadata": 3, "enum": [3, 9, 16], "retryabl": [3, 16], "deem": [3, 16], "unpromis": 3, "non": [3, 9, 10], "immedi": 3, "mai": [3, 5, 9, 10, 16], "prior": [3, 10], "failur": [3, 5, 16], "between": [3, 9, 10, 16], "express": 3, "possibli": 3, "transient": 3, "error": [3, 5, 9, 10, 16], "so": [3, 9, 10, 16], "re": [3, 9, 10], "them": [3, 9, 10, 16], "resuggest": 3, "ad": [3, 9], "other": [3, 9, 10, 16], "end": [3, 10, 16], "indic": [3, 5, 9, 10, 16], "rerun": 3, "human": [3, 16], "initi": [3, 9, 10, 16], "action": 3, "poorli": 3, "perform": [3, 9, 10, 16], "determinist": [3, 16], "autom": [3, 5], "wai": [3, 5, 16], "execut": [3, 16], "encount": [3, 16], "bot": 3, "caus": [3, 16], "possibl": [3, 9, 10, 16], "via": [3, 9, 10, 16], "batch": [3, 9, 10, 16], "refer": [3, 9, 10, 16], "were": [3, 9, 16], "strategi": [3, 7, 10], "therefor": [3, 16], "addition": [3, 5, 9], "when": [3, 5, 9, 10, 16], "thei": [3, 9, 10, 16], "intermedi": 3, "schedul": [3, 7], "wait": [3, 5, 16], "resourc": 3, "alwai": [3, 9, 16], "applic": [3, 9, 16], "depend": [3, 5, 9, 10, 16], "exampl": [3, 9, 10, 16], "servic": [3, 7], "api": [3, 9], "get_next_tri": 3, "typic": [3, 9, 10, 16], "correspond": [3, 9, 10, 16], "5": [3, 9, 10, 16], "0": [3, 9, 10, 16], "3": [3, 9, 10, 16], "dispatch": [3, 16], "6": [3, 10, 16], "7": [3, 16], "2": [3, 9, 10, 16], "4": [3, 9, 16], "1": [3, 9, 10, 16], "expecting_data": 3, "expect": [3, 9, 10, 16], "is_candid": 3, "is_complet": 3, "successfulli": [3, 9], "is_deploi": 3, "been": [3, 5, 9, 10], "is_early_stop": 3, "is_fail": 3, "is_run": 3, "is_termin": 3, "immutable_once_run": 3, "func": [3, 16], "callabl": [3, 9, 10, 16], "decor": [3, 10], "ever": 3, "immut": [3, 5], "batch_trial": 3, "abandonedarm": 3, "optimize_for_pow": 3, "lifecycle_stag": 3, "lifecyclestag": 3, "multipl": [3, 9, 10, 16], "attach": 3, "weight": [3, 9, 10, 16], "measur": [3, 7, 9, 10], "much": 3, "total": [3, 16], "alloc": 3, "go": 3, "toward": 3, "specif": [3, 9, 10, 16], "For": [3, 9, 10, 16], "describ": [3, 10], "fraction": 3, "popul": [3, 9, 16], "treatment": 3, "interpret": 3, "just": [3, 9, 10, 16], "import": [3, 9, 10, 16], "simultan": [3, 10], "b": [3, 9, 10, 16], "test": [3, 7, 9, 10], "subject": 3, "nonstationar": 3, "case": [3, 5, 9, 10, 16], "separ": [3, 9, 10], "independ": [3, 16], "each": [3, 9, 10, 16], "later": [3, 9, 10, 16], "through": [3, 9, 10, 16], "add_arm": 3, "add_generator_run": 3, "cannot": [3, 5, 9, 16], "combin": [3, 9, 10, 16], "argument": [3, 9, 10, 16], "optim": [3, 5, 9, 10, 16], "power": 3, "effect": [3, 16], "certain": [3, 9], "size": [3, 10, 16], "high": 3, "document": 3, "set_status_quo_and_optimize_pow": 3, "more": [3, 5, 9, 10, 16], "detail": [3, 9, 10, 16], "abandoned_arm_nam": 3, "abandoned_arms_metadata": 3, "add_arms_and_weight": 3, "arm_weight": 3, "mutablemap": [3, 9], "These": [3, 9, 10, 16], "construct": [3, 9, 10, 16], "attach_batch_trial_data": 3, "raw_data": 3, "numpi": [3, 9, 10, 16], "integ": [3, 9, 16], "tupl": [3, 9, 10, 16], "hashabl": 3, "sample_s": [3, 16], "outcom": [3, 9, 10, 16], "sampl": [3, 5, 9, 10, 16], "track": [3, 16], "about": [3, 10], "importantli": 3, "start_dat": 3, "end_dat": 3, "complete_tri": 3, "current": [3, 5, 9, 10, 16], "clone_to": 3, "include_sq": [3, 16], "unspecifi": [3, 9, 16], "includ": [3, 5, 9, 10, 16], "quo": [3, 9, 16], "generator_run_struct": 3, "generatorrunstruct": 3, "struct": 3, "hold": [3, 9, 16], "in_design_arm": 3, "is_factori": 3, "factori": [3, 5, 7, 10], "design": [3, 9, 10, 16], "link": [3, 9], "factor": [3, 16], "usual": [3, 16], "done": [3, 9], "issu": [3, 5], "user": [3, 5, 9, 16], "want": [3, 9, 16], "continu": [3, 5, 10, 16], "normalized_arm_weight": 3, "trunc_digit": 3, "normal": [3, 9, 10, 16], "we": [3, 9, 10, 16], "without": [3, 9, 10, 16], "mutat": [3, 9], "probabl": [3, 10], "digit": 3, "keep": [3, 16], "equal": [3, 9, 10], "maintain": [3, 5], "rel": [3, 9, 16], "best": [3, 7, 9, 10, 16], "set_status_quo_with_weight": 3, "status_quo": [3, 9, 16], "control": [3, 9, 10, 16], "unset_status_quo": 3, "well": [3, 10], "enumer": 3, "bakeoff": 3, "explor": [3, 10], "exploration_concurr": 3, "iter": [3, 5, 9, 16], "offline_optim": 3, "basedata": 3, "df": [3, 16], "panda": [3, 16], "datafram": [3, 16], "descript": [3, 10], "serializationmixin": [3, 16], "retriev": [3, 9, 10, 16], "futur": [3, 5, 10], "attach_data": 3, "requir": [3, 9, 10, 16], "column": [3, 10, 16], "readabl": [3, 16], "column_data_typ": 3, "end_tim": [3, 9], "fidel": [3, 10], "frac_nonnul": 3, "float64": [3, 9, 16], "mean": [3, 9, 10, 16], "metric_nam": [3, 9, 10, 16], "n": [3, 9, 10, 16], "random_split": 3, "sem": [3, 9, 16], "start_tim": 3, "required_column": 3, "classmethod": [3, 10, 16], "extra_column_typ": 3, "excluded_column": 3, "support": [3, 5, 9, 10, 16], "copy_structure_with_df": 3, "tbasedata": 3, "serial": [3, 9, 10], "structur": [3, 9, 10], "help": [3, 16], "similar": [3, 5, 9, 10, 16], "than": [3, 9, 10, 16], "deserialize_init_arg": [3, 16], "decoder_registri": [3, 16], "class_decoder_registri": [3, 16], "dictionari": [3, 9, 10, 16], "extract": [3, 9, 10, 16], "df_hash": 3, "comput": [3, 9, 10, 16], "first": [3, 9, 16], "md5": 3, "string": [3, 10, 16], "veri": [3, 16], "larg": [3, 9, 16], "from_evalu": 3, "convert": [3, 9, 10, 16], "itself": [3, 9], "infer": [3, 9, 10, 16], "produc": [3, 9, 10], "millisecond": [3, 16], "iso": 3, "becaus": [3, 5, 9, 10, 16], "work": [3, 9, 16], "enclos": 3, "from_fidelity_evalu": 3, "cl": 3, "from_multipl": 3, "concaten": 3, "get_filtered_result": 3, "filter": [3, 9, 10, 16], "subset": [3, 9, 10, 16], "match": [3, 9, 10, 16], "serialize_init_arg": [3, 16], "obj": [3, 16], "supported_column": 3, "extra_column_nam": 3, "necessarili": 3, "true_df": 3, "truth": 3, "except": [3, 7, 9, 10, 16], "numer": [3, 9], "latter": [3, 16], "trial_indic": 3, "AND": 3, "either": [3, 9, 10, 16], "dimens": [3, 10, 16], "from_multiple_data": 3, "subset_metr": 3, "appear": [3, 10, 16], "clone_without_metr": 3, "excluded_metric_nam": 3, "out": [3, 9, 10, 16], "sanit": 3, "rectangular": 3, "origin": [3, 9, 16], "version": [3, 5, 9, 10, 16], "custom_data_class": 3, "time_column": 3, "custom": [3, 5, 9, 10, 16], "preserv": [3, 9], "input": [3, 5, 9, 10, 16], "here": [3, 9, 10], "append": [3, 16], "definit": [3, 9], "subclass": [3, 9, 10, 16], "amend": 3, "set_single_tri": 3, "our": [3, 16], "ivw": 3, "transform": [3, 7, 10, 16], "search_spac": [3, 9], "optimization_config": [3, 9, 10], "tracking_metr": 3, "is_test": 3, "experiment_typ": 3, "datatyp": 3, "auxiliary_experiments_by_purpos": 3, "auxiliari": 3, "auxiliaryexperimentpurpos": 3, "add_tracking_metr": 3, "add": [3, 10, 16], "rais": [3, 5, 9, 10, 16], "don": [3, 16], "arms_by_signatur": [3, 9], "arms_by_signature_for_dedupl": 3, "dedupl": [3, 5, 9, 10], "generationstrategi": [3, 9], "In": [3, 5, 9, 10, 16], "form": [3, 9, 10, 16], "those": [3, 9, 10, 16], "less": [3, 16], "like": [3, 9, 10, 16], "unlik": [3, 16], "combine_with_last_data": 3, "overwrite_existing_data": 3, "_data_by_tri": 3, "look": [3, 9], "up": [3, 5, 9, 10, 16], "lookup_data_for_tri": 3, "By": [3, 9, 10, 16], "most": [3, 9, 16], "recent": 3, "sometim": 3, "howev": 3, "call": [3, 5, 9, 10, 16], "rest": 3, "anoth": [3, 5, 9, 10, 16], "To": [3, 9, 10, 16], "achiev": [3, 16], "goal": 3, "take": [3, 10, 16], "previous": [3, 5, 10], "newli": [3, 10], "delet": 3, "old": 3, "afterward": [3, 16], "oper": [3, 10, 16], "valid": [3, 5, 10, 16], "doe": [3, 9, 10, 16], "around": [3, 10], "know": 3, "incom": 3, "replac": [3, 5, 9], "therebi": 3, "reduc": [3, 10], "amount": [3, 9, 16], "databas": [3, 5, 16], "milli": 3, "attach_fetch_result": 3, "prefer": 3, "directli": [3, 9, 10, 16], "kei": [3, 9, 10, 16], "err": [3, 16], "silent": [3, 16], "drop": 3, "find": [3, 9, 10, 16], "attempt": [3, 5, 9], "refetch": 3, "your": [3, 16], "intend": 3, "you": [3, 5, 9, 10, 16], "resolv": 3, "attach_tri": 3, "properli": [3, 16], "clone_with": 3, "attribut": [3, 9, 10, 16], "retain": [3, 9], "would": [3, 9, 16], "access": [3, 10], "search": [3, 5, 7, 9, 10, 16], "space": [3, 5, 9, 10, 16], "cloned_experiment_": 3, "prefix": 3, "config": [3, 5, 9, 10], "orign": 3, "main": [3, 9, 16], "completed_tri": 3, "arriv": 3, "data_by_tri": 3, "ordereddict": [3, 10], "order": [3, 5, 9, 10, 16], "default_data_constructor": 3, "default_trial_typ": 3, "avail": [3, 5, 9, 16], "while": [3, 9, 10, 16], "boolean": [3, 9, 10, 16], "is_available_while_run": 3, "captur": 3, "along": [3, 9, 10, 16], "nest": [3, 9], "fetch_trials_data": 3, "whetner": 3, "fetch_trials_data_result": 3, "get_trials_by_indic": 3, "grab": [3, 16], "immutable_search_space_and_opt_config": [3, 16], "mutabl": 3, "improv": [3, 10], "layer": 3, "Not": [3, 10], "disabl": [3, 16], "chang": [3, 9, 10, 16], "necessit": 3, "is_moo_problem": 3, "empti": [3, 9, 10], "particular": [3, 9, 10, 16], "omit": [3, 16], "request": [3, 5, 10], "lookup_data_for_t": 3, "known": [3, 10, 16], "metric_config_summary_df": 3, "per": [3, 9, 10, 16], "follow": [3, 5, 10, 16], "braninmetr": 3, "minim": [3, 9, 10, 16], "maxim": [3, 9, 10, 16], "constraint": [3, 9, 10], "bound": [3, 9, 10, 16], "10": [3, 9, 16], "objectivethreshold": [3, 9], "lower": [3, 10, 16], "better": [3, 9, 16], "new_batch_tri": 3, "new_trial": [3, 16], "num_abandoned_arm": 3, "num_trial": 3, "remove_tracking_metr": 3, "remov": [3, 5, 9, 16], "reset_runn": 3, "runner_for_tri": 3, "running_trial_indic": 3, "modif": 3, "allow": [3, 9, 10, 16], "compar": [3, 9, 16], "against": [3, 9, 16], "sum_trial_s": 3, "sum": [3, 10, 16], "supports_trial_typ": 3, "trial_indices_by_statu": 3, "group": 3, "elaps": 3, "found": [3, 5, 9, 16], "past": 3, "trials_by_statu": 3, "trials_expecting_data": 3, "update_tracking_metr": 3, "redefin": 3, "validate_tri": 3, "valueerror": [3, 5, 9, 10, 16], "warm_start_from_old_experi": 3, "old_experi": 3, "copy_run_metadata_kei": 3, "trial_statuses_to_copi": 3, "search_space_check_membership_raise_error": 3, "expeir": 3, "member": [3, 9], "handl": [3, 9, 10, 16], "transfer": [3, 10], "denot": [3, 10], "item": [3, 9, 10, 16], "over": [3, 9, 10, 16], "run_metadata_report_kei": 3, "warm": [3, 10], "fall": [3, 9, 10, 16], "outsid": [3, 10], "add_arm_and_prevent_naming_collis": 3, "old_trial": 3, "old_experiment_nam": 3, "generation_strategy_interfac": 3, "interfac": [3, 9, 10], "standard": [3, 9, 10, 16], "remot": 3, "beta": [3, 16], "pleas": 3, "discuss": 3, "develop": 3, "clone_reset": [3, 10], "reset": [3, 16], "gen_for_multiple_trials_with_multiple_model": 3, "num_generator_run": 3, "join": 3, "cours": 3, "gen": [3, 9, 10], "status": [3, 9], "actual": [3, 5, 9, 16], "output": [3, 9, 10, 16], "pending_observ": [3, 9, 10], "outer": 3, "armweight": 3, "namedtupl": [3, 9, 16], "ty": 3, "model_predict": [3, 9], "best_arm_predict": 3, "fit_tim": 3, "gen_tim": 3, "model_kei": 3, "model_kwarg": 3, "bridge_kwarg": 3, "gen_metadata": [3, 9, 10], "model_state_after_gen": 3, "generation_step_index": 3, "candidate_metadata_by_arm_signatur": 3, "generation_node_nam": 3, "previou": [3, 9, 10, 16], "arm_signatur": 3, "predict": [3, 10], "becam": 3, "deep": 3, "taken": [3, 10], "fit": [3, 9, 10], "generator_run_typ": 3, "covari": [3, 9, 10, 16], "record": [3, 9, 16], "model_predictions_by_arm": 3, "param_df": 3, "inspect": [3, 9], "content": [3, 16], "pd": 3, "generatorruntyp": 3, "manual": 3, "extract_arm_predict": 3, "arm_idx": 3, "cov": [3, 9, 10], "map_data": 3, "map_key_info": 3, "mapkeyinfo": 3, "pair": [3, 10], "occur": [3, 5], "whenev": 3, "report": [3, 7, 10], "element": [3, 9, 10, 16], "simplest": 3, "sequenc": [3, 9, 10], "seri": [3, 16], "multifidel": 3, "fidelity_feature_1": 3, "fidelity_feature_n": 3, "map_df": 3, "deduplicate_by_column": 3, "info": [3, 16], "shape": [3, 10], "from_map_evalu": 3, "downcast": 3, "necessari": [3, 9, 16], "fill": [3, 10], "cell": 3, "from_multiple_map_data": 3, "map_key_to_typ": 3, "map_kei": [3, 9], "subsampl": 3, "keep_everi": 3, "limit_rows_per_group": 3, "limit_rows_per_metr": 3, "include_first_last": 3, "manner": [3, 16], "self": [3, 10, 16], "length": [3, 9, 10, 16], "account": [3, 9, 10], "three": [3, 10], "k": [3, 9, 10, 16], "everi": [3, 9, 10, 16], "kth": 3, "kept": 3, "word": [3, 9], "step": [3, 5], "largest": 3, "select": [3, 10], "approprio": 3, "appropri": [3, 9, 10, 16], "prioriti": [3, 16], "abov": [3, 9, 10], "curv": [3, 7], "nearli": 3, "intern": [3, 16], "quantiti": [3, 9, 10], "satisfi": [3, 10], "guidelin": 3, "evenli": 3, "default_valu": 3, "helper": [3, 9, 16], "auxilari": 3, "value_typ": [3, 16], "map_metr": 3, "lower_is_bett": 3, "fetch_trial_data": 3, "essenti": [3, 9], "overrid": [3, 9, 16], "minimum": [3, 9, 16], "http": [3, 16], "dev": [3, 9, 16], "_modul": 3, "html": [3, 16], "flag": [3, 9, 10], "data_constructor": 3, "alia": [3, 9, 10, 16], "bulk_fetch_experiment_data": 3, "bulk_fetch_trial_data": 3, "fetch_data_prefer_lookup": 3, "fallback": [3, 16], "fetch_experiment_data_multi": 3, "fetch_trial_data_multi": 3, "fetch_multi_group_by_metr": 3, "_metrics_by_class": 3, "superclass": [3, 10], "assum": [3, 9, 10, 16], "maybe_raise_deprecation_warning_on_class_method": 3, "period_of_new_data_after_trial_complet": 3, "timedelta": [3, 16], "period": [3, 10], "still": [3, 9, 10, 16], "whose": [3, 9, 10], "sort": 3, "pipelin": 3, "land": 3, "even": [3, 16], "otherwis": [3, 9, 10, 16], "maximum": [3, 5, 9, 10, 16], "prevent": 3, "Its": [3, 9], "anywher": 3, "summary_dict": 3, "tb_str": [3, 16], "multi_type_experi": [3, 9], "default_runn": 3, "canon": [3, 9], "tune": 3, "product": [3, 10], "limit": [3, 9, 10], "budget": 3, "simul": [3, 7, 9, 10], "approxim": [3, 9, 10, 16], "final": [3, 16], "fed": 3, "multi": [3, 9, 10], "task": [3, 9, 10, 16], "see": [3, 9, 10, 16], "tutori": [3, 7], "canonical_nam": 3, "proxi": 3, "add_trial_typ": 3, "default_tri": 3, "indici": [3, 16], "metric_to_trial_typ": 3, "oc": 3, "trial_type_to_runn": 3, "update_runn": 3, "multiobject": [3, 9], "extra_kwarg": 3, "compos": [3, 16], "compon": [3, 10, 16], "acquisit": [3, 9], "objective_weight": [3, 9, 10], "get_unconstrainable_metr": 3, "incompat": 3, "scalarizedobject": 3, "linear": [3, 9, 10], "scalar": [3, 9, 10], "metric_weight": 3, "featur": [3, 9, 10, 16], "observationfeatur": [3, 9], "observationdata": [3, 9], "ndarrai": [3, 9, 10, 16], "arrai": [3, 9, 10, 16], "x": [3, 9, 10, 16], "covariance_matrix": 3, "matric": [3, 10], "m1": [3, 9, 10], "m2": [3, 10], "means_dict": 3, "split": [3, 9, 16], "everyth": [3, 10, 16], "replace_paramet": 3, "make": [3, 9, 10, 16], "hierarch": [3, 9], "from_arm": 3, "update_featur": 3, "new_featur": 3, "overwrit": 3, "get_feature_col": 3, "is_map_data": 3, "observations_from_data": 3, "statuses_to_includ": 3, "statuses_to_include_map_metr": 3, "pull": [3, 5], "diagon": 3, "matrix": [3, 10, 16], "observations_from_map_data": 3, "map_keys_as_paramet": 3, "learn": [3, 10], "frequent": 3, "lead": 3, "intract": 3, "recombine_observ": 3, "observation_featur": [3, 9], "observation_data": [3, 9], "separate_observ": 3, "multiobjectiveoptimizationconfig": [3, 9], "outcome_constraint": [3, 9, 10], "objective_threshold": [3, 9, 10], "risk_measur": [3, 9, 10], "configur": [3, 5, 9, 10, 16], "compris": 3, "threshold": [3, 9, 10], "risk": [3, 9, 10], "individu": [3, 9, 10, 16], "upper": [3, 10, 16], "good": [3, 16], "rule": 3, "thumb": 3, "below": [3, 9, 10, 16], "accept": [3, 9], "all_constraint": 3, "clone_with_arg": 3, "objective_thresholds_dict": 3, "check_objective_thresholds_match_object": 3, "objectives_by_nam": 3, "objective_metr": 3, "wrong": [3, 5, 16], "direct": [3, 10, 16], "mismatch": 3, "op": [3, 10, 16], "comparisonop": 3, "contribut": [3, 9, 10, 16], "hypervolum": [3, 9, 10], "calcul": [3, 9, 10, 16], "absolut": [3, 9, 10, 16], "constrain": 3, "scale": [3, 9, 10, 16], "percent": [3, 16], "greater": [3, 9, 10, 16], "That": [3, 9, 16], "100": [3, 10, 16], "status_quo_metric_valu": 3, "scalarizedoutcomeconstraint": 3, "len": [3, 10], "choiceparamet": [3, 9], "parameter_typ": 3, "parametertyp": [3, 9], "is_ord": 3, "is_task": [3, 9], "is_fidel": [3, 9], "target_valu": [3, 9], "sort_valu": 3, "discret": [3, 7, 16], "categor": [3, 9], "variabl": [3, 9, 16], "longer": 3, "treat": [3, 9, 10, 16], "target": [3, 9, 10, 16], "encod": [3, 5, 9, 10, 16], "add_valu": 3, "available_flag": 3, "cardin": [3, 9], "domain_repr": 3, "domain": [3, 9, 16], "set_valu": 3, "fixedparamet": [3, 9], "fix": [3, 9, 10], "is_hierarch": 3, "is_numer": 3, "is_valid_typ": 3, "python_typ": 3, "python": [3, 9, 16], "primarili": [3, 9], "unknown": 3, "conform": 3, "rangeparamet": [3, 9], "log_scal": [3, 9], "logit_scal": 3, "rang": [3, 9, 10, 16], "round": [3, 10], "log": [3, 10, 16], "logit": 3, "ensur": [3, 9, 10, 16], "strictli": 3, "set_digit": 3, "set_log_scal": 3, "set_logit_scal": 3, "update_rang": 3, "left": [3, 10], "tol": 3, "5e": 3, "07": 3, "right": [3, 16], "toler": 3, "comparison": [3, 16], "parameter_constraint": [3, 9], "orderconstraint": 3, "lower_paramet": 3, "upper_paramet": 3, "smaller": [3, 10], "clone_with_transformed_paramet": 3, "transformed_paramet": 3, "constraint_dict": 3, "higher": [3, 16], "sum_i": [3, 9, 10], "w_i": [3, 9], "v_i": 3, "w": [3, 9, 16], "vector": [3, 9, 16], "v": [3, 10, 16], "inequ": [3, 9, 10, 16], "parameter_dict": 3, "sumconstraint": 3, "is_upper_bound": 3, "reconstruct": 3, "appli": [3, 5, 9, 10, 16], "validate_constraint_paramet": 3, "basic": [3, 9, 10], "parameter_distribut": 3, "distribution_class": 3, "distribution_paramet": 3, "distribut": [3, 9, 10, 16], "robust": [3, 10], "environment": [3, 9], "nois": [3, 9, 10], "rv_frozen": 3, "scipi": [3, 10, 16], "is_environment": 3, "robustsearchspac": [3, 9], "recommend": [3, 10, 16], "modelbridg": [3, 7, 10, 16], "modelbridge_util": [3, 9], "py": [3, 10, 16], "risk_measure_name_to_class": 3, "extract_risk_measur": [3, 9], "botorch": [3, 7, 9, 16], "poll_available_capac": 3, "capac": [3, 16], "difficult": 3, "implement": [3, 9, 10, 16], "unlimit": 3, "try": [3, 5], "violat": [3, 10], "artifici": 3, "forc": [3, 9, 10, 16], "place": [3, 9, 16], "scheduleropt": 3, "max_pending_tri": 3, "granular": 3, "max_parallel": [3, 5], "generationstep": [3, 5], "advanc": [3, 10, 16], "poll_except": 3, "poll_trial_statu": 3, "poll": 3, "impolement": 3, "report_result": 3, "run_multipl": 3, "effici": [3, 10], "simpli": [3, 9], "loop": [3, 7, 9, 10], "run_trial": [3, 16], "overwritten": 3, "staging_requir": 3, "goe": 3, "hierarchicalsearchspac": 3, "cast_observation_featur": 3, "full": [3, 9, 10, 16], "under": [3, 10, 16], "full_parameter": [3, 16], "proper": [3, 16], "due": [3, 5], "check_membership": 3, "raise_error": 3, "check_all_parameters_pres": 3, "explan": 3, "flatten": [3, 9], "flatten_observation_featur": 3, "inject_dummy_values_to_complete_flat_parameter": 3, "use_random_dummy_valu": 3, "inject": 3, "save": [3, 5, 10, 16], "miss": [3, 9], "middl": 3, "height": 3, "tree": [3, 16], "hierarchical_structure_str": 3, "parameter_names_onli": 3, "show": [3, 9, 10, 16], "concis": 3, "root": [3, 10, 16], "num_sampl": [3, 9, 10], "environmental_vari": 3, "is_environmental_vari": 3, "parameter_nam": [3, 9, 16], "transform_search_spac": [3, 9], "bunch": 3, "parent": [3, 16], "update_paramet": 3, "robustsearchspacedigest": [3, 9], "sample_param_perturb": [3, 9], "sample_environment": [3, 9], "lightweight": [3, 10], "searchspacedigest": [3, 9, 10], "d": [3, 9, 10, 16], "dim": [3, 9, 10, 16], "distribution_sampl": [3, 9], "environmental_sampl": [3, 9], "perturb": 3, "restrict": [3, 16], "p_a": 3, "p_b": 3, "add_paramet": 3, "add_parameter_constraint": 3, "cast_arm": 3, "mostli": 3, "sloppi": 3, "hand": 3, "written": 3, "check_typ": 3, "allow_non": 3, "construct_arm": 3, "is_robust": 3, "out_of_design_arm": 3, "convers": [3, 16], "strip": 3, "down": [3, 10, 16], "null": [3, 10], "range_paramet": 3, "set_parameter_constraint": 3, "summary_df": 3, "choic": [3, 9], "tunable_paramet": 3, "validate_membership": 3, "feature_nam": [3, 10], "ordinal_featur": [3, 9], "categorical_featur": [3, 9, 10], "discrete_choic": [3, 9, 10], "task_featur": [3, 9, 10, 16], "fidelity_featur": [3, 9, 10, 16], "robust_digest": 3, "commun": [3, 10], "ephemer": [3, 10], "extract_search_space_digest": [3, 9], "docstr": [3, 10], "explain": 3, "variou": [3, 16], "l_0": 3, "u_0": 3, "l_d": 3, "u_d": 3, "inclus": 3, "ordin": 3, "l_i": [3, 9], "u_i": [3, 9], "carri": 3, "genetor": 3, "get_metric_mean": 3, "objective_mean": 3, "level": [3, 9, 10, 16], "update_trial_data": 3, "summar": 3, "validate_data_for_tri": 3, "further": 3, "geq": 3, "leq": 3, "merge_model_predict": 3, "predict_append": 3, "tmodelpredict": 3, "mean1": 3, "mean2": 3, "var1": 3, "var2": 3, "other_predict": 3, "validate_evaluation_outcom": 3, "runtim": [3, 16], "suppli": [3, 10, 16], "correct": [3, 16], "validate_fidelity_trial_evalu": 3, "validate_floatlik": 3, "floatlik": 3, "validate_map_dict": 3, "map_dict": 3, "validate_map_trial_evalu": 3, "validate_param_valu": 3, "param_valu": 3, "validate_parameter": 3, "validate_single_metric_data": 3, "validate_trial_evalu": 3, "missingmetr": 3, "best_feasible_object": 3, "feasibl": [3, 9, 10], "cumul": 3, "extend_pending_observ": 3, "extend": [3, 9, 16], "extract_pending_observ": 3, "include_out_of_design_point": 3, "get_pending_observation_featur": 3, "fewer": 3, "get_pending_observation_features_based_on_trial_statu": 3, "faster": [3, 16], "guarante": 3, "accur": 3, "assumpt": [3, 9, 16], "instruct": 3, "get_missing_metr": 3, "observatin": 3, "missing_object": 3, "missing_outcome_constraint": 3, "get_missing_metrics_by_nam": 3, "missing_metr": 3, "entri": [3, 9, 10, 16], "get_model_tim": 3, "spent": 3, "get_model_trace_of_tim": 3, "seek": 3, "among": [3, 10], "happen": [3, 16], "analogu": 3, "speed": [3, 9, 10, 16], "entail": 3, "No": 3, "formatting_util": 3, "data_and_evaluations_from_raw_data": 3, "data_typ": 3, "raw": [3, 5, 9, 10], "unavail": 3, "eventu": [3, 9], "raw_data_to_evalu": 3, "ttrialevalu": 3, "tmaptrialevalu": 3, "batchedtri": 3, "axerror": 5, "hint": 5, "guidanc": 5, "remedi": 5, "axparameterwarn": 5, "axwarn": 5, "warn": [5, 9, 10, 16], "concern": 5, "relat": 5, "paramet": [5, 9, 10, 16], "setup": [5, 9, 16], "axstoragewarn": 5, "datarequirederror": 5, "observ": [5, 9, 10, 16], "distinguish": 5, "trial": [5, 9, 16], "until": 5, "experimentnotfounderror": 5, "objectnotfounderror": 5, "experi": [5, 7, 9, 10, 16], "experimentnotreadyerror": 5, "exposures_unavail": 5, "queri": 5, "immatur": 5, "analys": 5, "incompatibledependencyvers": 5, "imcompat": 5, "instal": 5, "metricdatanotreadyerror": 5, "metric": [5, 7, 9, 10], "finish": 5, "misconfiguredexperi": 5, "incomplet": [5, 10], "incorrect": 5, "nodataerror": 5, "object": [5, 9, 10, 16], "code": [5, 10, 16], "backward": [5, 9], "compat": [5, 10, 16], "inherit": [5, 9, 16], "optimizationcomplet": 5, "hit": 5, "searchspaceexhaust": 5, "generationstrategycomplet": 5, "optimizationshouldstop": 5, "global": [5, 16], "algorithm": [5, 10], "unsupportederror": 5, "unsupport": [5, 9], "made": [5, 9, 10], "seem": 5, "notimplementederror": 5, "nie": 5, "offici": 5, "intent": 5, "perman": 5, "lack": 5, "todo": [5, 9, 10], "unsupportedploterror": 5, "userinputerror": 5, "invalid": 5, "data_provid": 5, "dataprovidererror": 5, "data_provider_error": 5, "dataprovid": 5, "type": [5, 7, 9, 16], "section": 5, "friendli": [5, 16], "missingdataerror": 5, "missing_trial_index": 5, "generation_strategi": 5, "axgenerationexcept": 5, "special": [5, 9, 16], "generationstrategymisconfiguredexcept": 5, "error_info": 5, "generationstrategyrepeatedpoint": 5, "repeatedli": 5, "maxparallelismreachedexcept": 5, "model_nam": 5, "num_run": [5, 16], "step_index": 5, "node_nam": 5, "parallel": [5, 10, 16], "reach": 5, "optimizationconfigrequir": 5, "cvnotsupportederror": 5, "cross": [5, 10], "modelerror": 5, "immutabilityerror": 5, "incorrectdbconfigurationerror": 5, "engin": [5, 10], "session": 5, "incorrectli": 5, "connect": 5, "jsondecodeerror": 5, "json": [5, 7, 10, 16], "decod": [5, 16], "jsonencodeerror": 5, "sqadecodeerror": 5, "sqa": [5, 16], "sqaencodeerror": 5, "ax": 7, "benchmark": 7, "core": [7, 9, 10], "class": [7, 9, 10, 16], "util": 7, "format": [7, 9, 10, 16], "constant": [7, 9], "data": [7, 9, 10, 16], "branin": 7, "chemistri": 7, "hartmann6": [7, 16], "l2": 7, "norm": [7, 10], "noisi": [7, 10], "sklearn": 7, "tensorboard": 7, "torchx": 7, "registri": 7, "torch": 7, "render": 7, "runner": [7, 16], "problem": [7, 9, 10], "singlerunningtrialmixin": 7, "synthet": 7, "backend": 7, "client": 7, "manag": [7, 16], "interact": 7, "identif": 7, "instanti": [7, 9, 10], "withdbsettingsbas": 7, "earlystop": 7, "sqlalchemi": 7, "mysql": 7, "sqlite": 7, "telemetri": 7, "flake8": 7, "plugin": 7, "notebook": [7, 9], "sensit": [7, 9], "stat": [7, 9], "modul": [7, 9, 16], "page": 7, "criterion": 9, "automodul": 9, "transition_criterion": 9, "undoc": 9, "sampler": [9, 16], "sobol": 9, "gp": [9, 10], "ei": 9, "thompson": [9, 16], "reinstanti": 9, "get_model_from_generator_run": 9, "modelregistrybas": 9, "instrument": 9, "__call__": 9, "modelsetup": 9, "model_bridge_class": 9, "model_class": 9, "view_default": 9, "obtain": [9, 10, 16], "eas": 9, "environ": 9, "view_kwarg": 9, "annot": 9, "constructor": [9, 10, 16], "bridge_class": 9, "default_model_kwarg": 9, "standard_bridge_kwarg": 9, "not_saved_model_kwarg": 9, "coupl": 9, "yield": 9, "quasirandom": 9, "model_key_to_model_setup": 9, "scrambl": [9, 10], "randommodelbridg": 9, "sobolgener": [9, 10], "botorch_modular": 9, "bo_mix": 9, "context_sacbo": 9, "contextual_sacbo": 9, "empirical_bayes_thompson": 9, "eb": 9, "fullybayesian": 9, "fullybayesianmoo": 9, "fullybayesianmoo_mtgp": 9, "fullybayesian_mtgp": 9, "gpei": 9, "legacy_botorch": 9, "moo": [9, 10], "saasbo": 9, "saas_mtgp": 9, "st_mtgp": 9, "st_mtgp_legaci": 9, "st_mtgp_nehvi": 9, "uniform": [9, 16], "generatorrun": 9, "models_enum": 9, "after_gen": 9, "oppos": 9, "resum": 9, "rather": [9, 10, 16], "recreat": 9, "TO": 9, "default_ehvi_batch_limit": 9, "composit": 9, "abl": 9, "deleg": 9, "subsequ": 9, "get_gpei": 9, "searchspac": 9, "dtype": [9, 10, 16], "devic": [9, 10, 16], "cpu": 9, "torchmodelbridg": [9, 16], "get_botorch": 9, "removefix": 9, "orderedchoicetointegerrang": 9, "onehot": 9, "inttofloat": 9, "unitx": 9, "standardize_i": 9, "standardizei": 9, "transform_config": 9, "acquisitionfunct": [9, 10], "optimizationconfig": [9, 10], "winsorization_config": 9, "winsorizationconfig": [9, 10], "model_constructor": [9, 10], "tensor": [9, 10, 16], "get_and_fit_model": [9, 10], "model_predictor": [9, 10], "predict_from_model": [9, 10], "acqf_constructor": [9, 10], "botorch_default": 9, "tacqfconstructor": [9, 10], "get_qlognei": [9, 10], "acqf_optim": [9, 10], "scipy_optim": [9, 10], "refit_on_cv": [9, 10], "botorchmodel": [9, 10], "get_empirical_bayes_thompson": 9, "10000": [9, 10, 16], "min_weight": [9, 10], "uniform_weight": [9, 10], "discretemodelbridg": 9, "empir": [9, 10, 16], "bay": [9, 10, 16], "get_factori": 9, "get_sobol": 9, "seed": [9, 10, 16], "init_posit": [9, 10], "fallback_to_sample_polytop": [9, 10], "quasi": 9, "get_thompson": 9, "get_uniform": 9, "uniformgener": [9, 10], "basegenarg": 9, "fixed_featur": [9, 10], "genresult": 9, "best_observation_featur": 9, "status_quo_nam": [9, 16], "status_quo_featur": 9, "fit_out_of_design": [9, 10], "fit_tracking_metr": 9, "fit_on_init": 9, "insid": 9, "cross_valid": [9, 10], "assess": 9, "arm": [9, 10, 16], "consum": 9, "sent": 9, "receiv": [9, 10, 16], "what": [9, 10, 16], "cv_training_data": 9, "cv_test_point": 9, "use_posterior_predict": [9, 10], "posterior": [9, 10, 16], "feature_import": [9, 10], "approach": [9, 10], "analysi": 9, "bayesian": [9, 10, 16], "invers": [9, 16], "lengthscal": [9, 10], "model_gen_opt": [9, 10], "torchoptconfig": [9, 10], "get_training_data": 9, "untransform": 9, "model_spac": 9, "othweris": 9, "estim": [9, 10, 16], "metric1": 9, "metric2": 9, "status_quo_data_by_tri": 9, "statuses_to_fit": 9, "statuses_to_fit_map_metr": 9, "training_in_design": 9, "transform_observation_featur": 9, "transform_observ": 9, "new_data": 9, "scratch": [9, 10], "clamp_observation_featur": 9, "gen_arm": 9, "unwrap_observation_data": 9, "discretemodel": [9, 10], "pure": [9, 16], "randommodel": [9, 10], "awkward": 9, "init": 9, "torchmodel": [9, 10], "torch_dtyp": 9, "torch_devic": 9, "default_model_gen_opt": 9, "evaluate_acquisition_funct": [9, 10], "acq_opt": [9, 10], "joint": [9, 10], "contruct": [9, 10], "infer_objective_threshold": [9, 10], "pareto": [9, 10], "frontier": [9, 10], "heurist": [9, 10], "nadir": [9, 10], "back": [9, 10], "model_best_point": 9, "validate_optimization_config": 9, "pairwisemodelbridg": 9, "map_torch": 9, "maptorchmodelbridg": 9, "map_data_limit_rows_per_metr": 9, "map_data_limit_rows_per_group": 9, "mapdata": 9, "surrog": 9, "parameters_with_map_kei": 9, "array_to_observation_data": 9, "f": [9, 10, 16], "m": [9, 10, 16], "check_has_multi_objective_and_data": 9, "extract_objective_threshold": 9, "Will": 9, "nan": [9, 10, 16], "extract_objective_weight": 9, "give": [9, 10, 16], "multipli": [9, 10], "extract_outcome_constraint": 9, "outcomeconstraint": 9, "extract_parameter_constraint": 9, "parameterconstraint": 9, "param_nam": 9, "riskmeasur": 9, "riskmeasuremcobject": [9, 10], "extract_robust_digest": 9, "digest": 9, "regard": 9, "choicetonumericchoic": 9, "feasible_hypervolum": 9, "get_fixed_featur": 9, "reformat": 9, "get_fixed_features_from_experi": 9, "get_pareto_frontier_and_config": 9, "modelbridge_modul": 9, "trefpoint": 9, "use_model_predict": 9, "frontier_evalu": [9, 10], "front": 9, "region": 9, "interest": 9, "four": 9, "frontier_observ": 9, "obj_w": 9, "obj_t": 9, "y": [9, 10, 16], "selected_metr": 9, "observation_data_to_arrai": 9, "observation_features_to_arrai": 9, "obsf": 9, "observed_hypervolum": 9, "hyperrectangl": [9, 10], "observed_pareto_fronti": 9, "pareto_fronti": [9, 10], "descend": [9, 16], "parse_observation_featur": 9, "candidate_metadata": [9, 10], "np": [9, 16], "pending_observations_as_array_list": 9, "outcome_nam": [9, 10], "predicted_hypervolum": 9, "predicted_pareto_fronti": 9, "lie": [9, 10], "process_contextual_dataset": 9, "dataset": [9, 10, 16], "superviseddataset": [9, 10], "parameter_decomposit": 9, "metric_decomposit": 9, "contextualdataset": 9, "context": [9, 10, 16], "context1": [9, 10], "p1_c1": [9, 10], "p2_c1": [9, 10], "context2": [9, 10], "p1_c2": [9, 10], "p2_c2": [9, 10], "breakdown": 9, "m1_c1": 9, "m2_c1": 9, "m3_c1": 9, "m1_c2": 9, "m2_c2": 9, "m3_c2": 9, "transform_callback": 9, "closur": [9, 10], "trip": [9, 10], "de": 9, "revers": [9, 16], "_model_gen": 9, "roundtrip": 9, "validate_and_apply_final_transform": 9, "linear_constraint": [9, 10], "final_transform": 9, "built": 9, "prediction_util": 9, "predict_at_point": 9, "scalarized_metric_config": 9, "deviat": [9, 16], "aggreg": [9, 16], "agg": 9, "metric1_c1": 9, "metric1_c2": 9, "predict_by_featur": 9, "label_to_feature_dict": 9, "label": [9, 10], "tconfig": 9, "adapt": 9, "potenti": [9, 10, 16], "forward": [9, 10, 16], "partial": [9, 16], "ident": [9, 16], "noth": [9, 10, 16], "effort": 9, "transform_optimization_config": 9, "privat": [9, 16], "_transform_search_spac": 9, "_transform_parameter_distribut": 9, "untransform_observation_featur": 9, "untransform_observ": 9, "untransform_outcome_constraint": 9, "modifi": [9, 10, 16], "portion": 9, "searh": 9, "transform_": 9, "term": [9, 16], "untransform_": 9, "seen": 9, "capparamet": 9, "cap": 9, "new_upper_range_valu": 9, "centeredunitx": 9, "target_lb": 9, "target_rang": 9, "choiceencod": 9, "deprecatedtransformmixin": 9, "deprec": [9, 10], "interv": [9, 10, 16], "unord": 9, "n_choic": 9, "iff": [9, 16], "onto": [9, 10], "taskchoicetointtaskchoic": 9, "orderedchoiceencod": 9, "contigu": [9, 16], "transform_choice_valu": 9, "p": [9, 10], "rescal": 9, "convertmetricnam": 9, "offlin": 9, "onlin": 9, "turn": 9, "off": [9, 10], "enabl": [9, 10], "perform_untransform": 9, "convert_mt_observ": 9, "multitypeexperi": 9, "mt": 9, "tconfig_from_mt_experi": 9, "plug": [9, 16], "use_raw_status_quo": 9, "intrangetochoic": 9, "randomized_round": 9, "min_choic": 9, "varianc": [9, 10, 16], "ivw_metric_merg": 9, "obsd": 9, "conflicting_noiseless": [9, 16], "correctli": [9, 10], "ybar1": 9, "y_i": [9, 16], "ybar2": 9, "sum_j": 9, "w_j": 9, "y_j": 9, "infin": 9, "inversegaussiancdfi": 9, "base_modelbridg": 9, "cdf": 9, "gaussian": [9, 10], "logi": 9, "natur": 9, "match_ci_width": 9, "procedur": 9, "width": 9, "ci": 9, "delta": [9, 16], "lognorm_to_norm": 9, "mu_ln": 9, "cov_ln": 9, "mvn": 9, "mu_n": 9, "cov_n": 9, "cov_n_": 9, "ij": 9, "cov_ln_": 9, "mu_ln_": 9, "mu_n_": 9, "j": [9, 10], "ii": 9, "95": [9, 10], "norm_to_lognorm": 9, "suffici": 9, "statist": 9, "exp": 9, "jj": 9, "mapunitx": 9, "undergo": 9, "extra": 9, "mergerepeatedmeasur": 9, "repeat": 9, "intention": 9, "stationar": 9, "correl": 9, "metricsastask": 9, "metric_task_map": 9, "metric3": 9, "hot": 9, "strict": 9, "choos": [9, 10], "With": [9, 16], "c": [9, 16], "restor": [9, 10, 16], "ti": 9, "broken": 9, "randomli": [9, 16], "9": 9, "onehotencod": 9, "inverse_transform": 9, "encoded_label": 9, "transorm": 9, "One": 9, "percentilei": 9, "percentil": [9, 10], "leav": [9, 10, 16], "tunabl": [9, 10], "contains_constrained_integ": 9, "transform_paramet": 9, "randomized_onehot_round": 9, "neg": [9, 10, 16], "zero": [9, 16], "randomized_round_paramet": 9, "strict_onehot_round": 9, "max": [9, 16], "searchspacetochoic": 9, "thompsonsampl": [9, 10], "use_ord": 9, "compute_standardization_paramet": 9, "defaultdict": 9, "std": [9, 16], "stratifiedstandardizei": 9, "stratifi": 9, "exactli": 9, "stratif": 9, "taskencod": 9, "timeasfeatur": 9, "durat": 9, "cube": 9, "revis": 9, "transformtonewsq": 9, "baserelativ": 9, "sq": 9, "offset": [9, 16], "often": [9, 10], "ratio": [9, 16], "control_as_const": [9, 16], "opt": 9, "opt_config": 9, "trialastask": 9, "trial_param1": 9, "level1": 9, "level2": 9, "trial_level_map": 9, "lowest": 9, "target_tri": 9, "l": 9, "x_tilde_i": 9, "x_i": 9, "wtx": 9, "gtx_tild": 9, "h": 9, "g_i": 9, "wtl": 9, "closestlookupdict": 9, "closest": 9, "construct_new_search_spac": 9, "derelativize_optimization_config_with_raw_status_quo": 9, "get_data": 9, "raise_on_non_finite_data": 9, "finit": 9, "inf": 9, "match_ci_width_trunc": 9, "margin": [9, 10, 16], "001": [9, 16], "lower_bound": 9, "upper_bound": 9, "clip_mean": 9, "clip": 9, "lai": 9, "derelativize_with_raw_status_quo": 9, "succe": 9, "lower_quantile_margin": [9, 10], "30": 9, "wherea": 9, "metric_1": 9, "metric_2": 9, "upper_quantile_margin": [9, 10], "20": [9, 10, 16], "won": 9, "cutoff": 9, "auto_wins_quantil": 9, "quantil": [9, 10], "boundari": 9, "lower_boundari": [9, 10], "upper_boundari": [9, 10], "discourag": [9, 16], "strongli": 9, "encourag": 9, "relativizewithconstantcontrol": 9, "unrelativ": [9, 16], "statstool": 9, "get_metric_index": 9, "best_point": 10, "vari": 10, "share": 10, "deserialize_st": 10, "serialized_st": 10, "serialize_st": 10, "raw_stat": 10, "_get_stat": 10, "readi": 10, "involv": 10, "file": 10, "parameter_valu": 10, "xs_train": 10, "ys_train": 10, "yvars_train": 10, "x_test": 10, "k_i": 10, "yvar": 10, "feature_index": 10, "torchgenresult": 10, "search_space_digest": 10, "torch_opt_config": 10, "dataclass": 10, "compactli": 10, "becom": 10, "th": 10, "rounding_func": 10, "opt_config_metr": 10, "is_moo": 10, "domin": [10, 16], "dimension": [10, 16], "commonli": [10, 16], "optimizer_kwarg": [10, 16], "mimic": 10, "optimize_acqf": 10, "though": 10, "model_gen_kwarg": 10, "num_restart": [10, 16], "sequenti": [10, 16], "batch_limit": 10, "maxit": 10, "200": 10, "torchmodellik": 10, "protocol": 10, "stand": 10, "o": 10, "add_fixed_featur": 10, "tunable_point": 10, "tunable_feature_indic": 10, "as_arrai": 10, "mix": 10, "best_in_sample_point": 10, "posterior_objective_mean": 10, "baselin": [10, 16], "prob": 10, "least": 10, "posit": [10, 16], "min": [10, 16], "best_point_method": 10, "max_util": 10, "feasible_threshold": 10, "utility_baselin": 10, "probability_threshold": 10, "feasibility_mc_sampl": 10, "mc": [10, 16], "10k": 10, "best_observed_point": 10, "check_dupl": 10, "check_param_constraint": 10, "enumerate_discrete_combin": 10, "filter_constraints_and_fixed_featur": 10, "get_observ": 10, "mk_discrete_choic": 10, "ssd": 10, "rejection_sampl": 10, "gen_unconstrain": 10, "max_draw": 10, "existing_point": 10, "reject": 10, "unconstrain": 10, "_gen_unconstrain": 10, "duplic": [10, 16], "attemp": 10, "draw": 10, "validate_bound": 10, "fixed_feature_indic": 10, "winsor": 10, "increas": [10, 16], "decreas": [10, 16], "invert": 10, "80th": 10, "lesser": 10, "larger": [10, 16], "unaffect": 10, "empiricalbayesthompsonsampl": 10, "jame": [10, 16], "stein": [10, 16], "fullfactorialgener": 10, "max_cardin": 10, "check_cardin": 10, "suppress": [10, 16], "proport": [10, 16], "winner": 10, "mont": [10, 16], "carlo": [10, 16], "generated_point": 10, "skeleton": 10, "As": 10, "_gen_sampl": 10, "altern": 10, "twice": 10, "fast": 10, "hitandrunpolytopesampl": 10, "permut": 10, "remain": [10, 16], "sobolengin": 10, "singleton": 10, "init_engin": 10, "n_tunable_featur": 10, "best_point_recommend": 10, "recommend_best_observed_point": 10, "warm_start_refit": [10, 16], "use_input_warp": 10, "use_loocv_pseudo_likelihood": 10, "customiz": 10, "qlognei": 10, "top": 10, "now": [10, 16], "refit": 10, "fold": 10, "covar_module_prior": 10, "lengthscale_prior": 10, "gammaprior": 10, "lkjcovarianceprior": 10, "sd_prior": 10, "nonneg": 10, "task_covar_prior": 10, "eta": 10, "lkj": 10, "state_dict": [10, 16], "pytorch": [10, 16], "x_observ": 10, "x_pend": 10, "acq_funct": 10, "craft": 10, "inequality_constraint": 10, "equality_constraint": 10, "callback": 10, "target_fidel": 10, "get_feature_importances_from_botorch_model": 10, "modulelist": 10, "get_rounding_func": 10, "get_nei": 10, "qnei": 10, "get_qei": 10, "get_acqf": 10, "acquisition_function_nam": 10, "wrapper": [10, 16], "simpl": [10, 16], "path": [10, 16], "solv": 10, "wrap": [10, 16], "qei": 10, "def": [10, 16], "acqf": 10, "monte_carlo": 10, "qexpectedimprov": 10, "refit_model": 10, "multitask_gp_rank": 10, "gpytorch": 10, "gpytorchmodel": 10, "logic": [10, 16], "modellistgp": 10, "statement": 10, "line": [10, 16], "96": 10, "137": 10, "care": [10, 16], "modular": 10, "_get_model": 10, "bodi": 10, "legaci": 10, "get_qlogei": 10, "qlogei": 10, "get_warping_transform": 10, "batch_shap": 10, "warp": 10, "recommend_best_out_of_sample_point": 10, "un": 10, "raw_sampl": [10, 16], "joint_optim": 10, "adpat": 10, "coeffici": 10, "rh": 10, "condit": [10, 16], "knowledgegradi": 10, "cost_intercept": [10, 16], "linear_trunc": 10, "knowledg": 10, "gradient": [10, 16], "shot": 10, "cost": 10, "intercept": 10, "affin": 10, "optimz": 10, "downsampl": [10, 16], "exponenti": 10, "decai": 10, "lineartruncatedfidelitykernel": 10, "multiobjectivebotorchmodel": 10, "get_qlognehvi": 10, "pareto_frontier_evalu": 10, "sign": [10, 16], "daulton2020qehvi": 10, "daulton": 10, "balandat": 10, "bakshi": 10, "differenti": 10, "neural": 10, "33": 10, "2020": 10, "daulton2021nehvi": 10, "34": [10, 16], "2021": [10, 16], "ament2023logei": 10, "ament": 10, "eriksson": 10, "unexpect": [10, 16], "36": 10, "2023": 10, "get_ehvi": 10, "mc_sampl": 10, "128": [10, 16], "alpha": 10, "qexpectedhypervolumeimprov": 10, "acqusit": 10, "submit": 10, "512": 10, "hyperparamet": 10, "partit": [10, 16], "exact": [10, 16], "complex": [10, 16], "get_nehvi": 10, "prune_baselin": 10, "marginalize_dim": 10, "cache_root": 10, "qnoisyexpectedhypervolumeimprov": 10, "prune": 10, "nei": 10, "fulli": [10, 16], "get_qlogehvi": 10, "qlogexpectedhypervolumeimprov": 10, "qlognoisyexpectedhypervolumeimprov": 10, "get_weighted_mc_objective_and_objective_threshold": 10, "multi_object": 10, "weightedmcmultioutputobject": 10, "subset_idc": 10, "relativ": [10, 16], "infer_reference_point": 10, "put": [10, 16], "matter": 10, "unobserv": 10, "scipy_optimizer_list": 10, "acq_function_list": 10, "adaptor": 10, "ith": 10, "acquisition_funct": 10, "botorch_acqf_class": 10, "directori": [10, 16], "subcompon": 10, "acquistitionfunct": 10, "default_botorch_acqf_class": 10, "compute_model_depend": 10, "super": 10, "propag": 10, "multifidelityknowledgegradi": 10, "q": 10, "broadcast": 10, "get_botorch_objective_and_transform": 10, "mcacquisitionobject": 10, "posteriortransform": 10, "optimizer_opt": 10, "post": 10, "post_processing_func": 10, "mbm": 10, "surrogate_spec": 10, "surrogatespec": 10, "acquisition_class": 10, "acquisition_opt": 10, "conveni": 10, "auto": 10, "liu": 10, "sole": 10, "reoptim": 10, "refit_on_": 10, "n_i": 10, "accessor": 10, "unchang": [10, 16], "additional_model_input": 10, "caveat": 10, "modellist": 10, "base_kernel": 10, "pre": 10, "only_surrog": [10, 16], "outcomes_by_surrogate_label": 10, "output_ord": 10, "stitch": 10, "locat": [10, 16], "predict_from_surrog": 10, "surrogate_label": 10, "botorch_model_class": 10, "botorch_model_kwarg": 10, "mll_class": 10, "mll": 10, "marginal_log_likelihood": 10, "marginalloglikelihood": 10, "exact_marginal_log_likelihood": 10, "exactmarginalloglikelihood": 10, "mll_kwarg": 10, "covar_module_class": 10, "covar_module_kwarg": 10, "likelihood_class": 10, "likelihood": 10, "likelihood_kwarg": 10, "input_transform_class": 10, "inputtransform": 10, "input_transform_opt": 10, "outcome_transform_class": 10, "outcometransform": 10, "outcome_transform_opt": 10, "allow_batched_model": 10, "__init__": [10, 16], "respons": 10, "requisit": 10, "single_surrogate_onli": 10, "l1_norm_func": 10, "init_point": 10, "l1_norm": 10, "l1": 10, "genericdeterministicmodel": 10, "seboacquisit": 10, "sparsiti": 10, "free": 10, "l0": 10, "novel": 10, "relax": 10, "homotopi": 10, "clamp_candid": 10, "target_point": 10, "clamp_tol": 10, "tkwarg": 10, "clamp": 10, "get_batch_initial_condit": 10, "x_pareto": 10, "model_opt": 10, "mll_option": 10, "covar_module_opt": 10, "likelihood_opt": 10, "chain": 10, "chainedoutcometransform": 10, "chainedinputtransform": 10, "integer_indic": 10, "pars": 10, "covar_module_argpars": 10, "best_out_of_sample_point": 10, "seed_inn": [10, 16], "qmc": [10, 16], "acqf_valu": 10, "1d": 10, "0d": 10, "compute_diagnost": 10, "diagnost": 10, "und": 10, "some_state_dict": 10, "construct_input": 10, "training_data": 10, "check_outcome_dataset_match": 10, "exact_match": 10, "choose_botorch_acqf_class": 10, "choose_model_class": 10, "construct_acquisition_and_optimizer_opt": 10, "acqf_opt": 10, "convert_to_block_design": 10, "fit_botorch_model": 10, "get_post_processing_func": 10, "get_subset_dataset": 10, "subset_outcome_nam": 10, "subset_state_dict": 10, "submodel_index": 10, "submodel": 10, "use_model_list": 10, "scalematernkernel": 10, "ard_num_dim": 10, "outputscale_prior": 10, "lengthscale_constraint": 10, "outputscale_constraint": 10, "scalekernel": 10, "temporalkernel": 10, "temporal_featur": 10, "matern_ard_num_dim": 10, "temporal_lengthscale_prior": 10, "period_length_prior": 10, "fixed_period_length": 10, "temporal_lengthscale_constraint": 10, "period_length_constraint": 10, "matern": [10, 16], "tempor": 10, "dai": 10, "lceabo": 10, "decomposit": 10, "cat_feature_dict": 10, "embs_feature_dict": 10, "context_weight_dict": 10, "embs_dim_list": 10, "gp_model_arg": 10, "latent": 10, "embed": 10, "lce": 10, "train_embed": 10, "boolen": 10, "embds_feature_dict": 10, "fidelity_model_id": 10, "lceagp": 10, "get_map_model": 10, "train_x": 10, "train_i": 10, "train_yvar": 10, "contextu": [10, 16], "lcembo": 10, "context_cat_featur": 10, "context_emb_featur": 10, "modelistgp": 10, "lcem": 10, "sacbo": 10, "sacgp": 10, "structuraladditivecontextualgp": 10, "generate_model_space_decomposit": 10, "subsetmodeldata": 10, "acquisitionobject": 10, "mainli": [10, 16], "get_out_of_sample_best_point_acqf": 10, "pick": 10, "is_noiseless": 10, "noiseless": 10, "normalize_indic": 10, "pick_best_out_of_sample_point_acqf_class": 10, "gaussianmixtureposterior": 10, "mixtur": 10, "ideal": 10, "randomize_objective_weight": 10, "random_scalarization_distribut": 10, "simplex": 10, "hyperspher": 10, "subset_model": [10, 16], "subset_output": 10, "tensor_callable_to_array_cal": 10, "tensor_func": 10, "metaclass": 16, "db_id": 16, "extens": 16, "reserv": 16, "alphabet": 16, "acqf_kwarg": 16, "acquisition_function_kwarg": 16, "autoset_surrog": 16, "batch_init_condit": 16, "batch_initial_condit": 16, "candidate_set": 16, "candidate_s": 16, "cost_aware_util": 16, "current_valu": 16, "expand": 16, "expected_acqf_v": 16, "expected_acquisition_valu": 16, "fidelity_weight": 16, "frac_random": 16, "immutable_search_space_and_opt_conf": 16, "num_fantasi": 16, "num_inner_restart": 16, "num_trace_observ": 16, "pairwise_preference_queri": 16, "pairwise_pref_queri": 16, "preference_data": 16, "primary_surrog": 16, "primari": 16, "project": 16, "raw_inner_sampl": 16, "resumed_from_storage_t": 16, "resumed_from_storage_timestamp": 16, "trial_completion_timestamp": 16, "x_baselin": 16, "classdecor": 16, "templat": 16, "decorate_cal": 16, "disable_logg": 16, "_call_func": 16, "imperfect": 16, "lot": 16, "staticmethod": 16, "situat": 16, "decorate_priv": 16, "thing": 16, "But": 16, "escap": 16, "decorate_class": 16, "klass": 16, "sphinx": 16, "et": 16, "al": 16, "copy_doc": 16, "src": 16, "_t": 16, "cat": 16, "mamal": 16, "is_felin": 16, "dataframe_equ": 16, "df1": 16, "df2": 16, "datetime_equ": 16, "dt1": 16, "dt2": 16, "microsecond": 16, "equality_typecheck": 16, "eq_func": 16, "__eq__": 16, "is_ax_equ": 16, "one_v": 16, "other_v": 16, "date": 16, "same_el": 16, "recurs": 16, "isclos": 16, "almost": 16, "object_attribute_dicts_equ": 16, "one_dict": 16, "other_dict": 16, "skip_db_id_check": 16, "_experi": 16, "_model": 16, "hard": 16, "__dict__": 16, "id": 16, "confirm": 16, "reload": 16, "db": 16, "object_attribute_dicts_find_unequal_field": 16, "fast_return": 16, "unequ": 16, "soon": 16, "list1": 16, "list2": 16, "execute_with_timeout": 16, "partial_func": 16, "timeout": 16, "thread": 16, "too": 16, "long": 16, "functool": 16, "handle_exceptions_in_retri": 16, "no_retry_except": 16, "retry_except": 16, "suppress_error": 16, "check_message_contain": 16, "last_retri": 16, "wrap_error_message_in": 16, "retry_on_except": 16, "exception_typ": 16, "no_retry_on_exception_typ": 16, "retri": 16, "suppress_all_error": 16, "default_return_on_suppress": 16, "initial_wait_second": 16, "standalon": 16, "catch": 16, "baseclass": 16, "supertyp": 16, "caught": 16, "exhaust": 16, "default_return_on_suppres": 16, "consist": 16, "original_error_typ": 16, "original_error_msg": 16, "stack": 16, "trace": 16, "doubl": 16, "minut": 16, "consolidate_kwarg": 16, "kwargs_iter": 16, "earlier": 16, "referenc": 16, "somewhat": 16, "redund": 16, "filter_kwarg": 16, "get_function_argument_nam": 16, "get_function_default_argu": 16, "warn_on_kwarg": 16, "callable_with_kwarg": 16, "cater": 16, "older": 16, "newer": 16, "axoutputnamefilt": 16, "output_nam": 16, "logrecord": 16, "build_file_handl": 16, "filepath": 16, "streamhandl": 16, "build": 16, "stream": 16, "handler": 16, "filehandl": 16, "build_stream_handl": 16, "40": 16, "get_logg": 16, "force_nam": 16, "axlogg": 16, "my_output_nam": 16, "stderr": 16, "hander": 16, "setlevel": 16, "discard": 16, "ultim": 16, "prepend": 16, "make_indices_str": 16, "min_idx": 16, "max_idx": 16, "idx_1": 16, "idx_2": 16, "idx_n": 16, "set_stderr_log_level": 16, "print": 16, "mock_patch_method_origin": 16, "mock_path": 16, "original_method": 16, "magicmock": 16, "patch": 16, "set_rng_se": 16, "with_rng_se": 16, "exit": 16, "is_err": 16, "is_ok": 16, "ok": 16, "untouch": 16, "map_err": 16, "success": 16, "map_or": 16, "map_or_els": 16, "default_op": 16, "unpack": 16, "unwrap": 16, "noreturn": 16, "unwraperror": 16, "explicitli": 16, "unwrap_or": 16, "unwrap_or_els": 16, "unwrap_or_default": 16, "unwrap_err": 16, "exception": 16, "rusti": 16, "monad": 16, "doc": 16, "rust": 16, "lang": 16, "org": 16, "someth": 16, "gone": 16, "real": 16, "world": 16, "impropperli": 16, "deseri": 16, "enrol": 16, "core_encod": 16, "mixin": 16, "circular": 16, "inplement": 16, "json_stor": 16, "transitioncriterion": 16, "callable_from_refer": 16, "callable_to_refer": 16, "extract_init_arg": 16, "class_": 16, "named_tuple_to_dict": 16, "exclude_field": 16, "testcas": 16, "methodnam": 16, "runtest": 16, "write": 16, "unittest": 16, "assertaxbaseequ": 16, "msg": 16, "assert": 16, "assertdictsalmostequ": 16, "consider_nans_equ": 16, "assertequ": 16, "assertraiseson": 16, "exc": 16, "regex": 16, "abstractcontextmanag": 16, "silenc": 16, "silence_stderr": 16, "setup_import_mock": 16, "mocked_import_path": 16, "mock_config_dict": 16, "expens": 16, "obvious": 16, "affect": 16, "sure": 16, "child": 16, "reli": 16, "current_timestamp_in_milli": 16, "timestamps_in_rang": 16, "to_d": 16, "to_t": 16, "unixtime_to_pandas_t": 16, "unixtim": 16, "utc": 16, "checked_cast": 16, "typ": 16, "val": 16, "safeti": 16, "signal": 16, "typecheck": 16, "check_cast": 16, "checked_cast_dict": 16, "key_typ": 16, "checked_cast_list": 16, "old_l": 16, "checked_cast_opt": 16, "checked_cast_to_tupl": 16, "not_non": 16, "unbox": 16, "typeutils_nonn": 16, "numpy_type_to_python_typ": 16, "coerc": 16, "typeutils_torch": 16, "torch_type_from_str": 16, "type_nam": 16, "torch_type_to_str": 16, "flake8_plugin": 16, "docstring_check": 16, "a000": 16, "node": 16, "ast": 16, "docstringcheck": 16, "filenam": 16, "public": 16, "fikenam": 16, "docstringcheckervisitor": 16, "nodevisitor": 16, "check_a000": 16, "visit_asyncfunctiondef": 16, "classdef": 16, "visit_classdef": 16, "visit_functiondef": 16, "functiondef": 16, "lineno": 16, "col": 16, "is_copy_doc_cal": 16, "tri": 16, "guess": 16, "syntact": 16, "alias": 16, "new_error": 16, "errorid": 16, "should_check": 16, "synthetic_funct": 16, "aug_branin": 16, "syntheticfunct": 16, "augment": 16, "minima": 16, "aug_hartmann6": 16, "frombotorch": 16, "botorch_synthetic_funct": 16, "synthetictestfunct": 16, "fmax": 16, "fmin": 16, "informative_failure_on_non": 16, "attr": 16, "required_dimension": 16, "from_botorch": 16, "derivative_gp": 16, "get_kxx_inv": 16, "get_kxx_dx": 16, "kernel_typ": 16, "rbf": 16, "analyt": 16, "kernel": 16, "r": 16, "get_kxx_dx2": 16, "posterior_deriv": 16, "multivariatenorm": 16, "gibo": 16, "sarah": 16, "muller": 16, "alexand": 16, "von": 16, "rohr": 16, "sebastian": 16, "trimp": 16, "local": 16, "polici": 16, "neurip": 16, "derivative_measur": 16, "gpdgsmgpmean": 16, "y_scale": 16, "num_mc_sampl": 16, "input_qmc": 16, "num_bootstrap_sampl": 16, "discrete_featur": 16, "transform_fun": 16, "bootstrap_indic": 16, "gradient_absolute_measur": 16, "var_mc": 16, "stderr_mc": 16, "gradient_measur": 16, "gradients_square_measur": 16, "squar": 16, "mean_gradi": 16, "mean_gradients_btsp": 16, "gpdgsmgpsampl": 16, "num_gp_sampl": 16, "gp_sample_qmc": 16, "samples_gradi": 16, "samples_gradients_btsp": 16, "compute_derivatives_from_model_list": 16, "model_list": 16, "averag": 16, "pseudo": 16, "sample_discrete_paramet": 16, "input_mc_sampl": 16, "uniformli": 16, "grid": 16, "sobol_measur": 16, "gaussianlinkmean": 16, "var": 16, "probitlinkmean": 16, "sobolsensit": 16, "input_funct": 16, "second_ord": 16, "bootstrap_arrai": 16, "evalute_funct": 16, "f_a_b_abi": 16, "devid": 16, "entir": 16, "first_order_indic": 16, "generate_all_input_matrix": 16, "second_order_indic": 16, "first_order_idx": 16, "first_order_idxs_btsp": 16, "bootstrap": 16, "total_order_indic": 16, "sobolsensitivitygpmean": 16, "link_funct": 16, "mini_batch_s": 16, "sobolsensitivitygpsampl": 16, "1000": 16, "var_gp": 16, "stderr_gp": 16, "ax_parameter_sen": 16, "model_bridg": 16, "sobol_kwarg": 16, "regardless": 16, "influenc": 16, "unimport": 16, "close": 16, "sensitivity_valu": 16, "plot_feature_importance_by_featur": 16, "compute_sobol_indices_from_model_list": 16, "agresti_coull_sem": 16, "n_numer": 16, "n_denom": 16, "prior_success": 16, "prior_failur": 16, "agresti": 16, "coull": 16, "style": 16, "binomi": 16, "alan": 16, "brent": 16, "american": 16, "statistician": 16, "vol": 16, "52": 16, "1998": 16, "pp": 16, "119": 16, "126": 16, "jstor": 16, "www": 16, "stabl": 16, "2685469": 16, "inverse_variance_weight": 16, "marginal_effect": 16, "versu": 16, "se": 16, "percentag": 16, "positive_part_james_stein": 16, "sigma_i": 16, "shrunk": 16, "shrink": 16, "constitu": 16, "grand": 16, "phi_i": 16, "ybar": 16, "shrinkag": 16, "mu_hat": 16, "shown": 16, "unrestrict": 16, "sigma2_i": 16, "s2": 16, "precis": 16, "tightli": 16, "cluster": 16, "phi": 16, "third": 16, "uncertainti": 16, "sem_i": 16, "mu_hat_i": 16, "means_t": 16, "sems_t": 16, "mean_c": 16, "sem_c": 16, "bias_correct": 16, "cov_mean": 16, "as_perc": 16, "taylor": 16, "mu_t": 16, "mu_c": 16, "expans": 16, "m_t": 16, "m_c": 16, "sigma_c": 16, "sigma_t": 16, "_": 16, "sigma_tc": 16, "s_c": 16, "s_t": 16, "s_tc": 16, "NOT": 16, "divis": 16, "bia": 16, "mean_t": 16, "ab": 16, "sem_hat": 16, "rel_hat": 16, "relativize_data": 16, "total_vari": 16, "backend_simul": 16, "backendsimul": 16, "backendsimulatoropt": 16, "queu": 16, "simtrial": 16, "verbose_log": 16, "concurr": 16, "queue": 16, "all_trial": 16, "from_stat": 16, "backendsimulatorst": 16, "desir": 16, "get_sim_trial_by_index": 16, "lookup_trial_index_statu": 16, "regist": 16, "_queu": 16, "_run": 16, "num_complet": 16, "num_fail": 16, "num_queu": 16, "time_sc": 16, "arbitrarili": 16, "simstatu": 16, "stop_trial": 16, "use_internal_clock": 16, "clock": 16, "max_concurr": 16, "failure_r": 16, "internal_clock": 16, "use_update_as_start_tim": 16, "rate": 16, "coin": 16, "flip": 16, "sens": 16, "verbos": 16, "time_remain": 16, "sim": 16, "sim_runtim": 16, "sim_start_tim": 16, "sim_queued_tim": 16, "sim_completed_tim": 16, "stopper": 16, "trial_list": 16, "fast_botorch_optim": 16, "fast_botorch_optimize_context_manag": 16, "tactic": 16, "assertionerror": 16, "responsibli": 16, "skip_fit_gpytorch_ml": 16, "skip_fit_gpytorch_mll_context_manag": 16, "fit_gpytorch_ml": 16, "slow": 16, "test_init_fil": 16, "inittest": 16, "test_initfil": 16, "buck": 16, "torch_stub": 16, "get_torch_test_data": 16, "float32": 16, "cuda": 16, "constant_nois": 16, "generic_equ": 16, "cnn_util": 16, "cnn": 16, "convolut": 16, "network": 16, "overridden": 16, "although": 16, "recip": 16, "former": 16, "hook": 16, "data_load": 16, "dataload": 16, "classif": 16, "accuraci": 16, "get_partition_data_load": 16, "train_valid_set": 16, "test_set": 16, "downsample_pct": 16, "train_pct": 16, "batch_siz": 16, "num_work": 16, "deterministic_partit": 16, "downsample_pct_test": 16, "worker": 16, "subprocess": 16, "fashion": 16, "load_mnist": 16, "data_path": 16, "mnist": 16, "download": 16, "pt": 16, "split_dataset": 16, "train_load": 16, "lr": 16, "momentum": 16, "weight_decai": 16, "num_epoch": 16, "nn": 16}, "objects": {"ax": [[3, 0, 0, "-", "core"], [5, 0, 0, "-", "exceptions"], [9, 0, 0, "-", "modelbridge"], [10, 0, 0, "-", "models"], [16, 0, 0, "-", "utils"]], "ax.core": [[3, 0, 0, "-", "arm"], [3, 0, 0, "-", "auxiliary"], [3, 0, 0, "-", "base_trial"], [3, 0, 0, "-", "batch_trial"], [3, 0, 0, "-", "experiment"], [3, 0, 0, "-", "formatting_utils"], [3, 0, 0, "-", "generation_strategy_interface"], [3, 0, 0, "-", "generator_run"], [3, 0, 0, "-", "multi_type_experiment"], [3, 0, 0, "-", "observation"], [3, 0, 0, "-", "optimization_config"], [3, 0, 0, "-", "parameter"], [3, 0, 0, "-", "parameter_constraint"], [3, 0, 0, "-", "parameter_distribution"], [3, 0, 0, "-", "risk_measures"], [3, 0, 0, "-", "runner"], [3, 0, 0, "-", "trial"], [3, 0, 0, "-", "types"], [3, 0, 0, "-", "utils"]], "ax.core.arm": [[3, 1, 1, "", "Arm"]], "ax.core.arm.Arm": [[3, 2, 1, "", "clone"], [3, 3, 1, "", "has_name"], [3, 2, 1, "", "md5hash"], [3, 3, 1, "", "name"], [3, 3, 1, "", "name_or_short_signature"], [3, 3, 1, "", "parameters"], [3, 3, 1, "", "signature"]], "ax.core.auxiliary": [[3, 1, 1, "", "AuxiliaryExperiment"], [3, 1, 1, "", "AuxiliaryExperimentPurpose"]], "ax.core.base_trial": [[3, 1, 1, "", "BaseTrial"], [3, 1, 1, "", "TrialStatus"], [3, 5, 1, "", "immutable_once_run"]], "ax.core.base_trial.BaseTrial": [[3, 3, 1, "", "abandoned_arms"], [3, 3, 1, "", "abandoned_reason"], [3, 3, 1, "", "arms"], [3, 3, 1, "", "arms_by_name"], [3, 2, 1, "", "assign_runner"], [3, 2, 1, "", "complete"], [3, 3, 1, "", "completed_successfully"], [3, 3, 1, "", "deployed_name"], [3, 3, 1, "", "did_not_complete"], [3, 3, 1, "", "experiment"], [3, 3, 1, "", "failed_reason"], [3, 2, 1, "", "fetch_data"], [3, 2, 1, "", "fetch_data_results"], [3, 3, 1, "", "generator_runs"], [3, 3, 1, "", "index"], [3, 3, 1, "", "is_abandoned"], [3, 2, 1, "", "lookup_data"], [3, 2, 1, "", "mark_abandoned"], [3, 2, 1, "", "mark_arm_abandoned"], [3, 2, 1, "", "mark_as"], [3, 2, 1, "", "mark_completed"], [3, 2, 1, "", "mark_early_stopped"], [3, 2, 1, "", "mark_failed"], [3, 2, 1, "", "mark_running"], [3, 2, 1, "", "mark_staged"], [3, 2, 1, "", "run"], [3, 3, 1, "", "run_metadata"], [3, 3, 1, "", "runner"], [3, 3, 1, "", "status"], [3, 2, 1, "", "stop"], [3, 3, 1, "", "stop_metadata"], [3, 3, 1, "", "time_completed"], [3, 3, 1, "", "time_created"], [3, 3, 1, "", "time_run_started"], [3, 3, 1, "", "time_staged"], [3, 3, 1, "", "trial_type"], [3, 3, 1, "", "ttl_seconds"], [3, 2, 1, "", "update_run_metadata"], [3, 2, 1, "", "update_stop_metadata"]], "ax.core.base_trial.TrialStatus": [[3, 4, 1, "", "ABANDONED"], [3, 4, 1, "", "CANDIDATE"], [3, 4, 1, "", "COMPLETED"], [3, 4, 1, "", "DISPATCHED"], [3, 4, 1, "", "EARLY_STOPPED"], [3, 4, 1, "", "FAILED"], [3, 4, 1, "", "RUNNING"], [3, 4, 1, "", "STAGED"], [3, 3, 1, "", "expecting_data"], [3, 3, 1, "", "is_abandoned"], [3, 3, 1, "", "is_candidate"], [3, 3, 1, "", "is_completed"], [3, 3, 1, "", "is_deployed"], [3, 3, 1, "", "is_early_stopped"], [3, 3, 1, "", "is_failed"], [3, 3, 1, "", "is_running"], [3, 3, 1, "", "is_terminal"]], "ax.core.batch_trial": [[3, 1, 1, "", "AbandonedArm"], [3, 1, 1, "", "BatchTrial"], [3, 1, 1, "", "GeneratorRunStruct"], [3, 1, 1, "", "LifecycleStage"]], "ax.core.batch_trial.AbandonedArm": [[3, 4, 1, "", "name"], [3, 4, 1, "", "reason"], [3, 4, 1, "", "time"]], "ax.core.batch_trial.BatchTrial": [[3, 3, 1, "", "abandoned_arm_names"], [3, 3, 1, "", "abandoned_arms"], [3, 3, 1, "", "abandoned_arms_metadata"], [3, 2, 1, "", "add_arm"], [3, 2, 1, "", "add_arms_and_weights"], [3, 2, 1, "", "add_generator_run"], [3, 3, 1, "", "arm_weights"], [3, 3, 1, "", "arms"], [3, 3, 1, "", "arms_by_name"], [3, 2, 1, "", "attach_batch_trial_data"], [3, 2, 1, "", "clone"], [3, 2, 1, "", "clone_to"], [3, 3, 1, "", "experiment"], [3, 3, 1, "", "generator_run_structs"], [3, 3, 1, "", "generator_runs"], [3, 3, 1, "", "in_design_arms"], [3, 3, 1, "", "index"], [3, 3, 1, "", "is_factorial"], [3, 3, 1, "", "lifecycle_stage"], [3, 2, 1, "", "mark_arm_abandoned"], [3, 2, 1, "", "normalized_arm_weights"], [3, 2, 1, "", "run"], [3, 2, 1, "", "set_status_quo_and_optimize_power"], [3, 2, 1, "", "set_status_quo_with_weight"], [3, 3, 1, "", "status_quo"], [3, 2, 1, "", "unset_status_quo"], [3, 3, 1, "", "weights"]], "ax.core.batch_trial.GeneratorRunStruct": [[3, 4, 1, "", "generator_run"], [3, 4, 1, "", "weight"]], "ax.core.batch_trial.LifecycleStage": [[3, 4, 1, "", "BAKEOFF"], [3, 4, 1, "", "EXPLORATION"], [3, 4, 1, "", "EXPLORATION_CONCURRENT"], [3, 4, 1, "", "ITERATION"], [3, 4, 1, "", "OFFLINE_OPTIMIZED"]], "ax.core.experiment": [[3, 1, 1, "", "Experiment"], [3, 5, 1, "", "add_arm_and_prevent_naming_collision"]], "ax.core.experiment.Experiment": [[3, 2, 1, "", "add_tracking_metric"], [3, 2, 1, "", "add_tracking_metrics"], [3, 3, 1, "", "arms_by_name"], [3, 3, 1, "", "arms_by_signature"], [3, 3, 1, "", "arms_by_signature_for_deduplication"], [3, 2, 1, "", "attach_data"], [3, 2, 1, "", "attach_fetch_results"], [3, 2, 1, "", "attach_trial"], [3, 2, 1, "", "clone_with"], [3, 3, 1, "", "completed_trials"], [3, 3, 1, "", "data_by_trial"], [3, 3, 1, "", "default_data_constructor"], [3, 3, 1, "", "default_data_type"], [3, 3, 1, "", "default_trial_type"], [3, 3, 1, "", "experiment_type"], [3, 2, 1, "", "fetch_data"], [3, 2, 1, "", "fetch_data_results"], [3, 2, 1, "", "fetch_trials_data"], [3, 2, 1, "", "fetch_trials_data_results"], [3, 2, 1, "", "get_trials_by_indices"], [3, 3, 1, "", "has_name"], [3, 3, 1, "", "immutable_search_space_and_opt_config"], [3, 3, 1, "", "is_moo_problem"], [3, 3, 1, "", "is_test"], [3, 2, 1, "", "lookup_data"], [3, 2, 1, "", "lookup_data_for_trial"], [3, 2, 1, "", "lookup_data_for_ts"], [3, 3, 1, "", "metric_config_summary_df"], [3, 3, 1, "", "metrics"], [3, 3, 1, "", "name"], [3, 2, 1, "", "new_batch_trial"], [3, 2, 1, "", "new_trial"], [3, 3, 1, "", "num_abandoned_arms"], [3, 3, 1, "", "num_trials"], [3, 3, 1, "", "optimization_config"], [3, 3, 1, "", "parameters"], [3, 2, 1, "", "remove_tracking_metric"], [3, 2, 1, "", "reset_runners"], [3, 2, 1, "", "runner_for_trial"], [3, 3, 1, "", "running_trial_indices"], [3, 3, 1, "", "search_space"], [3, 3, 1, "", "status_quo"], [3, 3, 1, "", "sum_trial_sizes"], [3, 2, 1, "", "supports_trial_type"], [3, 3, 1, "", "time_created"], [3, 3, 1, "", "tracking_metrics"], [3, 3, 1, "", "trial_indices_by_status"], [3, 3, 1, "", "trials"], [3, 3, 1, "", "trials_by_status"], [3, 3, 1, "", "trials_expecting_data"], [3, 2, 1, "", "update_tracking_metric"], [3, 2, 1, "", "validate_trials"], [3, 2, 1, "", "warm_start_from_old_experiment"]], "ax.core.formatting_utils": [[3, 1, 1, "", "DataType"], [3, 5, 1, "", "data_and_evaluations_from_raw_data"], [3, 5, 1, "", "raw_data_to_evaluation"]], "ax.core.formatting_utils.DataType": [[3, 4, 1, "", "DATA"], [3, 4, 1, "", "MAP_DATA"]], "ax.core.generation_strategy_interface": [[3, 1, 1, "", "GenerationStrategyInterface"]], "ax.core.generation_strategy_interface.GenerationStrategyInterface": [[3, 2, 1, "", "clone_reset"], [3, 3, 1, "", "experiment"], [3, 2, 1, "", "gen_for_multiple_trials_with_multiple_models"], [3, 3, 1, "", "name"]], "ax.core.generator_run": [[3, 1, 1, "", "ArmWeight"], [3, 1, 1, "", "GeneratorRun"], [3, 1, 1, "", "GeneratorRunType"], [3, 5, 1, "", "extract_arm_predictions"]], "ax.core.generator_run.ArmWeight": [[3, 4, 1, "", "arm"], [3, 4, 1, "", "weight"]], "ax.core.generator_run.GeneratorRun": [[3, 2, 1, "", "add_arm"], [3, 3, 1, "", "arm_signatures"], [3, 3, 1, "", "arm_weights"], [3, 3, 1, "", "arms"], [3, 3, 1, "", "best_arm_predictions"], [3, 3, 1, "", "candidate_metadata_by_arm_signature"], [3, 2, 1, "", "clone"], [3, 3, 1, "", "fit_time"], [3, 3, 1, "", "gen_metadata"], [3, 3, 1, "", "gen_time"], [3, 3, 1, "", "generator_run_type"], [3, 3, 1, "", "index"], [3, 3, 1, "", "model_predictions"], [3, 3, 1, "", "model_predictions_by_arm"], [3, 3, 1, "", "optimization_config"], [3, 3, 1, "", "param_df"], [3, 3, 1, "", "search_space"], [3, 3, 1, "", "time_created"], [3, 3, 1, "", "weights"]], "ax.core.generator_run.GeneratorRunType": [[3, 4, 1, "", "MANUAL"], [3, 4, 1, "", "STATUS_QUO"]], "ax.core.multi_type_experiment": [[3, 1, 1, "", "MultiTypeExperiment"]], "ax.core.multi_type_experiment.MultiTypeExperiment": [[3, 2, 1, "", "add_tracking_metric"], [3, 2, 1, "", "add_trial_type"], [3, 3, 1, "", "default_trial_type"], [3, 3, 1, "", "default_trials"], [3, 4, 1, "", "description"], [3, 2, 1, "", "fetch_data"], [3, 3, 1, "", "metric_to_trial_type"], [3, 4, 1, "", "name"], [3, 2, 1, "", "remove_tracking_metric"], [3, 2, 1, "", "reset_runners"], [3, 2, 1, "", "runner_for_trial"], [3, 2, 1, "", "supports_trial_type"], [3, 2, 1, "", "update_runner"], [3, 2, 1, "", "update_tracking_metric"]], "ax.core.observation": [[3, 1, 1, "", "Observation"], [3, 1, 1, "", "ObservationData"], [3, 1, 1, "", "ObservationFeatures"], [3, 5, 1, "", "get_feature_cols"], [3, 5, 1, "", "observations_from_data"], [3, 5, 1, "", "observations_from_map_data"], [3, 5, 1, "", "recombine_observations"], [3, 5, 1, "", "separate_observations"]], "ax.core.observation.Observation": [[3, 4, 1, "", "arm_name"], [3, 4, 1, "", "data"], [3, 4, 1, "", "features"]], "ax.core.observation.ObservationData": [[3, 4, 1, "", "covariance"], [3, 3, 1, "", "covariance_matrix"], [3, 4, 1, "", "means"], [3, 3, 1, "", "means_dict"], [3, 4, 1, "", "metric_names"]], "ax.core.observation.ObservationFeatures": [[3, 2, 1, "", "clone"], [3, 4, 1, "", "end_time"], [3, 2, 1, "", "from_arm"], [3, 4, 1, "", "parameters"], [3, 4, 1, "", "random_split"], [3, 4, 1, "", "start_time"], [3, 4, 1, "", "trial_index"], [3, 2, 1, "", "update_features"]], "ax.core.optimization_config": [[3, 1, 1, "", "MultiObjectiveOptimizationConfig"], [3, 1, 1, "", "OptimizationConfig"], [3, 5, 1, "", "check_objective_thresholds_match_objectives"]], "ax.core.optimization_config.MultiObjectiveOptimizationConfig": [[3, 3, 1, "", "all_constraints"], [3, 2, 1, "", "clone_with_args"], [3, 3, 1, "", "metrics"], [3, 3, 1, "", "objective"], [3, 3, 1, "", "objective_thresholds"], [3, 3, 1, "", "objective_thresholds_dict"]], "ax.core.optimization_config.OptimizationConfig": [[3, 3, 1, "", "all_constraints"], [3, 2, 1, "", "clone"], [3, 2, 1, "", "clone_with_args"], [3, 3, 1, "", "is_moo_problem"], [3, 3, 1, "", "metrics"], [3, 3, 1, "", "objective"], [3, 3, 1, "", "outcome_constraints"]], "ax.core.parameter": [[3, 1, 1, "", "ChoiceParameter"], [3, 1, 1, "", "FixedParameter"], [3, 1, 1, "", "Parameter"], [3, 1, 1, "", "ParameterType"], [3, 1, 1, "", "RangeParameter"]], "ax.core.parameter.ChoiceParameter": [[3, 2, 1, "", "add_values"], [3, 3, 1, "", "available_flags"], [3, 2, 1, "", "cardinality"], [3, 2, 1, "", "clone"], [3, 3, 1, "", "dependents"], [3, 3, 1, "", "domain_repr"], [3, 3, 1, "", "is_ordered"], [3, 3, 1, "", "is_task"], [3, 2, 1, "", "set_values"], [3, 3, 1, "", "sort_values"], [3, 2, 1, "", "validate"], [3, 3, 1, "", "values"]], "ax.core.parameter.FixedParameter": [[3, 3, 1, "", "available_flags"], [3, 2, 1, "", "cardinality"], [3, 2, 1, "", "clone"], [3, 3, 1, "", "dependents"], [3, 3, 1, "", "domain_repr"], [3, 2, 1, "", "set_value"], [3, 2, 1, "", "validate"], [3, 3, 1, "", "value"]], "ax.core.parameter.Parameter": [[3, 3, 1, "", "available_flags"], [3, 2, 1, "", "cardinality"], [3, 2, 1, "", "cast"], [3, 2, 1, "", "clone"], [3, 3, 1, "", "dependents"], [3, 3, 1, "", "domain_repr"], [3, 3, 1, "", "is_fidelity"], [3, 3, 1, "", "is_hierarchical"], [3, 3, 1, "", "is_numeric"], [3, 2, 1, "", "is_valid_type"], [3, 3, 1, "", "name"], [3, 3, 1, "", "parameter_type"], [3, 3, 1, "", "python_type"], [3, 3, 1, "", "summary_dict"], [3, 3, 1, "", "target_value"], [3, 2, 1, "", "validate"]], "ax.core.parameter.ParameterType": [[3, 4, 1, "", "BOOL"], [3, 4, 1, "", "FLOAT"], [3, 4, 1, "", "INT"], [3, 4, 1, "", "STRING"], [3, 3, 1, "", "is_numeric"]], "ax.core.parameter.RangeParameter": [[3, 3, 1, "", "available_flags"], [3, 2, 1, "", "cardinality"], [3, 2, 1, "", "cast"], [3, 2, 1, "", "clone"], [3, 3, 1, "", "digits"], [3, 3, 1, "", "domain_repr"], [3, 2, 1, "", "is_valid_type"], [3, 3, 1, "", "log_scale"], [3, 3, 1, "", "logit_scale"], [3, 3, 1, "", "lower"], [3, 2, 1, "", "set_digits"], [3, 2, 1, "", "set_log_scale"], [3, 2, 1, "", "set_logit_scale"], [3, 2, 1, "", "update_range"], [3, 3, 1, "", "upper"], [3, 2, 1, "", "validate"]], "ax.core.parameter_constraint": [[3, 1, 1, "", "OrderConstraint"], [3, 1, 1, "", "ParameterConstraint"], [3, 1, 1, "", "SumConstraint"], [3, 5, 1, "", "validate_constraint_parameters"]], "ax.core.parameter_constraint.OrderConstraint": [[3, 2, 1, "", "clone"], [3, 2, 1, "", "clone_with_transformed_parameters"], [3, 3, 1, "", "constraint_dict"], [3, 3, 1, "", "lower_parameter"], [3, 3, 1, "", "parameters"], [3, 3, 1, "", "upper_parameter"]], "ax.core.parameter_constraint.ParameterConstraint": [[3, 3, 1, "", "bound"], [3, 2, 1, "", "check"], [3, 2, 1, "", "clone"], [3, 2, 1, "", "clone_with_transformed_parameters"], [3, 3, 1, "", "constraint_dict"]], "ax.core.parameter_constraint.SumConstraint": [[3, 2, 1, "", "clone"], [3, 2, 1, "", "clone_with_transformed_parameters"], [3, 3, 1, "", "constraint_dict"], [3, 3, 1, "", "is_upper_bound"], [3, 3, 1, "", "op"], [3, 3, 1, "", "parameters"]], "ax.core.parameter_distribution": [[3, 1, 1, "", "ParameterDistribution"]], "ax.core.parameter_distribution.ParameterDistribution": [[3, 2, 1, "", "clone"], [3, 3, 1, "", "distribution"], [3, 3, 1, "", "distribution_class"], [3, 3, 1, "", "distribution_parameters"], [3, 2, 1, "", "is_environmental"]], "ax.core.risk_measures": [[3, 1, 1, "", "RiskMeasure"]], "ax.core.risk_measures.RiskMeasure": [[3, 2, 1, "", "clone"]], "ax.core.runner": [[3, 1, 1, "", "Runner"]], "ax.core.runner.Runner": [[3, 2, 1, "", "clone"], [3, 2, 1, "", "poll_available_capacity"], [3, 2, 1, "", "poll_exception"], [3, 2, 1, "", "poll_trial_status"], [3, 2, 1, "", "run"], [3, 3, 1, "", "run_metadata_report_keys"], [3, 2, 1, "", "run_multiple"], [3, 3, 1, "", "staging_required"], [3, 2, 1, "", "stop"]], "ax.core.trial": [[3, 1, 1, "", "Trial"]], "ax.core.trial.Trial": [[3, 3, 1, "", "abandoned_arms"], [3, 2, 1, "", "add_arm"], [3, 2, 1, "", "add_generator_run"], [3, 3, 1, "", "arm"], [3, 3, 1, "", "arms"], [3, 3, 1, "", "arms_by_name"], [3, 2, 1, "", "clone_to"], [3, 3, 1, "", "generator_run"], [3, 3, 1, "", "generator_runs"], [3, 2, 1, "", "get_metric_mean"], [3, 3, 1, "", "objective_mean"], [3, 2, 1, "", "update_trial_data"], [3, 2, 1, "", "validate_data_for_trial"]], "ax.core.types": [[3, 1, 1, "", "ComparisonOp"], [3, 5, 1, "", "merge_model_predict"], [3, 5, 1, "", "validate_evaluation_outcome"], [3, 5, 1, "", "validate_fidelity_trial_evaluation"], [3, 5, 1, "", "validate_floatlike"], [3, 5, 1, "", "validate_map_dict"], [3, 5, 1, "", "validate_map_trial_evaluation"], [3, 5, 1, "", "validate_param_value"], [3, 5, 1, "", "validate_parameterization"], [3, 5, 1, "", "validate_single_metric_data"], [3, 5, 1, "", "validate_trial_evaluation"]], "ax.core.types.ComparisonOp": [[3, 4, 1, "", "GEQ"], [3, 4, 1, "", "LEQ"]], "ax.core.utils": [[3, 1, 1, "", "MissingMetrics"], [3, 5, 1, "", "best_feasible_objective"], [3, 5, 1, "", "extend_pending_observations"], [3, 5, 1, "", "extract_pending_observations"], [3, 5, 1, "", "get_missing_metrics"], [3, 5, 1, "", "get_missing_metrics_by_name"], [3, 5, 1, "", "get_model_times"], [3, 5, 1, "", "get_model_trace_of_times"], [3, 5, 1, "", "get_pending_observation_features"], [3, 5, 1, "", "get_pending_observation_features_based_on_trial_status"]], "ax.core.utils.MissingMetrics": [[3, 4, 1, "", "objective"], [3, 4, 1, "", "outcome_constraints"], [3, 4, 1, "", "tracking_metrics"]], "ax.exceptions": [[5, 0, 0, "-", "constants"], [5, 0, 0, "-", "core"], [5, 0, 0, "-", "data_provider"], [5, 0, 0, "-", "generation_strategy"], [5, 0, 0, "-", "model"], [5, 0, 0, "-", "storage"]], "ax.exceptions.core": [[5, 6, 1, "", "AxError"], [5, 6, 1, "", "AxParameterWarning"], [5, 6, 1, "", "AxStorageWarning"], [5, 6, 1, "", "AxWarning"], [5, 6, 1, "", "DataRequiredError"], [5, 6, 1, "", "ExperimentNotFoundError"], [5, 6, 1, "", "ExperimentNotReadyError"], [5, 6, 1, "", "IncompatibleDependencyVersion"], [5, 6, 1, "", "MetricDataNotReadyError"], [5, 6, 1, "", "MisconfiguredExperiment"], [5, 6, 1, "", "NoDataError"], [5, 6, 1, "", "ObjectNotFoundError"], [5, 6, 1, "", "OptimizationComplete"], [5, 6, 1, "", "OptimizationShouldStop"], [5, 6, 1, "", "SearchSpaceExhausted"], [5, 6, 1, "", "UnsupportedError"], [5, 6, 1, "", "UnsupportedPlotError"], [5, 6, 1, "", "UserInputError"]], "ax.exceptions.data_provider": [[5, 6, 1, "", "DataProviderError"], [5, 6, 1, "", "MissingDataError"]], "ax.exceptions.generation_strategy": [[5, 6, 1, "", "AxGenerationException"], [5, 6, 1, "", "GenerationStrategyCompleted"], [5, 6, 1, "", "GenerationStrategyMisconfiguredException"], [5, 6, 1, "", "GenerationStrategyRepeatedPoints"], [5, 6, 1, "", "MaxParallelismReachedException"], [5, 6, 1, "", "OptimizationConfigRequired"]], "ax.exceptions.model": [[5, 6, 1, "", "CVNotSupportedError"], [5, 6, 1, "", "ModelError"]], "ax.exceptions.storage": [[5, 6, 1, "", "ImmutabilityError"], [5, 6, 1, "", "IncorrectDBConfigurationError"], [5, 6, 1, "", "JSONDecodeError"], [5, 6, 1, "", "JSONEncodeError"], [5, 6, 1, "", "SQADecodeError"], [5, 6, 1, "", "SQAEncodeError"]], "ax.modelbridge": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "discrete"], [9, 0, 0, "-", "factory"], [9, 0, 0, "-", "map_torch"], [9, 0, 0, "-", "modelbridge_utils"], [9, 0, 0, "-", "pairwise"], [9, 0, 0, "-", "prediction_utils"], [9, 0, 0, "-", "registry"], [9, 0, 0, "-", "torch"]], "ax.modelbridge.base": [[9, 1, 1, "", "BaseGenArgs"], [9, 1, 1, "", "GenResults"], [9, 1, 1, "", "ModelBridge"], [9, 5, 1, "", "clamp_observation_features"], [9, 5, 1, "", "gen_arms"], [9, 5, 1, "", "unwrap_observation_data"]], "ax.modelbridge.base.BaseGenArgs": [[9, 4, 1, "", "fixed_features"], [9, 4, 1, "", "optimization_config"], [9, 4, 1, "", "pending_observations"], [9, 4, 1, "", "search_space"]], "ax.modelbridge.base.GenResults": [[9, 4, 1, "", "best_observation_features"], [9, 4, 1, "", "gen_metadata"], [9, 4, 1, "", "observation_features"], [9, 4, 1, "", "weights"]], "ax.modelbridge.base.ModelBridge": [[9, 2, 1, "", "cross_validate"], [9, 2, 1, "", "feature_importances"], [9, 2, 1, "", "gen"], [9, 2, 1, "", "get_training_data"], [9, 3, 1, "", "metric_names"], [9, 3, 1, "", "model_space"], [9, 2, 1, "", "predict"], [9, 3, 1, "", "status_quo"], [9, 3, 1, "", "status_quo_data_by_trial"], [9, 3, 1, "", "statuses_to_fit"], [9, 3, 1, "", "statuses_to_fit_map_metric"], [9, 3, 1, "", "training_in_design"], [9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "transform_observations"], [9, 2, 1, "", "update"]], "ax.modelbridge.discrete": [[9, 1, 1, "", "DiscreteModelBridge"]], "ax.modelbridge.discrete.DiscreteModelBridge": [[9, 4, 1, "", "model"], [9, 4, 1, "", "outcomes"], [9, 4, 1, "", "parameters"], [9, 4, 1, "", "search_space"]], "ax.modelbridge.factory": [[9, 7, 1, "", "DEFAULT_EHVI_BATCH_LIMIT"], [9, 5, 1, "", "get_GPEI"], [9, 5, 1, "", "get_botorch"], [9, 5, 1, "", "get_empirical_bayes_thompson"], [9, 5, 1, "", "get_factorial"], [9, 5, 1, "", "get_sobol"], [9, 5, 1, "", "get_thompson"], [9, 5, 1, "", "get_uniform"]], "ax.modelbridge.map_torch": [[9, 1, 1, "", "MapTorchModelBridge"]], "ax.modelbridge.map_torch.MapTorchModelBridge": [[9, 3, 1, "", "parameters_with_map_keys"], [9, 3, 1, "", "statuses_to_fit_map_metric"]], "ax.modelbridge.modelbridge_utils": [[9, 5, 1, "", "array_to_observation_data"], [9, 5, 1, "", "check_has_multi_objective_and_data"], [9, 5, 1, "", "extract_objective_thresholds"], [9, 5, 1, "", "extract_objective_weights"], [9, 5, 1, "", "extract_outcome_constraints"], [9, 5, 1, "", "extract_parameter_constraints"], [9, 5, 1, "", "extract_risk_measure"], [9, 5, 1, "", "extract_robust_digest"], [9, 5, 1, "", "extract_search_space_digest"], [9, 5, 1, "", "feasible_hypervolume"], [9, 5, 1, "", "get_fixed_features"], [9, 5, 1, "", "get_fixed_features_from_experiment"], [9, 5, 1, "", "get_pareto_frontier_and_configs"], [9, 5, 1, "", "hypervolume"], [9, 5, 1, "", "observation_data_to_array"], [9, 5, 1, "", "observation_features_to_array"], [9, 5, 1, "", "observed_hypervolume"], [9, 5, 1, "", "observed_pareto_frontier"], [9, 5, 1, "", "pareto_frontier"], [9, 5, 1, "", "parse_observation_features"], [9, 5, 1, "", "pending_observations_as_array_list"], [9, 5, 1, "", "predicted_hypervolume"], [9, 5, 1, "", "predicted_pareto_frontier"], [9, 5, 1, "", "process_contextual_datasets"], [9, 5, 1, "", "transform_callback"], [9, 5, 1, "", "transform_search_space"], [9, 5, 1, "", "validate_and_apply_final_transform"]], "ax.modelbridge.pairwise": [[9, 1, 1, "", "PairwiseModelBridge"]], "ax.modelbridge.prediction_utils": [[9, 5, 1, "", "predict_at_point"], [9, 5, 1, "", "predict_by_features"]], "ax.modelbridge.registry": [[9, 1, 1, "", "ModelRegistryBase"], [9, 1, 1, "", "ModelSetup"], [9, 1, 1, "", "Models"], [9, 5, 1, "", "get_model_from_generator_run"]], "ax.modelbridge.registry.ModelRegistryBase": [[9, 3, 1, "", "model_bridge_class"], [9, 3, 1, "", "model_class"], [9, 2, 1, "", "view_defaults"], [9, 2, 1, "", "view_kwargs"]], "ax.modelbridge.registry.ModelSetup": [[9, 4, 1, "", "bridge_class"], [9, 4, 1, "", "default_model_kwargs"], [9, 4, 1, "", "model_class"], [9, 4, 1, "", "not_saved_model_kwargs"], [9, 4, 1, "", "standard_bridge_kwargs"], [9, 4, 1, "", "transforms"]], "ax.modelbridge.registry.Models": [[9, 4, 1, "", "BOTORCH_MODULAR"], [9, 4, 1, "", "BO_MIXED"], [9, 4, 1, "", "CONTEXT_SACBO"], [9, 4, 1, "", "EMPIRICAL_BAYES_THOMPSON"], [9, 4, 1, "", "FACTORIAL"], [9, 3, 1, "", "FULLYBAYESIAN"], [9, 3, 1, "", "FULLYBAYESIANMOO"], [9, 3, 1, "", "FULLYBAYESIANMOO_MTGP"], [9, 3, 1, "", "FULLYBAYESIAN_MTGP"], [9, 4, 1, "", "GPEI"], [9, 4, 1, "", "LEGACY_BOTORCH"], [9, 4, 1, "", "MOO"], [9, 4, 1, "", "SAASBO"], [9, 4, 1, "", "SAAS_MTGP"], [9, 4, 1, "", "SOBOL"], [9, 4, 1, "", "ST_MTGP"], [9, 4, 1, "", "ST_MTGP_LEGACY"], [9, 4, 1, "", "ST_MTGP_NEHVI"], [9, 4, 1, "", "THOMPSON"], [9, 4, 1, "", "UNIFORM"]], "ax.modelbridge.torch": [[9, 1, 1, "", "TorchModelBridge"], [9, 5, 1, "", "validate_optimization_config"]], "ax.modelbridge.torch.TorchModelBridge": [[9, 2, 1, "", "evaluate_acquisition_function"], [9, 2, 1, "", "feature_importances"], [9, 2, 1, "", "infer_objective_thresholds"], [9, 4, 1, "", "model"], [9, 2, 1, "", "model_best_point"], [9, 4, 1, "", "outcomes"], [9, 4, 1, "", "parameters"]], "ax.modelbridge.transforms": [[9, 0, 0, "-", "base"], [9, 0, 0, "-", "cap_parameter"], [9, 0, 0, "-", "cast"], [9, 0, 0, "-", "centered_unit_x"], [9, 0, 0, "-", "choice_encode"], [9, 0, 0, "-", "convert_metric_names"], [9, 0, 0, "-", "deprecated_transform_mixin"], [9, 0, 0, "-", "derelativize"], [9, 0, 0, "-", "int_range_to_choice"], [9, 0, 0, "-", "int_to_float"], [9, 0, 0, "-", "inverse_gaussian_cdf_y"], [9, 0, 0, "-", "ivw"], [9, 0, 0, "-", "log"], [9, 0, 0, "-", "log_y"], [9, 0, 0, "-", "logit"], [9, 0, 0, "-", "map_unit_x"], [9, 0, 0, "-", "merge_repeated_measurements"], [9, 0, 0, "-", "metrics_as_task"], [9, 0, 0, "-", "one_hot"], [9, 0, 0, "-", "percentile_y"], [9, 0, 0, "-", "relativize"], [9, 0, 0, "-", "remove_fixed"], [9, 0, 0, "-", "rounding"], [9, 0, 0, "-", "search_space_to_choice"], [9, 0, 0, "-", "standardize_y"], [9, 0, 0, "-", "stratified_standardize_y"], [9, 0, 0, "-", "task_encode"], [9, 0, 0, "-", "time_as_feature"], [9, 0, 0, "-", "transform_to_new_sq"], [9, 0, 0, "-", "trial_as_task"], [9, 0, 0, "-", "unit_x"], [9, 0, 0, "-", "utils"], [9, 0, 0, "-", "winsorize"]], "ax.modelbridge.transforms.base": [[9, 1, 1, "", "Transform"]], "ax.modelbridge.transforms.base.Transform": [[9, 4, 1, "", "config"], [9, 4, 1, "", "modelbridge"], [9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "transform_observations"], [9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "transform_search_space"], [9, 2, 1, "", "untransform_observation_features"], [9, 2, 1, "", "untransform_observations"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.cap_parameter": [[9, 1, 1, "", "CapParameter"]], "ax.modelbridge.transforms.cast": [[9, 1, 1, "", "Cast"]], "ax.modelbridge.transforms.cast.Cast": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.centered_unit_x": [[9, 1, 1, "", "CenteredUnitX"]], "ax.modelbridge.transforms.centered_unit_x.CenteredUnitX": [[9, 4, 1, "", "target_lb"], [9, 4, 1, "", "target_range"]], "ax.modelbridge.transforms.choice_encode": [[9, 1, 1, "", "ChoiceEncode"], [9, 1, 1, "", "ChoiceToNumericChoice"], [9, 1, 1, "", "OrderedChoiceEncode"], [9, 1, 1, "", "OrderedChoiceToIntegerRange"], [9, 5, 1, "", "transform_choice_values"]], "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.convert_metric_names": [[9, 1, 1, "", "ConvertMetricNames"], [9, 5, 1, "", "convert_mt_observations"], [9, 5, 1, "", "tconfig_from_mt_experiment"]], "ax.modelbridge.transforms.convert_metric_names.ConvertMetricNames": [[9, 2, 1, "", "untransform_observations"]], "ax.modelbridge.transforms.derelativize": [[9, 1, 1, "", "Derelativize"]], "ax.modelbridge.transforms.derelativize.Derelativize": [[9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.int_range_to_choice": [[9, 1, 1, "", "IntRangeToChoice"]], "ax.modelbridge.transforms.int_to_float": [[9, 1, 1, "", "IntToFloat"]], "ax.modelbridge.transforms.int_to_float.IntToFloat": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.inverse_gaussian_cdf_y": [[9, 1, 1, "", "InverseGaussianCdfY"]], "ax.modelbridge.transforms.ivw": [[9, 1, 1, "", "IVW"], [9, 5, 1, "", "ivw_metric_merge"]], "ax.modelbridge.transforms.log": [[9, 1, 1, "", "Log"]], "ax.modelbridge.transforms.log.Log": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.log_y": [[9, 1, 1, "", "LogY"], [9, 5, 1, "", "lognorm_to_norm"], [9, 5, 1, "", "match_ci_width"], [9, 5, 1, "", "norm_to_lognorm"]], "ax.modelbridge.transforms.log_y.LogY": [[9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.logit": [[9, 1, 1, "", "Logit"]], "ax.modelbridge.transforms.logit.Logit": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.map_unit_x": [[9, 1, 1, "", "MapUnitX"]], "ax.modelbridge.transforms.map_unit_x.MapUnitX": [[9, 4, 1, "", "target_lb"], [9, 4, 1, "", "target_range"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.merge_repeated_measurements": [[9, 1, 1, "", "MergeRepeatedMeasurements"]], "ax.modelbridge.transforms.merge_repeated_measurements.MergeRepeatedMeasurements": [[9, 2, 1, "", "transform_observations"]], "ax.modelbridge.transforms.metrics_as_task": [[9, 1, 1, "", "MetricsAsTask"]], "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "transform_observations"], [9, 2, 1, "", "untransform_observation_features"], [9, 2, 1, "", "untransform_observations"]], "ax.modelbridge.transforms.one_hot": [[9, 1, 1, "", "OneHot"], [9, 1, 1, "", "OneHotEncoder"]], "ax.modelbridge.transforms.one_hot.OneHot": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.one_hot.OneHotEncoder": [[9, 2, 1, "", "inverse_transform"], [9, 2, 1, "", "transform"]], "ax.modelbridge.transforms.percentile_y": [[9, 1, 1, "", "PercentileY"]], "ax.modelbridge.transforms.relativize": [[9, 1, 1, "", "BaseRelativize"], [9, 1, 1, "", "Relativize"], [9, 1, 1, "", "RelativizeWithConstantControl"], [9, 5, 1, "", "get_metric_index"]], "ax.modelbridge.transforms.relativize.BaseRelativize": [[9, 3, 1, "", "control_as_constant"], [9, 2, 1, "", "transform_observations"], [9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "untransform_observations"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.relativize.Relativize": [[9, 3, 1, "", "control_as_constant"]], "ax.modelbridge.transforms.relativize.RelativizeWithConstantControl": [[9, 3, 1, "", "control_as_constant"]], "ax.modelbridge.transforms.remove_fixed": [[9, 1, 1, "", "RemoveFixed"]], "ax.modelbridge.transforms.remove_fixed.RemoveFixed": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.rounding": [[9, 5, 1, "", "contains_constrained_integer"], [9, 5, 1, "", "randomized_onehot_round"], [9, 5, 1, "", "randomized_round"], [9, 5, 1, "", "randomized_round_parameters"], [9, 5, 1, "", "strict_onehot_round"]], "ax.modelbridge.transforms.search_space_to_choice": [[9, 1, 1, "", "SearchSpaceToChoice"]], "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.standardize_y": [[9, 1, 1, "", "StandardizeY"], [9, 5, 1, "", "compute_standardization_parameters"]], "ax.modelbridge.transforms.standardize_y.StandardizeY": [[9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.stratified_standardize_y": [[9, 1, 1, "", "StratifiedStandardizeY"]], "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY": [[9, 2, 1, "", "transform_observations"], [9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "untransform_observations"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.task_encode": [[9, 1, 1, "", "TaskChoiceToIntTaskChoice"], [9, 1, 1, "", "TaskEncode"]], "ax.modelbridge.transforms.time_as_feature": [[9, 1, 1, "", "TimeAsFeature"]], "ax.modelbridge.transforms.time_as_feature.TimeAsFeature": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.transform_to_new_sq": [[9, 1, 1, "", "TransformToNewSQ"]], "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ": [[9, 3, 1, "", "control_as_constant"], [9, 2, 1, "", "transform_optimization_config"], [9, 2, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.trial_as_task": [[9, 1, 1, "", "TrialAsTask"]], "ax.modelbridge.transforms.trial_as_task.TrialAsTask": [[9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.unit_x": [[9, 1, 1, "", "UnitX"]], "ax.modelbridge.transforms.unit_x.UnitX": [[9, 4, 1, "", "target_lb"], [9, 4, 1, "", "target_range"], [9, 2, 1, "", "transform_observation_features"], [9, 2, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.utils": [[9, 1, 1, "", "ClosestLookupDict"], [9, 5, 1, "", "construct_new_search_space"], [9, 5, 1, "", "derelativize_optimization_config_with_raw_status_quo"], [9, 5, 1, "", "get_data"], [9, 5, 1, "", "match_ci_width_truncated"]], "ax.modelbridge.transforms.winsorize": [[9, 1, 1, "", "Winsorize"]], "ax.modelbridge.transforms.winsorize.Winsorize": [[9, 4, 1, "", "cutoffs"]], "ax.models": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "discrete_base"], [10, 0, 0, "-", "model_utils"], [10, 0, 0, "-", "torch_base"], [10, 0, 0, "-", "types"], [10, 0, 0, "-", "winsorization_config"]], "ax.models.base": [[10, 1, 1, "", "Model"]], "ax.models.base.Model": [[10, 2, 1, "", "deserialize_state"], [10, 2, 1, "", "feature_importances"], [10, 2, 1, "", "serialize_state"]], "ax.models.discrete": [[10, 0, 0, "-", "eb_thompson"], [10, 0, 0, "-", "full_factorial"], [10, 0, 0, "-", "thompson"]], "ax.models.discrete.eb_thompson": [[10, 1, 1, "", "EmpiricalBayesThompsonSampler"]], "ax.models.discrete.full_factorial": [[10, 1, 1, "", "FullFactorialGenerator"]], "ax.models.discrete.full_factorial.FullFactorialGenerator": [[10, 2, 1, "", "gen"]], "ax.models.discrete.thompson": [[10, 1, 1, "", "ThompsonSampler"]], "ax.models.discrete.thompson.ThompsonSampler": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "gen"], [10, 2, 1, "", "predict"]], "ax.models.discrete_base": [[10, 1, 1, "", "DiscreteModel"]], "ax.models.discrete_base.DiscreteModel": [[10, 2, 1, "", "best_point"], [10, 2, 1, "", "cross_validate"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "gen"], [10, 2, 1, "", "predict"]], "ax.models.model_utils": [[10, 1, 1, "", "TorchModelLike"], [10, 5, 1, "", "add_fixed_features"], [10, 5, 1, "", "as_array"], [10, 5, 1, "", "best_in_sample_point"], [10, 5, 1, "", "best_observed_point"], [10, 5, 1, "", "check_duplicate"], [10, 5, 1, "", "check_param_constraints"], [10, 5, 1, "", "enumerate_discrete_combinations"], [10, 5, 1, "", "filter_constraints_and_fixed_features"], [10, 5, 1, "", "get_observed"], [10, 5, 1, "", "mk_discrete_choices"], [10, 5, 1, "", "rejection_sample"], [10, 5, 1, "", "tunable_feature_indices"], [10, 5, 1, "", "validate_bounds"]], "ax.models.model_utils.TorchModelLike": [[10, 2, 1, "", "predict"]], "ax.models.random": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "sobol"], [10, 0, 0, "-", "uniform"]], "ax.models.random.base": [[10, 1, 1, "", "RandomModel"]], "ax.models.random.base.RandomModel": [[10, 4, 1, "", "deduplicate"], [10, 4, 1, "", "fallback_to_sample_polytope"], [10, 2, 1, "", "gen"], [10, 4, 1, "", "generated_points"], [10, 4, 1, "", "init_position"], [10, 4, 1, "", "seed"]], "ax.models.random.sobol": [[10, 1, 1, "", "SobolGenerator"]], "ax.models.random.sobol.SobolGenerator": [[10, 3, 1, "", "engine"], [10, 2, 1, "", "gen"], [10, 2, 1, "", "init_engine"], [10, 4, 1, "", "scramble"]], "ax.models.random.uniform": [[10, 1, 1, "", "UniformGenerator"]], "ax.models.torch": [[10, 0, 0, "-", "botorch"], [10, 0, 0, "-", "botorch_defaults"], [10, 0, 0, "-", "botorch_kg"], [10, 0, 0, "-", "botorch_moo"], [10, 0, 0, "-", "botorch_moo_defaults"], [10, 0, 0, "-", "cbo_lcea"], [10, 0, 0, "-", "cbo_lcem"], [10, 0, 0, "-", "cbo_sac"], [10, 0, 0, "-", "utils"]], "ax.models.torch.botorch": [[10, 1, 1, "", "BotorchModel"], [10, 5, 1, "", "get_feature_importances_from_botorch_model"], [10, 5, 1, "", "get_rounding_func"]], "ax.models.torch.botorch.BotorchModel": [[10, 4, 1, "", "Xs"], [10, 4, 1, "", "Ys"], [10, 4, 1, "", "Yvars"], [10, 2, 1, "", "best_point"], [10, 2, 1, "", "cross_validate"], [10, 2, 1, "", "feature_importances"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "gen"], [10, 3, 1, "", "model"], [10, 2, 1, "", "predict"], [10, 3, 1, "", "search_space_digest"]], "ax.models.torch.botorch_defaults": [[10, 1, 1, "", "TAcqfConstructor"], [10, 5, 1, "", "get_NEI"], [10, 5, 1, "", "get_acqf"], [10, 5, 1, "", "get_and_fit_model"], [10, 5, 1, "", "get_qEI"], [10, 5, 1, "", "get_qLogEI"], [10, 5, 1, "", "get_qLogNEI"], [10, 5, 1, "", "get_warping_transform"], [10, 5, 1, "", "recommend_best_observed_point"], [10, 5, 1, "", "recommend_best_out_of_sample_point"], [10, 5, 1, "", "scipy_optimizer"]], "ax.models.torch.botorch_kg": [[10, 1, 1, "", "KnowledgeGradient"]], "ax.models.torch.botorch_kg.KnowledgeGradient": [[10, 2, 1, "", "gen"]], "ax.models.torch.botorch_modular": [[10, 0, 0, "-", "acquisition"], [10, 0, 0, "-", "kernels"], [10, 0, 0, "-", "model"], [10, 0, 0, "-", "optimizer_argparse"], [10, 0, 0, "-", "sebo"], [10, 0, 0, "-", "surrogate"], [10, 0, 0, "-", "utils"]], "ax.models.torch.botorch_modular.acquisition": [[10, 1, 1, "", "Acquisition"]], "ax.models.torch.botorch_modular.acquisition.Acquisition": [[10, 4, 1, "", "acqf"], [10, 3, 1, "", "botorch_acqf_class"], [10, 2, 1, "", "compute_model_dependencies"], [10, 3, 1, "", "device"], [10, 3, 1, "", "dtype"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "get_botorch_objective_and_transform"], [10, 3, 1, "", "objective_thresholds"], [10, 3, 1, "", "objective_weights"], [10, 2, 1, "", "optimize"], [10, 4, 1, "", "options"], [10, 4, 1, "", "surrogates"]], "ax.models.torch.botorch_modular.input_constructors": [[10, 0, 0, "-", "covar_modules"], [10, 0, 0, "-", "input_transforms"], [10, 0, 0, "-", "outcome_transform"]], "ax.models.torch.botorch_modular.kernels": [[10, 1, 1, "", "ScaleMaternKernel"], [10, 1, 1, "", "TemporalKernel"]], "ax.models.torch.botorch_modular.model": [[10, 1, 1, "", "BoTorchModel"], [10, 1, 1, "", "SurrogateSpec"], [10, 5, 1, "", "single_surrogate_only"]], "ax.models.torch.botorch_modular.model.BoTorchModel": [[10, 3, 1, "", "Xs"], [10, 4, 1, "", "acquisition_class"], [10, 4, 1, "", "acquisition_options"], [10, 2, 1, "", "best_point"], [10, 3, 1, "", "botorch_acqf_class"], [10, 2, 1, "", "cross_validate"], [10, 3, 1, "", "device"], [10, 3, 1, "", "dtype"], [10, 2, 1, "", "evaluate_acquisition_function"], [10, 2, 1, "", "feature_importances"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "gen"], [10, 3, 1, "", "outcomes_by_surrogate_label"], [10, 3, 1, "", "output_order"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "predict_from_surrogate"], [10, 3, 1, "", "search_space_digest"], [10, 3, 1, "", "surrogate"], [10, 4, 1, "", "surrogate_specs"], [10, 3, 1, "", "surrogates"]], "ax.models.torch.botorch_modular.model.SurrogateSpec": [[10, 4, 1, "", "allow_batched_models"], [10, 4, 1, "", "botorch_model_class"], [10, 4, 1, "", "botorch_model_kwargs"], [10, 4, 1, "", "covar_module_class"], [10, 4, 1, "", "covar_module_kwargs"], [10, 4, 1, "", "input_transform_classes"], [10, 4, 1, "", "input_transform_options"], [10, 4, 1, "", "likelihood_class"], [10, 4, 1, "", "likelihood_kwargs"], [10, 4, 1, "", "mll_class"], [10, 4, 1, "", "mll_kwargs"], [10, 4, 1, "", "outcome_transform_classes"], [10, 4, 1, "", "outcome_transform_options"], [10, 4, 1, "", "outcomes"]], "ax.models.torch.botorch_modular.sebo": [[10, 5, 1, "", "L1_norm_func"], [10, 1, 1, "", "SEBOAcquisition"], [10, 5, 1, "", "clamp_candidates"], [10, 5, 1, "", "get_batch_initial_conditions"]], "ax.models.torch.botorch_modular.sebo.SEBOAcquisition": [[10, 2, 1, "", "optimize"]], "ax.models.torch.botorch_modular.surrogate": [[10, 1, 1, "", "Surrogate"]], "ax.models.torch.botorch_modular.surrogate.Surrogate": [[10, 3, 1, "", "Xs"], [10, 2, 1, "", "best_in_sample_point"], [10, 2, 1, "", "best_out_of_sample_point"], [10, 2, 1, "", "clone_reset"], [10, 2, 1, "", "compute_diagnostics"], [10, 3, 1, "", "device"], [10, 3, 1, "", "dtype"], [10, 2, 1, "", "fit"], [10, 3, 1, "", "model"], [10, 3, 1, "", "outcomes"], [10, 2, 1, "", "pareto_frontier"], [10, 2, 1, "", "predict"], [10, 3, 1, "", "training_data"]], "ax.models.torch.botorch_modular.utils": [[10, 5, 1, "", "check_outcome_dataset_match"], [10, 5, 1, "", "choose_botorch_acqf_class"], [10, 5, 1, "", "choose_model_class"], [10, 5, 1, "", "construct_acquisition_and_optimizer_options"], [10, 5, 1, "", "convert_to_block_design"], [10, 5, 1, "", "fit_botorch_model"], [10, 5, 1, "", "get_post_processing_func"], [10, 5, 1, "", "get_subset_datasets"], [10, 5, 1, "", "subset_state_dict"], [10, 5, 1, "", "use_model_list"]], "ax.models.torch.botorch_moo": [[10, 1, 1, "", "MultiObjectiveBotorchModel"]], "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel": [[10, 4, 1, "", "Xs"], [10, 4, 1, "", "Ys"], [10, 4, 1, "", "Yvars"], [10, 2, 1, "", "gen"]], "ax.models.torch.botorch_moo_defaults": [[10, 5, 1, "", "get_EHVI"], [10, 5, 1, "", "get_NEHVI"], [10, 5, 1, "", "get_qLogEHVI"], [10, 5, 1, "", "get_qLogNEHVI"], [10, 5, 1, "", "get_weighted_mc_objective_and_objective_thresholds"], [10, 5, 1, "", "infer_objective_thresholds"], [10, 5, 1, "", "pareto_frontier_evaluator"], [10, 5, 1, "", "scipy_optimizer_list"]], "ax.models.torch.cbo_lcea": [[10, 1, 1, "", "LCEABO"], [10, 5, 1, "", "get_map_model"]], "ax.models.torch.cbo_lcea.LCEABO": [[10, 2, 1, "", "best_point"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "get_and_fit_model"], [10, 3, 1, "", "model"]], "ax.models.torch.cbo_lcem": [[10, 1, 1, "", "LCEMBO"]], "ax.models.torch.cbo_lcem.LCEMBO": [[10, 2, 1, "", "get_and_fit_model"]], "ax.models.torch.cbo_sac": [[10, 1, 1, "", "SACBO"], [10, 5, 1, "", "generate_model_space_decomposition"]], "ax.models.torch.cbo_sac.SACBO": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "get_and_fit_model"]], "ax.models.torch.utils": [[10, 1, 1, "", "SubsetModelData"], [10, 5, 1, "", "get_botorch_objective_and_transform"], [10, 5, 1, "", "get_out_of_sample_best_point_acqf"], [10, 5, 1, "", "is_noiseless"], [10, 5, 1, "", "normalize_indices"], [10, 5, 1, "", "pick_best_out_of_sample_point_acqf_class"], [10, 5, 1, "", "predict_from_model"], [10, 5, 1, "", "randomize_objective_weights"], [10, 5, 1, "", "subset_model"], [10, 5, 1, "", "tensor_callable_to_array_callable"]], "ax.models.torch.utils.SubsetModelData": [[10, 4, 1, "", "indices"], [10, 4, 1, "", "model"], [10, 4, 1, "", "objective_thresholds"], [10, 4, 1, "", "objective_weights"], [10, 4, 1, "", "outcome_constraints"]], "ax.models.torch_base": [[10, 1, 1, "", "TorchGenResults"], [10, 1, 1, "", "TorchModel"], [10, 1, 1, "", "TorchOptConfig"]], "ax.models.torch_base.TorchGenResults": [[10, 4, 1, "", "candidate_metadata"], [10, 4, 1, "", "gen_metadata"], [10, 4, 1, "", "points"], [10, 4, 1, "", "weights"]], "ax.models.torch_base.TorchModel": [[10, 2, 1, "", "best_point"], [10, 2, 1, "", "cross_validate"], [10, 4, 1, "", "device"], [10, 4, 1, "", "dtype"], [10, 2, 1, "", "evaluate_acquisition_function"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "gen"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "update"]], "ax.models.torch_base.TorchOptConfig": [[10, 4, 1, "", "fit_out_of_design"], [10, 4, 1, "id0", "fixed_features"], [10, 4, 1, "id1", "is_moo"], [10, 4, 1, "id2", "linear_constraints"], [10, 4, 1, "id3", "model_gen_options"], [10, 4, 1, "id4", "objective_thresholds"], [10, 4, 1, "id5", "objective_weights"], [10, 4, 1, "id6", "opt_config_metrics"], [10, 4, 1, "id7", "outcome_constraints"], [10, 4, 1, "id8", "pending_observations"], [10, 4, 1, "id9", "risk_measure"], [10, 4, 1, "id10", "rounding_func"]], "ax.models.winsorization_config": [[10, 1, 1, "", "WinsorizationConfig"]], "ax.models.winsorization_config.WinsorizationConfig": [[10, 4, 1, "", "lower_boundary"], [10, 4, 1, "", "lower_quantile_margin"], [10, 4, 1, "", "upper_boundary"], [10, 4, 1, "", "upper_quantile_margin"]], "ax.utils.common": [[16, 0, 0, "-", "base"], [16, 0, 0, "-", "constants"], [16, 0, 0, "-", "decorator"], [16, 0, 0, "-", "deprecation"], [16, 0, 0, "-", "docutils"], [16, 0, 0, "-", "equality"], [16, 0, 0, "-", "executils"], [16, 0, 0, "-", "kwargs"], [16, 0, 0, "-", "logger"], [16, 0, 0, "-", "mock"], [16, 0, 0, "-", "random"], [16, 0, 0, "-", "result"], [16, 0, 0, "-", "serialization"], [16, 0, 0, "-", "testutils"], [16, 0, 0, "-", "timeutils"], [16, 0, 0, "-", "typeutils"], [16, 0, 0, "-", "typeutils_nonnative"], [16, 0, 0, "-", "typeutils_torch"]], "ax.utils.common.base": [[16, 1, 1, "", "Base"], [16, 1, 1, "", "SortableBase"]], "ax.utils.common.base.Base": [[16, 3, 1, "", "db_id"]], "ax.utils.common.constants": [[16, 1, 1, "", "Keys"]], "ax.utils.common.constants.Keys": [[16, 4, 1, "", "ACQF_KWARGS"], [16, 4, 1, "", "AUTOSET_SURROGATE"], [16, 4, 1, "", "BATCH_INIT_CONDITIONS"], [16, 4, 1, "", "CANDIDATE_SET"], [16, 4, 1, "", "CANDIDATE_SIZE"], [16, 4, 1, "", "COST_AWARE_UTILITY"], [16, 4, 1, "", "COST_INTERCEPT"], [16, 4, 1, "", "CURRENT_VALUE"], [16, 4, 1, "", "EXPAND"], [16, 4, 1, "", "EXPECTED_ACQF_VAL"], [16, 4, 1, "", "FIDELITY_FEATURES"], [16, 4, 1, "", "FIDELITY_WEIGHTS"], [16, 4, 1, "", "FRAC_RANDOM"], [16, 4, 1, "", "FULL_PARAMETERIZATION"], [16, 4, 1, "", "IMMUTABLE_SEARCH_SPACE_AND_OPT_CONF"], [16, 4, 1, "", "MAXIMIZE"], [16, 4, 1, "", "METADATA"], [16, 4, 1, "", "METRIC_NAMES"], [16, 4, 1, "", "NUM_FANTASIES"], [16, 4, 1, "", "NUM_INNER_RESTARTS"], [16, 4, 1, "", "NUM_RESTARTS"], [16, 4, 1, "", "NUM_TRACE_OBSERVATIONS"], [16, 4, 1, "", "OBJECTIVE"], [16, 4, 1, "", "ONLY_SURROGATE"], [16, 4, 1, "", "OPTIMIZER_KWARGS"], [16, 4, 1, "", "PAIRWISE_PREFERENCE_QUERY"], [16, 4, 1, "", "PREFERENCE_DATA"], [16, 4, 1, "", "PRIMARY_SURROGATE"], [16, 4, 1, "", "PROJECT"], [16, 4, 1, "", "QMC"], [16, 4, 1, "", "RAW_INNER_SAMPLES"], [16, 4, 1, "", "RAW_SAMPLES"], [16, 4, 1, "", "RESUMED_FROM_STORAGE_TS"], [16, 4, 1, "", "SAMPLER"], [16, 4, 1, "", "SEED_INNER"], [16, 4, 1, "", "SEQUENTIAL"], [16, 4, 1, "", "STATE_DICT"], [16, 4, 1, "", "SUBCLASS"], [16, 4, 1, "", "SUBSET_MODEL"], [16, 4, 1, "", "TASK_FEATURES"], [16, 4, 1, "", "TRIAL_COMPLETION_TIMESTAMP"], [16, 4, 1, "", "WARM_START_REFITTING"], [16, 4, 1, "", "X_BASELINE"]], "ax.utils.common.decorator": [[16, 1, 1, "", "ClassDecorator"]], "ax.utils.common.decorator.ClassDecorator": [[16, 4, 1, "", "DECORATE_PRIVATE"], [16, 2, 1, "", "decorate_callable"], [16, 2, 1, "", "decorate_class"]], "ax.utils.common.docutils": [[16, 5, 1, "", "copy_doc"]], "ax.utils.common.equality": [[16, 5, 1, "", "dataframe_equals"], [16, 5, 1, "", "datetime_equals"], [16, 5, 1, "", "equality_typechecker"], [16, 5, 1, "", "is_ax_equal"], [16, 5, 1, "", "object_attribute_dicts_equal"], [16, 5, 1, "", "object_attribute_dicts_find_unequal_fields"], [16, 5, 1, "", "same_elements"]], "ax.utils.common.executils": [[16, 5, 1, "", "execute_with_timeout"], [16, 5, 1, "", "handle_exceptions_in_retries"], [16, 5, 1, "", "retry_on_exception"]], "ax.utils.common.kwargs": [[16, 5, 1, "", "consolidate_kwargs"], [16, 5, 1, "", "filter_kwargs"], [16, 5, 1, "", "get_function_argument_names"], [16, 5, 1, "", "get_function_default_arguments"], [16, 5, 1, "", "warn_on_kwargs"]], "ax.utils.common.logger": [[16, 1, 1, "", "AxOutputNameFilter"], [16, 5, 1, "", "build_file_handler"], [16, 5, 1, "", "build_stream_handler"], [16, 1, 1, "", "disable_logger"], [16, 1, 1, "", "disable_loggers"], [16, 5, 1, "", "get_logger"], [16, 5, 1, "", "make_indices_str"], [16, 5, 1, "", "set_stderr_log_level"]], "ax.utils.common.logger.AxOutputNameFilter": [[16, 2, 1, "", "filter"]], "ax.utils.common.logger.disable_logger": [[16, 2, 1, "", "decorate_callable"]], "ax.utils.common.logger.disable_loggers": [[16, 2, 1, "", "decorate_callable"]], "ax.utils.common.mock": [[16, 5, 1, "", "mock_patch_method_original"]], "ax.utils.common.random": [[16, 5, 1, "", "set_rng_seed"], [16, 5, 1, "", "with_rng_seed"]], "ax.utils.common.result": [[16, 1, 1, "", "Err"], [16, 1, 1, "", "ExceptionE"], [16, 1, 1, "", "Ok"], [16, 1, 1, "", "Result"], [16, 6, 1, "", "UnwrapError"]], "ax.utils.common.result.Err": [[16, 3, 1, "", "err"], [16, 2, 1, "", "is_err"], [16, 2, 1, "", "is_ok"], [16, 2, 1, "", "map"], [16, 2, 1, "", "map_err"], [16, 2, 1, "", "map_or"], [16, 2, 1, "", "map_or_else"], [16, 3, 1, "", "ok"], [16, 2, 1, "", "unwrap"], [16, 2, 1, "", "unwrap_err"], [16, 2, 1, "", "unwrap_or"], [16, 2, 1, "", "unwrap_or_else"], [16, 3, 1, "", "value"]], "ax.utils.common.result.ExceptionE": [[16, 4, 1, "", "exception"], [16, 4, 1, "", "message"], [16, 2, 1, "", "tb_str"]], "ax.utils.common.result.Ok": [[16, 3, 1, "", "err"], [16, 2, 1, "", "is_err"], [16, 2, 1, "", "is_ok"], [16, 2, 1, "", "map"], [16, 2, 1, "", "map_err"], [16, 2, 1, "", "map_or"], [16, 2, 1, "", "map_or_else"], [16, 3, 1, "", "ok"], [16, 2, 1, "", "unwrap"], [16, 2, 1, "", "unwrap_err"], [16, 2, 1, "", "unwrap_or"], [16, 2, 1, "", "unwrap_or_else"], [16, 3, 1, "", "value"]], "ax.utils.common.result.Result": [[16, 3, 1, "", "err"], [16, 2, 1, "", "is_err"], [16, 2, 1, "", "is_ok"], [16, 2, 1, "", "map"], [16, 2, 1, "", "map_err"], [16, 2, 1, "", "map_or"], [16, 2, 1, "", "map_or_else"], [16, 3, 1, "", "ok"], [16, 2, 1, "", "unwrap"], [16, 2, 1, "", "unwrap_err"], [16, 2, 1, "", "unwrap_or"], [16, 2, 1, "", "unwrap_or_else"], [16, 3, 1, "", "value"]], "ax.utils.common.serialization": [[16, 1, 1, "", "SerializationMixin"], [16, 5, 1, "", "callable_from_reference"], [16, 5, 1, "", "callable_to_reference"], [16, 5, 1, "", "extract_init_args"], [16, 5, 1, "", "named_tuple_to_dict"], [16, 5, 1, "", "serialize_init_args"]], "ax.utils.common.serialization.SerializationMixin": [[16, 2, 1, "", "deserialize_init_args"], [16, 2, 1, "", "serialize_init_args"]], "ax.utils.common.testutils": [[16, 1, 1, "", "TestCase"], [16, 5, 1, "", "setup_import_mocks"]], "ax.utils.common.testutils.TestCase": [[16, 2, 1, "", "assertAxBaseEqual"], [16, 2, 1, "", "assertDictsAlmostEqual"], [16, 2, 1, "", "assertEqual"], [16, 2, 1, "", "assertRaisesOn"], [16, 2, 1, "", "setUp"], [16, 2, 1, "", "silence_stderr"]], "ax.utils.common.timeutils": [[16, 5, 1, "", "current_timestamp_in_millis"], [16, 5, 1, "", "timestamps_in_range"], [16, 5, 1, "", "to_ds"], [16, 5, 1, "", "to_ts"], [16, 5, 1, "", "unixtime_to_pandas_ts"]], "ax.utils.common.typeutils": [[16, 5, 1, "", "checked_cast"], [16, 5, 1, "", "checked_cast_dict"], [16, 5, 1, "", "checked_cast_list"], [16, 5, 1, "", "checked_cast_optional"], [16, 5, 1, "", "checked_cast_to_tuple"], [16, 5, 1, "", "not_none"]], "ax.utils.common.typeutils_nonnative": [[16, 5, 1, "", "numpy_type_to_python_type"]], "ax.utils.common.typeutils_torch": [[16, 5, 1, "", "torch_type_from_str"], [16, 5, 1, "", "torch_type_to_str"]], "ax.utils.flake8_plugins": [[16, 0, 0, "-", "docstring_checker"]], "ax.utils.flake8_plugins.docstring_checker": [[16, 5, 1, "", "A000"], [16, 1, 1, "", "DocstringChecker"], [16, 1, 1, "", "DocstringCheckerVisitor"], [16, 1, 1, "", "Error"], [16, 5, 1, "", "is_copy_doc_call"], [16, 5, 1, "", "new_error"], [16, 5, 1, "", "should_check"]], "ax.utils.flake8_plugins.docstring_checker.DocstringChecker": [[16, 4, 1, "", "fikename"], [16, 4, 1, "", "name"], [16, 2, 1, "", "run"], [16, 4, 1, "", "tree"], [16, 4, 1, "", "version"]], "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor": [[16, 2, 1, "", "check_A000"], [16, 4, 1, "", "errors"], [16, 2, 1, "", "visit_AsyncFunctionDef"], [16, 2, 1, "", "visit_ClassDef"], [16, 2, 1, "", "visit_FunctionDef"]], "ax.utils.flake8_plugins.docstring_checker.Error": [[16, 4, 1, "", "col"], [16, 4, 1, "", "lineno"], [16, 4, 1, "", "message"], [16, 4, 1, "", "type"]], "ax.utils.measurement": [[16, 0, 0, "-", "synthetic_functions"]], "ax.utils.measurement.synthetic_functions": [[16, 1, 1, "", "Aug_Branin"], [16, 1, 1, "", "Aug_Hartmann6"], [16, 1, 1, "", "Branin"], [16, 1, 1, "", "FromBotorch"], [16, 1, 1, "", "Hartmann6"], [16, 1, 1, "", "SyntheticFunction"], [16, 5, 1, "", "from_botorch"]], "ax.utils.measurement.synthetic_functions.FromBotorch": [[16, 3, 1, "", "name"]], "ax.utils.measurement.synthetic_functions.SyntheticFunction": [[16, 3, 1, "", "domain"], [16, 2, 1, "", "f"], [16, 3, 1, "", "fmax"], [16, 3, 1, "", "fmin"], [16, 2, 1, "", "informative_failure_on_none"], [16, 3, 1, "", "maximums"], [16, 3, 1, "", "minimums"], [16, 3, 1, "", "name"], [16, 3, 1, "", "required_dimensionality"]], "ax.utils.sensitivity": [[16, 0, 0, "-", "derivative_gp"], [16, 0, 0, "-", "derivative_measures"], [16, 0, 0, "-", "sobol_measures"]], "ax.utils.sensitivity.derivative_gp": [[16, 5, 1, "", "get_KXX_inv"], [16, 5, 1, "", "get_KxX_dx"], [16, 5, 1, "", "get_Kxx_dx2"], [16, 5, 1, "", "posterior_derivative"]], "ax.utils.sensitivity.derivative_measures": [[16, 1, 1, "", "GpDGSMGpMean"], [16, 1, 1, "", "GpDGSMGpSampling"], [16, 5, 1, "", "compute_derivatives_from_model_list"], [16, 5, 1, "", "sample_discrete_parameters"]], "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean": [[16, 2, 1, "", "aggregation"], [16, 4, 1, "", "bootstrap_indices"], [16, 2, 1, "", "gradient_absolute_measure"], [16, 2, 1, "", "gradient_measure"], [16, 2, 1, "", "gradients_square_measure"], [16, 4, 1, "", "mean_gradients"], [16, 4, 1, "", "mean_gradients_btsp"]], "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling": [[16, 2, 1, "", "aggregation"], [16, 4, 1, "", "samples_gradients"], [16, 4, 1, "", "samples_gradients_btsp"]], "ax.utils.sensitivity.sobol_measures": [[16, 5, 1, "", "GaussianLinkMean"], [16, 5, 1, "", "ProbitLinkMean"], [16, 1, 1, "", "SobolSensitivity"], [16, 1, 1, "", "SobolSensitivityGPMean"], [16, 1, 1, "", "SobolSensitivityGPSampling"], [16, 5, 1, "", "ax_parameter_sens"], [16, 5, 1, "", "compute_sobol_indices_from_model_list"]], "ax.utils.sensitivity.sobol_measures.SobolSensitivity": [[16, 2, 1, "", "evalute_function"], [16, 2, 1, "", "first_order_indices"], [16, 2, 1, "", "generate_all_input_matrix"], [16, 2, 1, "", "second_order_indices"], [16, 2, 1, "", "total_order_indices"]], "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean": [[16, 2, 1, "", "first_order_indices"], [16, 2, 1, "", "second_order_indices"], [16, 2, 1, "", "total_order_indices"]], "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling": [[16, 3, 1, "", "dim"], [16, 2, 1, "", "first_order_indices"], [16, 2, 1, "", "second_order_indices"], [16, 2, 1, "", "total_order_indices"]], "ax.utils.stats": [[16, 0, 0, "-", "statstools"]], "ax.utils.stats.statstools": [[16, 5, 1, "", "agresti_coull_sem"], [16, 5, 1, "", "inverse_variance_weight"], [16, 5, 1, "", "marginal_effects"], [16, 5, 1, "", "positive_part_james_stein"], [16, 5, 1, "", "relativize"], [16, 5, 1, "", "relativize_data"], [16, 5, 1, "", "total_variance"], [16, 5, 1, "", "unrelativize"]], "ax.utils.testing": [[16, 0, 0, "-", "backend_simulator"], [16, 0, 0, "-", "mock"], [16, 0, 0, "-", "test_init_files"], [16, 0, 0, "-", "torch_stubs"], [16, 0, 0, "-", "utils"]], "ax.utils.testing.backend_simulator": [[16, 1, 1, "", "BackendSimulator"], [16, 1, 1, "", "BackendSimulatorOptions"], [16, 1, 1, "", "BackendSimulatorState"], [16, 1, 1, "", "SimStatus"], [16, 1, 1, "", "SimTrial"], [16, 5, 1, "", "format"]], "ax.utils.testing.backend_simulator.BackendSimulator": [[16, 3, 1, "", "all_trials"], [16, 2, 1, "", "from_state"], [16, 2, 1, "", "get_sim_trial_by_index"], [16, 2, 1, "", "lookup_trial_index_status"], [16, 2, 1, "", "new_trial"], [16, 3, 1, "", "num_completed"], [16, 3, 1, "", "num_failed"], [16, 3, 1, "", "num_queued"], [16, 3, 1, "", "num_running"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "run_trial"], [16, 2, 1, "", "state"], [16, 2, 1, "", "status"], [16, 2, 1, "", "stop_trial"], [16, 3, 1, "", "time"], [16, 2, 1, "", "update"], [16, 3, 1, "", "use_internal_clock"]], "ax.utils.testing.backend_simulator.BackendSimulatorOptions": [[16, 4, 1, "", "failure_rate"], [16, 4, 1, "", "internal_clock"], [16, 4, 1, "", "max_concurrency"], [16, 4, 1, "", "time_scaling"], [16, 4, 1, "", "use_update_as_start_time"]], "ax.utils.testing.backend_simulator.BackendSimulatorState": [[16, 4, 1, "", "completed"], [16, 4, 1, "", "failed"], [16, 4, 1, "", "options"], [16, 4, 1, "", "queued"], [16, 4, 1, "", "running"], [16, 4, 1, "", "verbose_logging"]], "ax.utils.testing.backend_simulator.SimStatus": [[16, 4, 1, "id0", "completed"], [16, 4, 1, "id1", "failed"], [16, 4, 1, "id2", "queued"], [16, 4, 1, "id3", "running"], [16, 4, 1, "id4", "time_remaining"]], "ax.utils.testing.backend_simulator.SimTrial": [[16, 4, 1, "id5", "sim_completed_time"], [16, 4, 1, "id6", "sim_queued_time"], [16, 4, 1, "id7", "sim_runtime"], [16, 4, 1, "id8", "sim_start_time"], [16, 4, 1, "id9", "trial_index"]], "ax.utils.testing.mock": [[16, 5, 1, "", "fast_botorch_optimize"], [16, 5, 1, "", "fast_botorch_optimize_context_manager"], [16, 5, 1, "", "skip_fit_gpytorch_mll"], [16, 5, 1, "", "skip_fit_gpytorch_mll_context_manager"]], "ax.utils.testing.test_init_files": [[16, 1, 1, "", "InitTest"]], "ax.utils.testing.test_init_files.InitTest": [[16, 2, 1, "", "test_InitFiles"]], "ax.utils.testing.torch_stubs": [[16, 5, 1, "", "get_torch_test_data"]], "ax.utils.testing.utils": [[16, 5, 1, "", "generic_equals"]], "ax.utils.tutorials": [[16, 0, 0, "-", "cnn_utils"]], "ax.utils.tutorials.cnn_utils": [[16, 1, 1, "", "CNN"], [16, 5, 1, "", "evaluate"], [16, 5, 1, "", "get_partition_data_loaders"], [16, 5, 1, "", "load_mnist"], [16, 5, 1, "", "split_dataset"], [16, 5, 1, "", "train"]], "ax.utils.tutorials.cnn_utils.CNN": [[16, 2, 1, "", "forward"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"ax": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "analysi": 0, "markdown": 0, "plotli": 0, "healthcheck": 0, "parallel": [0, 11], "coordin": [0, 11], "benchmark": [2, 16], "method": 2, "metric": [2, 3, 8, 16], "problem": [2, 12], "result": [2, 16], "modular": 2, "botorch": [2, 10, 12], "sobol": [2, 10, 16], "registri": [2, 9, 14], "high": 2, "dimension": 2, "embed": 2, "surrog": [2, 10], "mix": 2, "integ": 2, "synthet": [2, 12, 16], "jenatton": 2, "pytorchcnn": 2, "torchvis": 2, "runner": [2, 3, 12], "base": [2, 4, 6, 9, 10, 11, 16], "test": [2, 12, 16], "core": [3, 5, 16], "class": 3, "arm": 3, "basetri": 3, "batchtrial": 3, "data": [3, 5], "experi": [3, 15], "auxiliaryexperi": 3, "generationstrategyinterfac": 3, "generatorrun": 3, "mapdata": 3, "mapmetr": 3, "multitypeexperi": 3, "object": 3, "observ": 3, "optimizationconfig": 3, "outcomeconstraint": 3, "paramet": 3, "parameterconstraint": 3, "parameterdistribut": 3, "riskmeasur": 3, "searchspac": 3, "trial": 3, "type": [3, 10], "util": [3, 4, 9, 10, 11, 13, 14, 16], "format": 3, "early_stop": 4, "strategi": [4, 5, 6, 9, 15], "logic": 4, "percentileearlystoppingstrategi": 4, "thresholdearlystoppingstrategi": 4, "except": 5, "constant": [5, 16], "gener": [5, 9, 15], "model": [5, 9, 10, 11, 16], "storag": [5, 14], "global_stop": 6, "improvementglobalstoppingstrategi": 6, "api": 7, "refer": 7, "indic": 7, "tabl": [7, 11], "branin": [8, 16], "map": [8, 9, 16], "chemistri": 8, "curv": 8, "factori": [8, 9], "hartmann6": 8, "l2": 8, "norm": 8, "noisi": 8, "function": [8, 16], "sklearn": 8, "tensorboard": 8, "torchx": [8, 12], "modelbridg": 9, "node": 9, "extern": 9, "modelspec": 9, "bridg": 9, "discret": [9, 10], "random": [9, 10, 16], "torch": [9, 10, 16], "pairwis": 9, "predict": 9, "cross": 9, "valid": [9, 14], "select": 9, "dispatch": 9, "transform": 9, "deprecated_transform_mixin": 9, "cast": 9, "cap_paramet": 9, "centered_unit_x": 9, "choice_encod": 9, "convert_metric_nam": 9, "derelativ": 9, "int_range_to_choic": 9, "int_to_float": 9, "ivw": 9, "inverse_gaussian_cdf_i": 9, "log": 9, "log_i": 9, "logit": 9, "map_unit_x": 9, "merge_repeated_measur": 9, "metrics_as_task": 9, "one_hot": 9, "percentile_i": 9, "power_transform_i": 9, "remove_fix": 9, "round": 9, "search_space_to_choic": 9, "search_space_to_float": 9, "stratified_standardize_i": 9, "task_encod": 9, "time_as_featur": 9, "transform_to_new_sq": 9, "trial_as_task": 9, "unit_x": 9, "winsor": 9, "relativ": 9, "discrete_bas": 10, "modul": [10, 14], "torch_bas": 10, "model_util": 10, "winsorization_config": 10, "eb_thompson": 10, "full_factori": 10, "thompson": 10, "uniform": 10, "botorch_default": 10, "botorch_kg": 10, "botorch_moo": 10, "botorch_moo_default": 10, "botorch_modular": 10, "acquisit": 10, "randomforest": 10, "multi_fidel": 10, "optimizer_argpars": 10, "sebo": 10, "kernel": 10, "input_constructor": 10, "covar_modul": 10, "input_transform": 10, "outcome_transform": 10, "cbo_lcea": 10, "cbo_lcem": 10, "cbo_sac": 10, "fully_bayesian": 10, "fully_bayesian_model_util": 10, "plot": [11, 16], "render": [11, 16], "bandit": 11, "rollout": 11, "contour": 11, "featur": 11, "import": 11, "margin": 11, "effect": 11, "diagnost": 11, "pareto": 11, "scatter": 11, "slice": 11, "trace": 11, "singlerunningtrialmixin": 12, "simul": [12, 16], "backend": [12, 16], "servic": 13, "client": 13, "manag": 13, "loop": 13, "interact": 13, "schedul": [13, 15, 16], "best": 13, "point": 13, "identif": 13, "instanti": 13, "report": [13, 16], "withdbsettingsbas": 13, "earlystop": 13, "json": 14, "json_stor": 14, "decod": 14, "encod": 14, "load": 14, "save": 14, "sqlalchemi": 14, "mysql": 14, "sqlite": 14, "sqa_stor": 14, "base_decod": 14, "base_encod": 14, "db": 14, "delet": 14, "struct": 14, "sqa_class": 14, "sqa_config": 14, "sqa_enum": 14, "timestamp": 14, "reduced_st": 14, "telemetri": 15, "common": 16, "decor": 16, "deprec": 16, "docutil": 16, "equal": 16, "executil": 16, "kwarg": 16, "logger": 16, "mock": 16, "serial": 16, "testutil": 16, "timeutil": 16, "typeutil": 16, "non": 16, "nativ": 16, "flake8": 16, "plugin": 16, "docstr": 16, "checker": 16, "measur": 16, "notebook": 16, "sensit": 16, "deriv": 16, "gp": 16, "stat": 16, "statstool": 16, "fit": 16, "stub": 16, "prefer": 16, "init": 16, "file": 16, "tutori": 16, "neural": 16, "net": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ax.analysis": [[0, "ax-analysis"]], "Analysis": [[0, "analysis"]], "Markdown Analysis": [[0, "markdown-analysis"]], "Plotly Analysis": [[0, "plotly-analysis"]], "Healthcheck Analysis": [[0, "healthcheck-analysis"]], "Parallel Coordinates Analysis": [[0, "parallel-coordinates-analysis"]], "ax": [[1, "ax"]], "ax.benchmark": [[2, "ax-benchmark"]], "Benchmark": [[2, "benchmark"], [2, "id1"]], "Benchmark Method": [[2, "benchmark-method"]], "Benchmark Metric": [[2, "benchmark-metric"]], "Benchmark Problem": [[2, "benchmark-problem"]], "Benchmark Result": [[2, "benchmark-result"]], "Benchmark Methods Modular BoTorch": [[2, "benchmark-methods-modular-botorch"]], "Benchmark Methods Sobol": [[2, "benchmark-methods-sobol"]], "Benchmark Problems Registry": [[2, "benchmark-problems-registry"]], "Benchmark Problems High Dimensional Embedding": [[2, "benchmark-problems-high-dimensional-embedding"]], "Benchmark Problems Surrogate": [[2, "benchmark-problems-surrogate"]], "Benchmark Problems Mixed Integer Synthetic": [[2, "benchmark-problems-mixed-integer-synthetic"]], "Benchmark Problems Jenatton": [[2, "benchmark-problems-jenatton"]], "Benchmark Problems PyTorchCNN": [[2, "benchmark-problems-pytorchcnn"]], "Benchmark Problems PyTorchCNN TorchVision": [[2, "benchmark-problems-pytorchcnn-torchvision"]], "Benchmark Runners Base": [[2, "benchmark-runners-base"]], "Benchmark Runners BoTorch Test": [[2, "benchmark-runners-botorch-test"]], "Benchmark Runners Surrogate": [[2, "benchmark-runners-surrogate"]], "ax.core": [[3, "module-ax.core"]], "Core Classes": [[3, "core-classes"]], "Arm": [[3, "module-ax.core.arm"]], "BaseTrial": [[3, "module-ax.core.base_trial"]], "BatchTrial": [[3, "module-ax.core.batch_trial"]], "Data": [[3, "data"], [5, "module-ax.exceptions.data_provider"]], "Experiment": [[3, "module-ax.core.experiment"], [15, "experiment"]], "AuxiliaryExperiment": [[3, "auxiliaryexperiment"]], "GenerationStrategyInterface": [[3, "module-ax.core.generation_strategy_interface"]], "GeneratorRun": [[3, "module-ax.core.generator_run"]], "MapData": [[3, "mapdata"]], "MapMetric": [[3, "mapmetric"]], "Metric": [[3, "metric"]], "MultiTypeExperiment": [[3, "module-ax.core.multi_type_experiment"]], "Objective": [[3, "objective"]], "Observation": [[3, "module-ax.core.observation"]], "OptimizationConfig": [[3, "module-ax.core.optimization_config"]], "OutcomeConstraint": [[3, "outcomeconstraint"]], "Parameter": [[3, "module-ax.core.parameter"]], "ParameterConstraint": [[3, "module-ax.core.parameter_constraint"]], "ParameterDistribution": [[3, "module-ax.core.parameter_distribution"]], "RiskMeasure": [[3, "module-ax.core.risk_measures"]], "Runner": [[3, "module-ax.core.runner"]], "SearchSpace": [[3, "searchspace"]], "Trial": [[3, "module-ax.core.trial"]], "Core Types": [[3, "module-ax.core.types"]], "Core Utils": [[3, "module-ax.core.utils"]], "Formatting Utils": [[3, "module-ax.core.formatting_utils"]], "ax.early_stopping": [[4, "ax-early-stopping"]], "Strategies": [[4, "strategies"], [6, "strategies"]], "Base Strategies": [[4, "base-strategies"], [6, "base-strategies"]], "Logical Strategies": [[4, "logical-strategies"]], "PercentileEarlyStoppingStrategy": [[4, "percentileearlystoppingstrategy"]], "ThresholdEarlyStoppingStrategy": [[4, "thresholdearlystoppingstrategy"]], "Utils": [[4, "utils"], [13, "utils"], [16, "module-ax.utils.testing.utils"]], "ax.exceptions": [[5, "module-ax.exceptions"]], "Constants": [[5, "module-ax.exceptions.constants"], [16, "module-ax.utils.common.constants"]], "Core": [[5, "module-ax.exceptions.core"]], "Generation Strategy": [[5, "module-ax.exceptions.generation_strategy"], [9, "generation-strategy"], [15, "generation-strategy"]], "Model": [[5, "module-ax.exceptions.model"]], "Storage": [[5, "module-ax.exceptions.storage"]], "ax.global_stopping": [[6, "ax-global-stopping"]], "ImprovementGlobalStoppingStrategy": [[6, "improvementglobalstoppingstrategy"]], "API Reference": [[7, "api-reference"]], "Indices and tables": [[7, "indices-and-tables"]], "ax.metrics": [[8, "ax-metrics"]], "Branin": [[8, "branin"]], "Branin Map": [[8, "branin-map"]], "Chemistry": [[8, "chemistry"]], "Curve": [[8, "curve"]], "Factorial": [[8, "factorial"]], "Hartmann6": [[8, "hartmann6"]], "L2 Norm": [[8, "l2-norm"]], "Noisy Functions": [[8, "noisy-functions"]], "Noisy Function Map": [[8, "noisy-function-map"]], "Sklearn": [[8, "sklearn"]], "Tensorboard": [[8, "tensorboard"]], "TorchX": [[8, "torchx"]], "ax.modelbridge": [[9, "module-ax.modelbridge"]], "Generation Strategy, Registry, and Factory": [[9, "generation-strategy-registry-and-factory"]], "Generation Node": [[9, "generation-node"]], "External Generation Node": [[9, "external-generation-node"]], "Registry": [[9, "module-ax.modelbridge.registry"]], "Factory": [[9, "module-ax.modelbridge.factory"]], "ModelSpec": [[9, "modelspec"]], "Model Bridges": [[9, "model-bridges"]], "Base Model Bridge": [[9, "module-ax.modelbridge.base"]], "Discrete Model Bridge": [[9, "module-ax.modelbridge.discrete"]], "Random Model Bridge": [[9, "random-model-bridge"]], "Torch Model Bridge": [[9, "module-ax.modelbridge.torch"]], "Pairwise Model Bridge": [[9, "module-ax.modelbridge.pairwise"]], "Map Torch Model Bridge": [[9, "module-ax.modelbridge.map_torch"]], "Utilities": [[9, "utilities"], [14, "utilities"]], "General Utilities": [[9, "module-ax.modelbridge.modelbridge_utils"]], "Prediction Utilities": [[9, "module-ax.modelbridge.prediction_utils"]], "Cross Validation": [[9, "cross-validation"]], "Model Selection": [[9, "model-selection"]], "Dispatch Utilities": [[9, "dispatch-utilities"]], "Transforms": [[9, "transforms"]], "ax.modelbridge.transforms.deprecated_transform_mixin": [[9, "module-ax.modelbridge.transforms.deprecated_transform_mixin"]], "ax.modelbridge.transforms.base": [[9, "module-ax.modelbridge.transforms.base"]], "ax.modelbridge.transforms.cast": [[9, "module-ax.modelbridge.transforms.cast"]], "ax.modelbridge.transforms.cap_parameter": [[9, "module-ax.modelbridge.transforms.cap_parameter"]], "ax.modelbridge.transforms.centered_unit_x": [[9, "module-ax.modelbridge.transforms.centered_unit_x"]], "ax.modelbridge.transforms.choice_encode": [[9, "module-ax.modelbridge.transforms.choice_encode"]], "ax.modelbridge.transforms.convert_metric_names": [[9, "module-ax.modelbridge.transforms.convert_metric_names"]], "ax.modelbridge.transforms.derelativize": [[9, "module-ax.modelbridge.transforms.derelativize"]], "ax.modelbridge.transforms.int_range_to_choice": [[9, "module-ax.modelbridge.transforms.int_range_to_choice"]], "ax.modelbridge.transforms.int_to_float": [[9, "module-ax.modelbridge.transforms.int_to_float"]], "ax.modelbridge.transforms.ivw": [[9, "module-ax.modelbridge.transforms.ivw"]], "ax.modelbridge.transforms.inverse_gaussian_cdf_y": [[9, "module-ax.modelbridge.transforms.inverse_gaussian_cdf_y"]], "ax.modelbridge.transforms.log": [[9, "module-ax.modelbridge.transforms.log"]], "ax.modelbridge.transforms.log_y": [[9, "module-ax.modelbridge.transforms.log_y"]], "ax.modelbridge.transforms.logit": [[9, "module-ax.modelbridge.transforms.logit"]], "ax.modelbridge.transforms.map_unit_x": [[9, "module-ax.modelbridge.transforms.map_unit_x"]], "ax.modelbridge.transforms.merge_repeated_measurements": [[9, "module-ax.modelbridge.transforms.merge_repeated_measurements"]], "ax.modelbridge.transforms.metrics_as_task": [[9, "module-ax.modelbridge.transforms.metrics_as_task"]], "ax.modelbridge.transforms.one_hot": [[9, "module-ax.modelbridge.transforms.one_hot"]], "ax.modelbridge.transforms.percentile_y": [[9, "module-ax.modelbridge.transforms.percentile_y"]], "ax.modelbridge.transforms.power_transform_y": [[9, "ax-modelbridge-transforms-power-transform-y"]], "ax.modelbridge.transforms.remove_fixed": [[9, "module-ax.modelbridge.transforms.remove_fixed"]], "ax.modelbridge.transforms.rounding": [[9, "module-ax.modelbridge.transforms.rounding"]], "ax.modelbridge.transforms.search_space_to_choice": [[9, "module-ax.modelbridge.transforms.search_space_to_choice"]], "ax.modelbridge.transforms.search_space_to_float": [[9, "ax-modelbridge-transforms-search-space-to-float"]], "ax.modelbridge.transforms.stratified_standardize_y": [[9, "module-ax.modelbridge.transforms.stratified_standardize_y"]], "ax.modelbridge.transforms.task_encode": [[9, "module-ax.modelbridge.transforms.task_encode"]], "ax.modelbridge.transforms.time_as_feature": [[9, "ax-modelbridge-transforms-time-as-feature"]], "ax.modelbridge.transforms.transform_to_new_sq": [[9, "ax-modelbridge-transforms-transform-to-new-sq"]], "ax.modelbridge.transforms.trial_as_task": [[9, "module-ax.modelbridge.transforms.trial_as_task"]], "ax.modelbridge.transforms.unit_x": [[9, "module-ax.modelbridge.transforms.unit_x"]], "ax.modelbridge.transforms.utils": [[9, "module-ax.modelbridge.transforms.utils"]], "ax.modelbridge.winsorize": [[9, "module-ax.modelbridge.transforms.winsorize"]], "}": [[9, "id3"]], "ax.modelbridge.transforms.relativize": [[9, "module-ax.modelbridge.transforms.relativize"]], "ax.models": [[10, "module-ax.models"]], "Base Models & Utilities": [[10, "base-models-utilities"]], "ax.models.base": [[10, "module-ax.models.base"]], "ax.models.discrete_base module": [[10, "module-ax.models.discrete_base"]], "ax.models.torch_base module": [[10, "module-ax.models.torch_base"]], "ax.models.model_utils module": [[10, "module-ax.models.model_utils"]], "ax.models.types": [[10, "module-ax.models.types"]], "ax.models.winsorization_config module": [[10, "module-ax.models.winsorization_config"]], "Discrete Models": [[10, "discrete-models"]], "ax.models.discrete.eb_thompson module": [[10, "module-ax.models.discrete.eb_thompson"]], "ax.models.discrete.full_factorial module": [[10, "module-ax.models.discrete.full_factorial"]], "ax.models.discrete.thompson module": [[10, "module-ax.models.discrete.thompson"]], "Random Models": [[10, "random-models"]], "ax.models.random.base module": [[10, "module-ax.models.random.base"]], "ax.models.random.uniform module": [[10, "module-ax.models.random.uniform"]], "ax.models.random.sobol module": [[10, "module-ax.models.random.sobol"]], "Torch Models & Utilities": [[10, "torch-models-utilities"]], "ax.models.torch.botorch module": [[10, "module-ax.models.torch.botorch"]], "ax.models.torch.botorch_defaults module": [[10, "module-ax.models.torch.botorch_defaults"]], "ax.models.torch.botorch_kg module": [[10, "module-ax.models.torch.botorch_kg"]], "ax.models.torch.botorch_moo module": [[10, "module-ax.models.torch.botorch_moo"]], "ax.models.torch.botorch_moo_defaults module": [[10, "module-ax.models.torch.botorch_moo_defaults"]], "ax.models.torch.botorch_modular.acquisition module": [[10, "module-ax.models.torch.botorch_modular.acquisition"]], "ax.models.torch.randomforest module": [[10, "ax-models-torch-randomforest-module"]], "ax.models.torch.botorch_modular.model module": [[10, "module-ax.models.torch.botorch_modular.model"]], "ax.models.torch.botorch_modular.multi_fidelity module": [[10, "ax-models-torch-botorch-modular-multi-fidelity-module"]], "ax.models.torch.botorch_modular.optimizer_argparse module": [[10, "module-ax.models.torch.botorch_modular.optimizer_argparse"]], "ax.models.torch.botorch_modular.sebo module": [[10, "module-ax.models.torch.botorch_modular.sebo"]], "ax.models.torch.botorch_modular.surrogate module": [[10, "module-ax.models.torch.botorch_modular.surrogate"]], "ax.models.torch.botorch_modular.utils module": [[10, "module-ax.models.torch.botorch_modular.utils"]], "ax.models.torch.botorch_modular.kernels module": [[10, "module-ax.models.torch.botorch_modular.kernels"]], "ax.models.torch.botorch_modular.input_constructors.covar_modules module": [[10, "module-ax.models.torch.botorch_modular.input_constructors.covar_modules"]], "ax.models.torch.botorch_modular.input_constructors.input_transforms module": [[10, "module-ax.models.torch.botorch_modular.input_constructors.input_transforms"]], "ax.models.torch.botorch_modular.input_constructors.outcome_transform module": [[10, "module-ax.models.torch.botorch_modular.input_constructors.outcome_transform"]], "ax.models.torch.cbo_lcea module": [[10, "module-ax.models.torch.cbo_lcea"]], "ax.models.torch.cbo_lcem module": [[10, "module-ax.models.torch.cbo_lcem"]], "ax.models.torch.cbo_sac module": [[10, "module-ax.models.torch.cbo_sac"]], "ax.models.torch.fully_bayesian module": [[10, "ax-models-torch-fully-bayesian-module"]], "ax.models.torch.fully_bayesian_model_utils module": [[10, "ax-models-torch-fully-bayesian-model-utils-module"]], "ax.models.torch.utils module": [[10, "module-ax.models.torch.utils"]], "ax.plot": [[11, "ax-plot"]], "Rendering": [[11, "rendering"]], "Plots": [[11, "plots"]], "Base": [[11, "base"], [16, "module-ax.utils.common.base"]], "Bandit Rollout": [[11, "bandit-rollout"]], "Contour Plot": [[11, "contour-plot"]], "Feature Importances": [[11, "feature-importances"]], "Marginal Effects": [[11, "marginal-effects"]], "Model Diagnostics": [[11, "model-diagnostics"]], "Pareto Plots": [[11, "pareto-plots"]], "Scatter Plots": [[11, "scatter-plots"]], "Slice Plot": [[11, "slice-plot"]], "Table": [[11, "table"]], "Trace Plots": [[11, "trace-plots"]], "Parallel Coordinates": [[11, "parallel-coordinates"]], "Plotting Utilities": [[11, "plotting-utilities"]], "ax.runners": [[12, "ax-runners"]], "BoTorch Test Problem": [[12, "botorch-test-problem"]], "SingleRunningTrialMixin": [[12, "singlerunningtrialmixin"]], "Synthetic Runner": [[12, "synthetic-runner"]], "Simulated Backend Runner": [[12, "simulated-backend-runner"]], "TorchX Runner": [[12, "torchx-runner"]], "ax.service": [[13, "ax-service"]], "Ax Client": [[13, "ax-client"]], "Managed Loop": [[13, "managed-loop"]], "Interactive Loop": [[13, "interactive-loop"]], "Scheduler": [[13, "scheduler"], [15, "scheduler"]], "Best Point Identification": [[13, "best-point-identification"]], "Instantiation": [[13, "instantiation"]], "Reporting": [[13, "reporting"]], "WithDBSettingsBase": [[13, "withdbsettingsbase"]], "EarlyStopping": [[13, "earlystopping"]], "ax.storage": [[14, "ax-storage"]], "JSON": [[14, "json"]], "ax.storage.json_store.decoder module": [[14, "ax-storage-json-store-decoder-module"]], "ax.storage.json_store.decoders module": [[14, "ax-storage-json-store-decoders-module"]], "ax.storage.json_store.encoder module": [[14, "ax-storage-json-store-encoder-module"]], "ax.storage.json_store.encoders module": [[14, "ax-storage-json-store-encoders-module"]], "ax.storage.json_store.load module": [[14, "ax-storage-json-store-load-module"]], "ax.storage.json_store.registry module": [[14, "ax-storage-json-store-registry-module"]], "ax.storage.json_store.save module": [[14, "ax-storage-json-store-save-module"]], "SQLAlchemy (MySQL / SQLite)": [[14, "sqlalchemy-mysql-sqlite"]], "ax.storage.sqa_store.base_decoder module": [[14, "ax-storage-sqa-store-base-decoder-module"]], "ax.storage.sqa_store.base_encoder module": [[14, "ax-storage-sqa-store-base-encoder-module"]], "ax.storage.sqa_store.db module": [[14, "ax-storage-sqa-store-db-module"]], "ax.storage.sqa_store.delete module": [[14, "ax-storage-sqa-store-delete-module"]], "ax.storage.sqa_store.json module": [[14, "ax-storage-sqa-store-json-module"]], "ax.storage.sqa_store.load module": [[14, "ax-storage-sqa-store-load-module"]], "ax.storage.sqa_store.save module": [[14, "ax-storage-sqa-store-save-module"]], "ax.storage.sqa_store.structs module": [[14, "ax-storage-sqa-store-structs-module"]], "ax.storage.sqa_store.sqa_classes module": [[14, "ax-storage-sqa-store-sqa-classes-module"]], "ax.storage.sqa_store.sqa_config module": [[14, "ax-storage-sqa-store-sqa-config-module"]], "ax.storage.sqa_store.sqa_enum module": [[14, "ax-storage-sqa-store-sqa-enum-module"]], "ax.storage.sqa_store.timestamp module": [[14, "ax-storage-sqa-store-timestamp-module"]], "ax.storage.sqa_store.utils module": [[14, "ax-storage-sqa-store-utils-module"]], "ax.storage.sqa_store.validation module": [[14, "ax-storage-sqa-store-validation-module"]], "ax.storage.sqa_store.reduced_state module": [[14, "ax-storage-sqa-store-reduced-state-module"]], "Registries": [[14, "registries"]], "ax.telemetry": [[15, "ax-telemetry"]], "ax.utils": [[16, "module-ax.utils"]], "Common": [[16, "common"]], "Decorator": [[16, "module-ax.utils.common.decorator"]], "Deprecation": [[16, "module-ax.utils.common.deprecation"]], "Docutils": [[16, "module-ax.utils.common.docutils"]], "Equality": [[16, "module-ax.utils.common.equality"]], "Executils": [[16, "module-ax.utils.common.executils"]], "Kwargs": [[16, "module-ax.utils.common.kwargs"]], "Logger": [[16, "module-ax.utils.common.logger"]], "Mock Torch": [[16, "module-ax.utils.common.mock"]], "Random": [[16, "module-ax.utils.common.random"]], "Result": [[16, "module-ax.utils.common.result"]], "Serialization": [[16, "module-ax.utils.common.serialization"]], "Testutils": [[16, "module-ax.utils.common.testutils"]], "Timeutils": [[16, "module-ax.utils.common.timeutils"]], "Typeutils": [[16, "module-ax.utils.common.typeutils"]], "Typeutils Non-Native": [[16, "typeutils-non-native"]], "Typeutils Torch": [[16, "module-ax.utils.common.typeutils_torch"]], "Flake8 Plugins": [[16, "flake8-plugins"]], "Docstring Checker": [[16, "module-ax.utils.flake8_plugins.docstring_checker"]], "Measurement": [[16, "measurement"]], "Synthetic Functions": [[16, "module-ax.utils.measurement.synthetic_functions"]], "Notebook": [[16, "notebook"]], "Plotting": [[16, "plotting"]], "Report": [[16, "report"]], "Render": [[16, "render"]], "Sensitivity": [[16, "sensitivity"]], "Derivative GP": [[16, "module-ax.utils.sensitivity.derivative_gp"]], "Derivative Measures": [[16, "module-ax.utils.sensitivity.derivative_measures"]], "Sobol Measures": [[16, "module-ax.utils.sensitivity.sobol_measures"]], "Stats": [[16, "stats"]], "Statstools": [[16, "module-ax.utils.stats.statstools"]], "Model Fit Metrics": [[16, "model-fit-metrics"]], "Testing": [[16, "testing"]], "Backend Scheduler": [[16, "backend-scheduler"]], "Backend Simulator": [[16, "module-ax.utils.testing.backend_simulator"]], "Benchmark Stubs": [[16, "benchmark-stubs"]], "Core Stubs": [[16, "core-stubs"]], "Modeling Stubs": [[16, "modeling-stubs"]], "Preference Stubs": [[16, "preference-stubs"]], "Mocking": [[16, "module-ax.utils.testing.mock"]], "Test Init Files": [[16, "module-ax.utils.testing.test_init_files"]], "Torch Stubs": [[16, "module-ax.utils.testing.torch_stubs"]], "Test Metrics": [[16, "test-metrics"]], "Backend Simulator Map": [[16, "backend-simulator-map"]], "Branin Backend Map": [[16, "branin-backend-map"]], "Tutorials": [[16, "tutorials"]], "Neural Net": [[16, "module-ax.utils.tutorials.cnn_utils"]]}, "indexentries": {"abandoned (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.ABANDONED"]], "abandonedarm (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.AbandonedArm"]], "arm (class in ax.core.arm)": [[3, "ax.core.arm.Arm"]], "armweight (class in ax.core.generator_run)": [[3, "ax.core.generator_run.ArmWeight"]], "auxiliaryexperiment (class in ax.core.auxiliary)": [[3, "ax.core.auxiliary.AuxiliaryExperiment"]], "auxiliaryexperimentpurpose (class in ax.core.auxiliary)": [[3, "ax.core.auxiliary.AuxiliaryExperimentPurpose"]], "bakeoff (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.BAKEOFF"]], "bool (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.BOOL"]], "basetrial (class in ax.core.base_trial)": [[3, "ax.core.base_trial.BaseTrial"]], "batchtrial (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.BatchTrial"]], "candidate (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.CANDIDATE"]], "completed (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.COMPLETED"]], "choiceparameter (class in ax.core.parameter)": [[3, "ax.core.parameter.ChoiceParameter"]], "comparisonop (class in ax.core.types)": [[3, "ax.core.types.ComparisonOp"]], "data (ax.core.formatting_utils.datatype attribute)": [[3, "ax.core.formatting_utils.DataType.DATA"]], "dispatched (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.DISPATCHED"]], "datatype (class in ax.core.formatting_utils)": [[3, "ax.core.formatting_utils.DataType"]], "early_stopped (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.EARLY_STOPPED"]], "exploration (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.EXPLORATION"]], "exploration_concurrent (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.EXPLORATION_CONCURRENT"]], "experiment (class in ax.core.experiment)": [[3, "ax.core.experiment.Experiment"]], "failed (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.FAILED"]], "float (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.FLOAT"]], "fixedparameter (class in ax.core.parameter)": [[3, "ax.core.parameter.FixedParameter"]], "geq (ax.core.types.comparisonop attribute)": [[3, "ax.core.types.ComparisonOp.GEQ"]], "generationstrategyinterface (class in ax.core.generation_strategy_interface)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface"]], "generatorrun (class in ax.core.generator_run)": [[3, "ax.core.generator_run.GeneratorRun"]], "generatorrunstruct (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.GeneratorRunStruct"]], "generatorruntype (class in ax.core.generator_run)": [[3, "ax.core.generator_run.GeneratorRunType"]], "int (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.INT"]], "iteration (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.ITERATION"]], "leq (ax.core.types.comparisonop attribute)": [[3, "ax.core.types.ComparisonOp.LEQ"]], "lifecyclestage (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.LifecycleStage"]], "manual (ax.core.generator_run.generatorruntype attribute)": [[3, "ax.core.generator_run.GeneratorRunType.MANUAL"]], "map_data (ax.core.formatting_utils.datatype attribute)": [[3, "ax.core.formatting_utils.DataType.MAP_DATA"]], "missingmetrics (class in ax.core.utils)": [[3, "ax.core.utils.MissingMetrics"]], "multiobjectiveoptimizationconfig (class in ax.core.optimization_config)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig"]], "multitypeexperiment (class in ax.core.multi_type_experiment)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment"]], "offline_optimized (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.OFFLINE_OPTIMIZED"]], "observation (class in ax.core.observation)": [[3, "ax.core.observation.Observation"]], "observationdata (class in ax.core.observation)": [[3, "ax.core.observation.ObservationData"]], "observationfeatures (class in ax.core.observation)": [[3, "ax.core.observation.ObservationFeatures"]], "optimizationconfig (class in ax.core.optimization_config)": [[3, "ax.core.optimization_config.OptimizationConfig"]], "orderconstraint (class in ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.OrderConstraint"]], "parameter (class in ax.core.parameter)": [[3, "ax.core.parameter.Parameter"]], "parameterconstraint (class in ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.ParameterConstraint"]], "parameterdistribution (class in ax.core.parameter_distribution)": [[3, "ax.core.parameter_distribution.ParameterDistribution"]], "parametertype (class in ax.core.parameter)": [[3, "ax.core.parameter.ParameterType"]], "running (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.RUNNING"]], "rangeparameter (class in ax.core.parameter)": [[3, "ax.core.parameter.RangeParameter"]], "riskmeasure (class in ax.core.risk_measures)": [[3, "ax.core.risk_measures.RiskMeasure"]], "runner (class in ax.core.runner)": [[3, "ax.core.runner.Runner"]], "staged (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.STAGED"]], "status_quo (ax.core.generator_run.generatorruntype attribute)": [[3, "ax.core.generator_run.GeneratorRunType.STATUS_QUO"]], "string (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.STRING"]], "sumconstraint (class in ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.SumConstraint"]], "trial (class in ax.core.trial)": [[3, "ax.core.trial.Trial"]], "trialstatus (class in ax.core.base_trial)": [[3, "ax.core.base_trial.TrialStatus"]], "abandoned_arm_names (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.abandoned_arm_names"]], "abandoned_arms (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.abandoned_arms"]], "abandoned_arms (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.abandoned_arms"]], "abandoned_arms (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.abandoned_arms"]], "abandoned_arms_metadata (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.abandoned_arms_metadata"]], "abandoned_reason (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.abandoned_reason"]], "add_arm() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.add_arm"]], "add_arm() (ax.core.generator_run.generatorrun method)": [[3, "ax.core.generator_run.GeneratorRun.add_arm"]], "add_arm() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.add_arm"]], "add_arm_and_prevent_naming_collision() (in module ax.core.experiment)": [[3, "ax.core.experiment.add_arm_and_prevent_naming_collision"]], "add_arms_and_weights() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.add_arms_and_weights"]], "add_generator_run() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.add_generator_run"]], "add_generator_run() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.add_generator_run"]], "add_tracking_metric() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.add_tracking_metric"]], "add_tracking_metric() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.add_tracking_metric"]], "add_tracking_metrics() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.add_tracking_metrics"]], "add_trial_type() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.add_trial_type"]], "add_values() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.add_values"]], "all_constraints (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.all_constraints"]], "all_constraints (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.all_constraints"]], "arm (ax.core.generator_run.armweight attribute)": [[3, "ax.core.generator_run.ArmWeight.arm"]], "arm (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.arm"]], "arm_name (ax.core.observation.observation attribute)": [[3, "ax.core.observation.Observation.arm_name"]], "arm_signatures (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.arm_signatures"]], "arm_weights (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.arm_weights"]], "arm_weights (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.arm_weights"]], "arms (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.arms"]], "arms (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.arms"]], "arms (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.arms"]], "arms (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.arms"]], "arms_by_name (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.arms_by_name"]], "arms_by_name (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.arms_by_name"]], "arms_by_name (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.arms_by_name"]], "arms_by_name (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.arms_by_name"]], "arms_by_signature (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.arms_by_signature"]], "arms_by_signature_for_deduplication (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.arms_by_signature_for_deduplication"]], "assign_runner() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.assign_runner"]], "attach_batch_trial_data() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.attach_batch_trial_data"]], "attach_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.attach_data"]], "attach_fetch_results() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.attach_fetch_results"]], "attach_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.attach_trial"]], "available_flags (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.available_flags"]], "available_flags (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.available_flags"]], "available_flags (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.available_flags"]], "available_flags (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.available_flags"]], "ax.core": [[3, "module-ax.core"]], "ax.core.arm": [[3, "module-ax.core.arm"]], "ax.core.auxiliary": [[3, "module-ax.core.auxiliary"]], "ax.core.base_trial": [[3, "module-ax.core.base_trial"]], "ax.core.batch_trial": [[3, "module-ax.core.batch_trial"]], "ax.core.experiment": [[3, "module-ax.core.experiment"]], "ax.core.formatting_utils": [[3, "module-ax.core.formatting_utils"]], "ax.core.generation_strategy_interface": [[3, "module-ax.core.generation_strategy_interface"]], "ax.core.generator_run": [[3, "module-ax.core.generator_run"]], "ax.core.multi_type_experiment": [[3, "module-ax.core.multi_type_experiment"]], "ax.core.observation": [[3, "module-ax.core.observation"]], "ax.core.optimization_config": [[3, "module-ax.core.optimization_config"]], "ax.core.parameter": [[3, "module-ax.core.parameter"]], "ax.core.parameter_constraint": [[3, "module-ax.core.parameter_constraint"]], "ax.core.parameter_distribution": [[3, "module-ax.core.parameter_distribution"]], "ax.core.risk_measures": [[3, "module-ax.core.risk_measures"]], "ax.core.runner": [[3, "module-ax.core.runner"]], "ax.core.trial": [[3, "module-ax.core.trial"]], "ax.core.types": [[3, "module-ax.core.types"]], "ax.core.utils": [[3, "module-ax.core.utils"]], "best_arm_predictions (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.best_arm_predictions"]], "best_feasible_objective() (in module ax.core.utils)": [[3, "ax.core.utils.best_feasible_objective"]], "bound (ax.core.parameter_constraint.parameterconstraint property)": [[3, "ax.core.parameter_constraint.ParameterConstraint.bound"]], "candidate_metadata_by_arm_signature (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.candidate_metadata_by_arm_signature"]], "cardinality() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.cardinality"]], "cardinality() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.cardinality"]], "cardinality() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.cardinality"]], "cardinality() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.cardinality"]], "cast() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.cast"]], "cast() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.cast"]], "check() (ax.core.parameter_constraint.parameterconstraint method)": [[3, "ax.core.parameter_constraint.ParameterConstraint.check"]], "check_objective_thresholds_match_objectives() (in module ax.core.optimization_config)": [[3, "ax.core.optimization_config.check_objective_thresholds_match_objectives"]], "clone() (ax.core.arm.arm method)": [[3, "ax.core.arm.Arm.clone"]], "clone() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.clone"]], "clone() (ax.core.generator_run.generatorrun method)": [[3, "ax.core.generator_run.GeneratorRun.clone"]], "clone() (ax.core.observation.observationfeatures method)": [[3, "ax.core.observation.ObservationFeatures.clone"]], "clone() (ax.core.optimization_config.optimizationconfig method)": [[3, "ax.core.optimization_config.OptimizationConfig.clone"]], "clone() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.clone"]], "clone() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.clone"]], "clone() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.clone"]], "clone() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.clone"]], "clone() (ax.core.parameter_constraint.orderconstraint method)": [[3, "ax.core.parameter_constraint.OrderConstraint.clone"]], "clone() (ax.core.parameter_constraint.parameterconstraint method)": [[3, "ax.core.parameter_constraint.ParameterConstraint.clone"]], "clone() (ax.core.parameter_constraint.sumconstraint method)": [[3, "ax.core.parameter_constraint.SumConstraint.clone"]], "clone() (ax.core.parameter_distribution.parameterdistribution method)": [[3, "ax.core.parameter_distribution.ParameterDistribution.clone"]], "clone() (ax.core.risk_measures.riskmeasure method)": [[3, "ax.core.risk_measures.RiskMeasure.clone"]], "clone() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.clone"]], "clone_reset() (ax.core.generation_strategy_interface.generationstrategyinterface method)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.clone_reset"]], "clone_to() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.clone_to"]], "clone_to() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.clone_to"]], "clone_with() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.clone_with"]], "clone_with_args() (ax.core.optimization_config.multiobjectiveoptimizationconfig method)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.clone_with_args"]], "clone_with_args() (ax.core.optimization_config.optimizationconfig method)": [[3, "ax.core.optimization_config.OptimizationConfig.clone_with_args"]], "clone_with_transformed_parameters() (ax.core.parameter_constraint.orderconstraint method)": [[3, "ax.core.parameter_constraint.OrderConstraint.clone_with_transformed_parameters"]], "clone_with_transformed_parameters() (ax.core.parameter_constraint.parameterconstraint method)": [[3, "ax.core.parameter_constraint.ParameterConstraint.clone_with_transformed_parameters"]], "clone_with_transformed_parameters() (ax.core.parameter_constraint.sumconstraint method)": [[3, "ax.core.parameter_constraint.SumConstraint.clone_with_transformed_parameters"]], "complete() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.complete"]], "completed_successfully (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.completed_successfully"]], "completed_trials (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.completed_trials"]], "constraint_dict (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.constraint_dict"]], "constraint_dict (ax.core.parameter_constraint.parameterconstraint property)": [[3, "ax.core.parameter_constraint.ParameterConstraint.constraint_dict"]], "constraint_dict (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.constraint_dict"]], "covariance (ax.core.observation.observationdata attribute)": [[3, "ax.core.observation.ObservationData.covariance"]], "covariance_matrix (ax.core.observation.observationdata property)": [[3, "ax.core.observation.ObservationData.covariance_matrix"]], "data (ax.core.observation.observation attribute)": [[3, "ax.core.observation.Observation.data"]], "data_and_evaluations_from_raw_data() (in module ax.core.formatting_utils)": [[3, "ax.core.formatting_utils.data_and_evaluations_from_raw_data"]], "data_by_trial (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.data_by_trial"]], "default_data_constructor (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.default_data_constructor"]], "default_data_type (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.default_data_type"]], "default_trial_type (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.default_trial_type"]], "default_trial_type (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.default_trial_type"]], "default_trials (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.default_trials"]], "dependents (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.dependents"]], "dependents (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.dependents"]], "dependents (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.dependents"]], "deployed_name (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.deployed_name"]], "description (ax.core.multi_type_experiment.multitypeexperiment attribute)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.description"]], "did_not_complete (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.did_not_complete"]], "digits (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.digits"]], "distribution (ax.core.parameter_distribution.parameterdistribution property)": [[3, "ax.core.parameter_distribution.ParameterDistribution.distribution"]], "distribution_class (ax.core.parameter_distribution.parameterdistribution property)": [[3, "ax.core.parameter_distribution.ParameterDistribution.distribution_class"]], "distribution_parameters (ax.core.parameter_distribution.parameterdistribution property)": [[3, "ax.core.parameter_distribution.ParameterDistribution.distribution_parameters"]], "domain_repr (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.domain_repr"]], "domain_repr (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.domain_repr"]], "domain_repr (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.domain_repr"]], "domain_repr (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.domain_repr"]], "end_time (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.end_time"]], "expecting_data (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.expecting_data"]], "experiment (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.experiment"]], "experiment (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.experiment"]], "experiment (ax.core.generation_strategy_interface.generationstrategyinterface property)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.experiment"]], "experiment_type (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.experiment_type"]], "extend_pending_observations() (in module ax.core.utils)": [[3, "ax.core.utils.extend_pending_observations"]], "extract_arm_predictions() (in module ax.core.generator_run)": [[3, "ax.core.generator_run.extract_arm_predictions"]], "extract_pending_observations() (in module ax.core.utils)": [[3, "ax.core.utils.extract_pending_observations"]], "failed_reason (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.failed_reason"]], "features (ax.core.observation.observation attribute)": [[3, "ax.core.observation.Observation.features"]], "fetch_data() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.fetch_data"]], "fetch_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_data"]], "fetch_data() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.fetch_data"]], "fetch_data_results() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.fetch_data_results"]], "fetch_data_results() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_data_results"]], "fetch_trials_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_trials_data"]], "fetch_trials_data_results() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_trials_data_results"]], "fit_time (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.fit_time"]], "from_arm() (ax.core.observation.observationfeatures static method)": [[3, "ax.core.observation.ObservationFeatures.from_arm"]], "gen_for_multiple_trials_with_multiple_models() (ax.core.generation_strategy_interface.generationstrategyinterface method)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.gen_for_multiple_trials_with_multiple_models"]], "gen_metadata (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.gen_metadata"]], "gen_time (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.gen_time"]], "generator_run (ax.core.batch_trial.generatorrunstruct attribute)": [[3, "ax.core.batch_trial.GeneratorRunStruct.generator_run"]], "generator_run (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.generator_run"]], "generator_run_structs (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.generator_run_structs"]], "generator_run_type (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.generator_run_type"]], "generator_runs (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.generator_runs"]], "generator_runs (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.generator_runs"]], "generator_runs (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.generator_runs"]], "get_feature_cols() (in module ax.core.observation)": [[3, "ax.core.observation.get_feature_cols"]], "get_metric_mean() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.get_metric_mean"]], "get_missing_metrics() (in module ax.core.utils)": [[3, "ax.core.utils.get_missing_metrics"]], "get_missing_metrics_by_name() (in module ax.core.utils)": [[3, "ax.core.utils.get_missing_metrics_by_name"]], "get_model_times() (in module ax.core.utils)": [[3, "ax.core.utils.get_model_times"]], "get_model_trace_of_times() (in module ax.core.utils)": [[3, "ax.core.utils.get_model_trace_of_times"]], "get_pending_observation_features() (in module ax.core.utils)": [[3, "ax.core.utils.get_pending_observation_features"]], "get_pending_observation_features_based_on_trial_status() (in module ax.core.utils)": [[3, "ax.core.utils.get_pending_observation_features_based_on_trial_status"]], "get_trials_by_indices() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.get_trials_by_indices"]], "has_name (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.has_name"]], "has_name (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.has_name"]], "immutable_once_run() (in module ax.core.base_trial)": [[3, "ax.core.base_trial.immutable_once_run"]], "immutable_search_space_and_opt_config (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.immutable_search_space_and_opt_config"]], "in_design_arms (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.in_design_arms"]], "index (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.index"]], "index (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.index"]], "index (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.index"]], "is_abandoned (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.is_abandoned"]], "is_abandoned (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_abandoned"]], "is_candidate (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_candidate"]], "is_completed (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_completed"]], "is_deployed (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_deployed"]], "is_early_stopped (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_early_stopped"]], "is_environmental() (ax.core.parameter_distribution.parameterdistribution method)": [[3, "ax.core.parameter_distribution.ParameterDistribution.is_environmental"]], "is_factorial (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.is_factorial"]], "is_failed (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_failed"]], "is_fidelity (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.is_fidelity"]], "is_hierarchical (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.is_hierarchical"]], "is_moo_problem (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.is_moo_problem"]], "is_moo_problem (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.is_moo_problem"]], "is_numeric (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.is_numeric"]], "is_numeric (ax.core.parameter.parametertype property)": [[3, "ax.core.parameter.ParameterType.is_numeric"]], "is_ordered (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.is_ordered"]], "is_running (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_running"]], "is_task (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.is_task"]], "is_terminal (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_terminal"]], "is_test (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.is_test"]], "is_upper_bound (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.is_upper_bound"]], "is_valid_type() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.is_valid_type"]], "is_valid_type() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.is_valid_type"]], "lifecycle_stage (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.lifecycle_stage"]], "log_scale (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.log_scale"]], "logit_scale (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.logit_scale"]], "lookup_data() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.lookup_data"]], "lookup_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.lookup_data"]], "lookup_data_for_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.lookup_data_for_trial"]], "lookup_data_for_ts() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.lookup_data_for_ts"]], "lower (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.lower"]], "lower_parameter (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.lower_parameter"]], "mark_abandoned() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_abandoned"]], "mark_arm_abandoned() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_arm_abandoned"]], "mark_arm_abandoned() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.mark_arm_abandoned"]], "mark_as() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_as"]], "mark_completed() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_completed"]], "mark_early_stopped() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_early_stopped"]], "mark_failed() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_failed"]], "mark_running() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_running"]], "mark_staged() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_staged"]], "md5hash() (ax.core.arm.arm static method)": [[3, "ax.core.arm.Arm.md5hash"]], "means (ax.core.observation.observationdata attribute)": [[3, "ax.core.observation.ObservationData.means"]], "means_dict (ax.core.observation.observationdata property)": [[3, "ax.core.observation.ObservationData.means_dict"]], "merge_model_predict() (in module ax.core.types)": [[3, "ax.core.types.merge_model_predict"]], "metric_config_summary_df (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.metric_config_summary_df"]], "metric_names (ax.core.observation.observationdata attribute)": [[3, "ax.core.observation.ObservationData.metric_names"]], "metric_to_trial_type (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.metric_to_trial_type"]], "metrics (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.metrics"]], "metrics (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.metrics"]], "metrics (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.metrics"]], "model_predictions (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.model_predictions"]], "model_predictions_by_arm (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.model_predictions_by_arm"]], "module": [[3, "module-ax.core"], [3, "module-ax.core.arm"], [3, "module-ax.core.auxiliary"], [3, "module-ax.core.base_trial"], [3, "module-ax.core.batch_trial"], [3, "module-ax.core.experiment"], [3, "module-ax.core.formatting_utils"], [3, "module-ax.core.generation_strategy_interface"], [3, "module-ax.core.generator_run"], [3, "module-ax.core.multi_type_experiment"], [3, "module-ax.core.observation"], [3, "module-ax.core.optimization_config"], [3, "module-ax.core.parameter"], [3, "module-ax.core.parameter_constraint"], [3, "module-ax.core.parameter_distribution"], [3, "module-ax.core.risk_measures"], [3, "module-ax.core.runner"], [3, "module-ax.core.trial"], [3, "module-ax.core.types"], [3, "module-ax.core.utils"], [5, "module-ax.exceptions"], [5, "module-ax.exceptions.constants"], [5, "module-ax.exceptions.core"], [5, "module-ax.exceptions.data_provider"], [5, "module-ax.exceptions.generation_strategy"], [5, "module-ax.exceptions.model"], [5, "module-ax.exceptions.storage"], [9, "module-ax.modelbridge"], [9, "module-ax.modelbridge.base"], [9, "module-ax.modelbridge.discrete"], [9, "module-ax.modelbridge.factory"], [9, "module-ax.modelbridge.map_torch"], [9, "module-ax.modelbridge.modelbridge_utils"], [9, "module-ax.modelbridge.pairwise"], [9, "module-ax.modelbridge.prediction_utils"], [9, "module-ax.modelbridge.registry"], [9, "module-ax.modelbridge.torch"], [9, "module-ax.modelbridge.transforms.base"], [9, "module-ax.modelbridge.transforms.cap_parameter"], [9, "module-ax.modelbridge.transforms.cast"], [9, "module-ax.modelbridge.transforms.centered_unit_x"], [9, "module-ax.modelbridge.transforms.choice_encode"], [9, "module-ax.modelbridge.transforms.convert_metric_names"], [9, "module-ax.modelbridge.transforms.deprecated_transform_mixin"], [9, "module-ax.modelbridge.transforms.derelativize"], [9, "module-ax.modelbridge.transforms.int_range_to_choice"], [9, "module-ax.modelbridge.transforms.int_to_float"], [9, "module-ax.modelbridge.transforms.inverse_gaussian_cdf_y"], [9, "module-ax.modelbridge.transforms.ivw"], [9, "module-ax.modelbridge.transforms.log"], [9, "module-ax.modelbridge.transforms.log_y"], [9, "module-ax.modelbridge.transforms.logit"], [9, "module-ax.modelbridge.transforms.map_unit_x"], [9, "module-ax.modelbridge.transforms.merge_repeated_measurements"], [9, "module-ax.modelbridge.transforms.metrics_as_task"], [9, "module-ax.modelbridge.transforms.one_hot"], [9, "module-ax.modelbridge.transforms.percentile_y"], [9, "module-ax.modelbridge.transforms.relativize"], [9, "module-ax.modelbridge.transforms.remove_fixed"], [9, "module-ax.modelbridge.transforms.rounding"], [9, "module-ax.modelbridge.transforms.search_space_to_choice"], [9, "module-ax.modelbridge.transforms.standardize_y"], [9, "module-ax.modelbridge.transforms.stratified_standardize_y"], [9, "module-ax.modelbridge.transforms.task_encode"], [9, "module-ax.modelbridge.transforms.time_as_feature"], [9, "module-ax.modelbridge.transforms.transform_to_new_sq"], [9, "module-ax.modelbridge.transforms.trial_as_task"], [9, "module-ax.modelbridge.transforms.unit_x"], [9, "module-ax.modelbridge.transforms.utils"], [9, "module-ax.modelbridge.transforms.winsorize"], [10, "module-ax.models"], [10, "module-ax.models.base"], [10, "module-ax.models.discrete.eb_thompson"], [10, "module-ax.models.discrete.full_factorial"], [10, "module-ax.models.discrete.thompson"], [10, "module-ax.models.discrete_base"], [10, "module-ax.models.model_utils"], [10, "module-ax.models.random.base"], [10, "module-ax.models.random.sobol"], [10, "module-ax.models.random.uniform"], [10, "module-ax.models.torch.botorch"], [10, "module-ax.models.torch.botorch_defaults"], [10, "module-ax.models.torch.botorch_kg"], [10, "module-ax.models.torch.botorch_modular.acquisition"], [10, "module-ax.models.torch.botorch_modular.input_constructors.covar_modules"], [10, "module-ax.models.torch.botorch_modular.input_constructors.input_transforms"], [10, "module-ax.models.torch.botorch_modular.input_constructors.outcome_transform"], [10, "module-ax.models.torch.botorch_modular.kernels"], [10, "module-ax.models.torch.botorch_modular.model"], [10, "module-ax.models.torch.botorch_modular.optimizer_argparse"], [10, "module-ax.models.torch.botorch_modular.sebo"], [10, "module-ax.models.torch.botorch_modular.surrogate"], [10, "module-ax.models.torch.botorch_modular.utils"], [10, "module-ax.models.torch.botorch_moo"], [10, "module-ax.models.torch.botorch_moo_defaults"], [10, "module-ax.models.torch.cbo_lcea"], [10, "module-ax.models.torch.cbo_lcem"], [10, "module-ax.models.torch.cbo_sac"], [10, "module-ax.models.torch.utils"], [10, "module-ax.models.torch_base"], [10, "module-ax.models.types"], [10, "module-ax.models.winsorization_config"], [16, "module-ax.utils"], [16, "module-ax.utils.common.base"], [16, "module-ax.utils.common.constants"], [16, "module-ax.utils.common.decorator"], [16, "module-ax.utils.common.deprecation"], [16, "module-ax.utils.common.docutils"], [16, "module-ax.utils.common.equality"], [16, "module-ax.utils.common.executils"], [16, "module-ax.utils.common.kwargs"], [16, "module-ax.utils.common.logger"], [16, "module-ax.utils.common.mock"], [16, "module-ax.utils.common.random"], [16, "module-ax.utils.common.result"], [16, "module-ax.utils.common.serialization"], [16, "module-ax.utils.common.testutils"], [16, "module-ax.utils.common.timeutils"], [16, "module-ax.utils.common.typeutils"], [16, "module-ax.utils.common.typeutils_nonnative"], [16, "module-ax.utils.common.typeutils_torch"], [16, "module-ax.utils.flake8_plugins.docstring_checker"], [16, "module-ax.utils.measurement.synthetic_functions"], [16, "module-ax.utils.sensitivity.derivative_gp"], [16, "module-ax.utils.sensitivity.derivative_measures"], [16, "module-ax.utils.sensitivity.sobol_measures"], [16, "module-ax.utils.stats.statstools"], [16, "module-ax.utils.testing.backend_simulator"], [16, "module-ax.utils.testing.mock"], [16, "module-ax.utils.testing.test_init_files"], [16, "module-ax.utils.testing.torch_stubs"], [16, "module-ax.utils.testing.utils"], [16, "module-ax.utils.tutorials.cnn_utils"]], "name (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.name"]], "name (ax.core.batch_trial.abandonedarm attribute)": [[3, "ax.core.batch_trial.AbandonedArm.name"]], "name (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.name"]], "name (ax.core.generation_strategy_interface.generationstrategyinterface property)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.name"]], "name (ax.core.multi_type_experiment.multitypeexperiment attribute)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.name"]], "name (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.name"]], "name_or_short_signature (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.name_or_short_signature"]], "new_batch_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.new_batch_trial"]], "new_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.new_trial"]], "normalized_arm_weights() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.normalized_arm_weights"]], "num_abandoned_arms (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.num_abandoned_arms"]], "num_trials (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.num_trials"]], "objective (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.objective"]], "objective (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.objective"]], "objective (ax.core.utils.missingmetrics attribute)": [[3, "ax.core.utils.MissingMetrics.objective"]], "objective_mean (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.objective_mean"]], "objective_thresholds (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.objective_thresholds"]], "objective_thresholds_dict (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.objective_thresholds_dict"]], "observations_from_data() (in module ax.core.observation)": [[3, "ax.core.observation.observations_from_data"]], "observations_from_map_data() (in module ax.core.observation)": [[3, "ax.core.observation.observations_from_map_data"]], "op (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.op"]], "optimization_config (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.optimization_config"]], "optimization_config (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.optimization_config"]], "outcome_constraints (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.outcome_constraints"]], "outcome_constraints (ax.core.utils.missingmetrics attribute)": [[3, "ax.core.utils.MissingMetrics.outcome_constraints"]], "param_df (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.param_df"]], "parameter_type (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.parameter_type"]], "parameters (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.parameters"]], "parameters (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.parameters"]], "parameters (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.parameters"]], "parameters (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.parameters"]], "parameters (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.parameters"]], "poll_available_capacity() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.poll_available_capacity"]], "poll_exception() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.poll_exception"]], "poll_trial_status() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.poll_trial_status"]], "python_type (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.python_type"]], "random_split (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.random_split"]], "raw_data_to_evaluation() (in module ax.core.formatting_utils)": [[3, "ax.core.formatting_utils.raw_data_to_evaluation"]], "reason (ax.core.batch_trial.abandonedarm attribute)": [[3, "ax.core.batch_trial.AbandonedArm.reason"]], "recombine_observations() (in module ax.core.observation)": [[3, "ax.core.observation.recombine_observations"]], "remove_tracking_metric() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.remove_tracking_metric"]], "remove_tracking_metric() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.remove_tracking_metric"]], "reset_runners() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.reset_runners"]], "reset_runners() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.reset_runners"]], "run() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.run"]], "run() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.run"]], "run() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.run"]], "run_metadata (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.run_metadata"]], "run_metadata_report_keys (ax.core.runner.runner property)": [[3, "ax.core.runner.Runner.run_metadata_report_keys"]], "run_multiple() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.run_multiple"]], "runner (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.runner"]], "runner_for_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.runner_for_trial"]], "runner_for_trial() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.runner_for_trial"]], "running_trial_indices (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.running_trial_indices"]], "search_space (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.search_space"]], "search_space (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.search_space"]], "separate_observations() (in module ax.core.observation)": [[3, "ax.core.observation.separate_observations"]], "set_digits() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.set_digits"]], "set_log_scale() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.set_log_scale"]], "set_logit_scale() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.set_logit_scale"]], "set_status_quo_and_optimize_power() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.set_status_quo_and_optimize_power"]], "set_status_quo_with_weight() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.set_status_quo_with_weight"]], "set_value() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.set_value"]], "set_values() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.set_values"]], "signature (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.signature"]], "sort_values (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.sort_values"]], "staging_required (ax.core.runner.runner property)": [[3, "ax.core.runner.Runner.staging_required"]], "start_time (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.start_time"]], "status (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.status"]], "status_quo (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.status_quo"]], "status_quo (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.status_quo"]], "stop() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.stop"]], "stop() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.stop"]], "stop_metadata (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.stop_metadata"]], "sum_trial_sizes (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.sum_trial_sizes"]], "summary_dict (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.summary_dict"]], "supports_trial_type() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.supports_trial_type"]], "supports_trial_type() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.supports_trial_type"]], "target_value (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.target_value"]], "time (ax.core.batch_trial.abandonedarm attribute)": [[3, "ax.core.batch_trial.AbandonedArm.time"]], "time_completed (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_completed"]], "time_created (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_created"]], "time_created (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.time_created"]], "time_created (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.time_created"]], "time_run_started (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_run_started"]], "time_staged (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_staged"]], "tracking_metrics (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.tracking_metrics"]], "tracking_metrics (ax.core.utils.missingmetrics attribute)": [[3, "ax.core.utils.MissingMetrics.tracking_metrics"]], "trial_index (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.trial_index"]], "trial_indices_by_status (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trial_indices_by_status"]], "trial_type (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.trial_type"]], "trials (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trials"]], "trials_by_status (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trials_by_status"]], "trials_expecting_data (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trials_expecting_data"]], "ttl_seconds (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.ttl_seconds"]], "unset_status_quo() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.unset_status_quo"]], "update_features() (ax.core.observation.observationfeatures method)": [[3, "ax.core.observation.ObservationFeatures.update_features"]], "update_range() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.update_range"]], "update_run_metadata() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.update_run_metadata"]], "update_runner() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.update_runner"]], "update_stop_metadata() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.update_stop_metadata"]], "update_tracking_metric() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.update_tracking_metric"]], "update_tracking_metric() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.update_tracking_metric"]], "update_trial_data() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.update_trial_data"]], "upper (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.upper"]], "upper_parameter (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.upper_parameter"]], "validate() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.validate"]], "validate() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.validate"]], "validate() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.validate"]], "validate() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.validate"]], "validate_constraint_parameters() (in module ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.validate_constraint_parameters"]], "validate_data_for_trial() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.validate_data_for_trial"]], "validate_evaluation_outcome() (in module ax.core.types)": [[3, "ax.core.types.validate_evaluation_outcome"]], "validate_fidelity_trial_evaluation() (in module ax.core.types)": [[3, "ax.core.types.validate_fidelity_trial_evaluation"]], "validate_floatlike() (in module ax.core.types)": [[3, "ax.core.types.validate_floatlike"]], "validate_map_dict() (in module ax.core.types)": [[3, "ax.core.types.validate_map_dict"]], "validate_map_trial_evaluation() (in module ax.core.types)": [[3, "ax.core.types.validate_map_trial_evaluation"]], "validate_param_value() (in module ax.core.types)": [[3, "ax.core.types.validate_param_value"]], "validate_parameterization() (in module ax.core.types)": [[3, "ax.core.types.validate_parameterization"]], "validate_single_metric_data() (in module ax.core.types)": [[3, "ax.core.types.validate_single_metric_data"]], "validate_trial_evaluation() (in module ax.core.types)": [[3, "ax.core.types.validate_trial_evaluation"]], "validate_trials() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.validate_trials"]], "value (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.value"]], "values (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.values"]], "warm_start_from_old_experiment() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.warm_start_from_old_experiment"]], "weight (ax.core.batch_trial.generatorrunstruct attribute)": [[3, "ax.core.batch_trial.GeneratorRunStruct.weight"]], "weight (ax.core.generator_run.armweight attribute)": [[3, "ax.core.generator_run.ArmWeight.weight"]], "weights (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.weights"]], "weights (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.weights"]], "axerror": [[5, "ax.exceptions.core.AxError"]], "axgenerationexception": [[5, "ax.exceptions.generation_strategy.AxGenerationException"]], "axparameterwarning": [[5, "ax.exceptions.core.AxParameterWarning"]], "axstoragewarning": [[5, "ax.exceptions.core.AxStorageWarning"]], "axwarning": [[5, "ax.exceptions.core.AxWarning"]], "cvnotsupportederror": [[5, "ax.exceptions.model.CVNotSupportedError"]], "dataprovidererror": [[5, "ax.exceptions.data_provider.DataProviderError"]], "datarequirederror": [[5, "ax.exceptions.core.DataRequiredError"]], "experimentnotfounderror": [[5, "ax.exceptions.core.ExperimentNotFoundError"]], "experimentnotreadyerror": [[5, "ax.exceptions.core.ExperimentNotReadyError"]], "generationstrategycompleted": [[5, "ax.exceptions.generation_strategy.GenerationStrategyCompleted"]], "generationstrategymisconfiguredexception": [[5, "ax.exceptions.generation_strategy.GenerationStrategyMisconfiguredException"]], "generationstrategyrepeatedpoints": [[5, "ax.exceptions.generation_strategy.GenerationStrategyRepeatedPoints"]], "immutabilityerror": [[5, "ax.exceptions.storage.ImmutabilityError"]], "incompatibledependencyversion": [[5, "ax.exceptions.core.IncompatibleDependencyVersion"]], "incorrectdbconfigurationerror": [[5, "ax.exceptions.storage.IncorrectDBConfigurationError"]], "jsondecodeerror": [[5, "ax.exceptions.storage.JSONDecodeError"]], "jsonencodeerror": [[5, "ax.exceptions.storage.JSONEncodeError"]], "maxparallelismreachedexception": [[5, "ax.exceptions.generation_strategy.MaxParallelismReachedException"]], "metricdatanotreadyerror": [[5, "ax.exceptions.core.MetricDataNotReadyError"]], "misconfiguredexperiment": [[5, "ax.exceptions.core.MisconfiguredExperiment"]], "missingdataerror": [[5, "ax.exceptions.data_provider.MissingDataError"]], "modelerror": [[5, "ax.exceptions.model.ModelError"]], "nodataerror": [[5, "ax.exceptions.core.NoDataError"]], "objectnotfounderror": [[5, "ax.exceptions.core.ObjectNotFoundError"]], "optimizationcomplete": [[5, "ax.exceptions.core.OptimizationComplete"]], "optimizationconfigrequired": [[5, "ax.exceptions.generation_strategy.OptimizationConfigRequired"]], "optimizationshouldstop": [[5, "ax.exceptions.core.OptimizationShouldStop"]], "sqadecodeerror": [[5, "ax.exceptions.storage.SQADecodeError"]], "sqaencodeerror": [[5, "ax.exceptions.storage.SQAEncodeError"]], "searchspaceexhausted": [[5, "ax.exceptions.core.SearchSpaceExhausted"]], "unsupportederror": [[5, "ax.exceptions.core.UnsupportedError"]], "unsupportedploterror": [[5, "ax.exceptions.core.UnsupportedPlotError"]], "userinputerror": [[5, "ax.exceptions.core.UserInputError"]], "ax.exceptions": [[5, "module-ax.exceptions"]], "ax.exceptions.constants": [[5, "module-ax.exceptions.constants"]], "ax.exceptions.core": [[5, "module-ax.exceptions.core"]], "ax.exceptions.data_provider": [[5, "module-ax.exceptions.data_provider"]], "ax.exceptions.generation_strategy": [[5, "module-ax.exceptions.generation_strategy"]], "ax.exceptions.model": [[5, "module-ax.exceptions.model"]], "ax.exceptions.storage": [[5, "module-ax.exceptions.storage"]], "botorch_modular (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.BOTORCH_MODULAR"]], "bo_mixed (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.BO_MIXED"]], "basegenargs (class in ax.modelbridge.base)": [[9, "ax.modelbridge.base.BaseGenArgs"]], "baserelativize (class in ax.modelbridge.transforms.relativize)": [[9, "ax.modelbridge.transforms.relativize.BaseRelativize"]], "context_sacbo (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.CONTEXT_SACBO"]], "capparameter (class in ax.modelbridge.transforms.cap_parameter)": [[9, "ax.modelbridge.transforms.cap_parameter.CapParameter"]], "cast (class in ax.modelbridge.transforms.cast)": [[9, "ax.modelbridge.transforms.cast.Cast"]], "centeredunitx (class in ax.modelbridge.transforms.centered_unit_x)": [[9, "ax.modelbridge.transforms.centered_unit_x.CenteredUnitX"]], "choiceencode (class in ax.modelbridge.transforms.choice_encode)": [[9, "ax.modelbridge.transforms.choice_encode.ChoiceEncode"]], "choicetonumericchoice (class in ax.modelbridge.transforms.choice_encode)": [[9, "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice"]], "closestlookupdict (class in ax.modelbridge.transforms.utils)": [[9, "ax.modelbridge.transforms.utils.ClosestLookupDict"]], "convertmetricnames (class in ax.modelbridge.transforms.convert_metric_names)": [[9, "ax.modelbridge.transforms.convert_metric_names.ConvertMetricNames"]], "default_ehvi_batch_limit (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.DEFAULT_EHVI_BATCH_LIMIT"]], "derelativize (class in ax.modelbridge.transforms.derelativize)": [[9, "ax.modelbridge.transforms.derelativize.Derelativize"]], "discretemodelbridge (class in ax.modelbridge.discrete)": [[9, "ax.modelbridge.discrete.DiscreteModelBridge"]], "empirical_bayes_thompson (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.EMPIRICAL_BAYES_THOMPSON"]], "factorial (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.FACTORIAL"]], "fullybayesian (ax.modelbridge.registry.models property)": [[9, "ax.modelbridge.registry.Models.FULLYBAYESIAN"]], "fullybayesianmoo (ax.modelbridge.registry.models property)": [[9, "ax.modelbridge.registry.Models.FULLYBAYESIANMOO"]], "fullybayesianmoo_mtgp (ax.modelbridge.registry.models property)": [[9, "ax.modelbridge.registry.Models.FULLYBAYESIANMOO_MTGP"]], "fullybayesian_mtgp (ax.modelbridge.registry.models property)": [[9, "ax.modelbridge.registry.Models.FULLYBAYESIAN_MTGP"]], "gpei (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.GPEI"]], "genresults (class in ax.modelbridge.base)": [[9, "ax.modelbridge.base.GenResults"]], "ivw (class in ax.modelbridge.transforms.ivw)": [[9, "ax.modelbridge.transforms.ivw.IVW"]], "intrangetochoice (class in ax.modelbridge.transforms.int_range_to_choice)": [[9, "ax.modelbridge.transforms.int_range_to_choice.IntRangeToChoice"]], "inttofloat (class in ax.modelbridge.transforms.int_to_float)": [[9, "ax.modelbridge.transforms.int_to_float.IntToFloat"]], "inversegaussiancdfy (class in ax.modelbridge.transforms.inverse_gaussian_cdf_y)": [[9, "ax.modelbridge.transforms.inverse_gaussian_cdf_y.InverseGaussianCdfY"]], "legacy_botorch (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.LEGACY_BOTORCH"]], "log (class in ax.modelbridge.transforms.log)": [[9, "ax.modelbridge.transforms.log.Log"]], "logy (class in ax.modelbridge.transforms.log_y)": [[9, "ax.modelbridge.transforms.log_y.LogY"]], "logit (class in ax.modelbridge.transforms.logit)": [[9, "ax.modelbridge.transforms.logit.Logit"]], "moo (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.MOO"]], "maptorchmodelbridge (class in ax.modelbridge.map_torch)": [[9, "ax.modelbridge.map_torch.MapTorchModelBridge"]], "mapunitx (class in ax.modelbridge.transforms.map_unit_x)": [[9, "ax.modelbridge.transforms.map_unit_x.MapUnitX"]], "mergerepeatedmeasurements (class in ax.modelbridge.transforms.merge_repeated_measurements)": [[9, "ax.modelbridge.transforms.merge_repeated_measurements.MergeRepeatedMeasurements"]], "metricsastask (class in ax.modelbridge.transforms.metrics_as_task)": [[9, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask"]], "modelbridge (class in ax.modelbridge.base)": [[9, "ax.modelbridge.base.ModelBridge"]], "modelregistrybase (class in ax.modelbridge.registry)": [[9, "ax.modelbridge.registry.ModelRegistryBase"]], "modelsetup (class in ax.modelbridge.registry)": [[9, "ax.modelbridge.registry.ModelSetup"]], "models (class in ax.modelbridge.registry)": [[9, "ax.modelbridge.registry.Models"]], "onehot (class in ax.modelbridge.transforms.one_hot)": [[9, "ax.modelbridge.transforms.one_hot.OneHot"]], "onehotencoder (class in ax.modelbridge.transforms.one_hot)": [[9, "ax.modelbridge.transforms.one_hot.OneHotEncoder"]], "orderedchoiceencode (class in ax.modelbridge.transforms.choice_encode)": [[9, "ax.modelbridge.transforms.choice_encode.OrderedChoiceEncode"]], "orderedchoicetointegerrange (class in ax.modelbridge.transforms.choice_encode)": [[9, "ax.modelbridge.transforms.choice_encode.OrderedChoiceToIntegerRange"]], "pairwisemodelbridge (class in ax.modelbridge.pairwise)": [[9, "ax.modelbridge.pairwise.PairwiseModelBridge"]], "percentiley (class in ax.modelbridge.transforms.percentile_y)": [[9, "ax.modelbridge.transforms.percentile_y.PercentileY"]], "relativize (class in ax.modelbridge.transforms.relativize)": [[9, "ax.modelbridge.transforms.relativize.Relativize"]], "relativizewithconstantcontrol (class in ax.modelbridge.transforms.relativize)": [[9, "ax.modelbridge.transforms.relativize.RelativizeWithConstantControl"]], "removefixed (class in ax.modelbridge.transforms.remove_fixed)": [[9, "ax.modelbridge.transforms.remove_fixed.RemoveFixed"]], "saasbo (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.SAASBO"]], "saas_mtgp (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.SAAS_MTGP"]], "sobol (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.SOBOL"]], "st_mtgp (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.ST_MTGP"]], "st_mtgp_legacy (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.ST_MTGP_LEGACY"]], "st_mtgp_nehvi (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.ST_MTGP_NEHVI"]], "searchspacetochoice (class in ax.modelbridge.transforms.search_space_to_choice)": [[9, "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice"]], "standardizey (class in ax.modelbridge.transforms.standardize_y)": [[9, "ax.modelbridge.transforms.standardize_y.StandardizeY"]], "stratifiedstandardizey (class in ax.modelbridge.transforms.stratified_standardize_y)": [[9, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY"]], "thompson (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.THOMPSON"]], "taskchoicetointtaskchoice (class in ax.modelbridge.transforms.task_encode)": [[9, "ax.modelbridge.transforms.task_encode.TaskChoiceToIntTaskChoice"]], "taskencode (class in ax.modelbridge.transforms.task_encode)": [[9, "ax.modelbridge.transforms.task_encode.TaskEncode"]], "timeasfeature (class in ax.modelbridge.transforms.time_as_feature)": [[9, "ax.modelbridge.transforms.time_as_feature.TimeAsFeature"]], "torchmodelbridge (class in ax.modelbridge.torch)": [[9, "ax.modelbridge.torch.TorchModelBridge"]], "transform (class in ax.modelbridge.transforms.base)": [[9, "ax.modelbridge.transforms.base.Transform"]], "transformtonewsq (class in ax.modelbridge.transforms.transform_to_new_sq)": [[9, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ"]], "trialastask (class in ax.modelbridge.transforms.trial_as_task)": [[9, "ax.modelbridge.transforms.trial_as_task.TrialAsTask"]], "uniform (ax.modelbridge.registry.models attribute)": [[9, "ax.modelbridge.registry.Models.UNIFORM"]], "unitx (class in ax.modelbridge.transforms.unit_x)": [[9, "ax.modelbridge.transforms.unit_x.UnitX"]], "winsorize (class in ax.modelbridge.transforms.winsorize)": [[9, "ax.modelbridge.transforms.winsorize.Winsorize"]], "array_to_observation_data() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.array_to_observation_data"]], "ax.modelbridge": [[9, "module-ax.modelbridge"]], "ax.modelbridge.base": [[9, "module-ax.modelbridge.base"]], "ax.modelbridge.discrete": [[9, "module-ax.modelbridge.discrete"]], "ax.modelbridge.factory": [[9, "module-ax.modelbridge.factory"]], "ax.modelbridge.map_torch": [[9, "module-ax.modelbridge.map_torch"]], "ax.modelbridge.modelbridge_utils": [[9, "module-ax.modelbridge.modelbridge_utils"]], "ax.modelbridge.pairwise": [[9, "module-ax.modelbridge.pairwise"]], "ax.modelbridge.prediction_utils": [[9, "module-ax.modelbridge.prediction_utils"]], "ax.modelbridge.registry": [[9, "module-ax.modelbridge.registry"]], "ax.modelbridge.torch": [[9, "module-ax.modelbridge.torch"]], "ax.modelbridge.transforms.base": [[9, "module-ax.modelbridge.transforms.base"]], "ax.modelbridge.transforms.cap_parameter": [[9, "module-ax.modelbridge.transforms.cap_parameter"]], "ax.modelbridge.transforms.cast": [[9, "module-ax.modelbridge.transforms.cast"]], "ax.modelbridge.transforms.centered_unit_x": [[9, "module-ax.modelbridge.transforms.centered_unit_x"]], "ax.modelbridge.transforms.choice_encode": [[9, "module-ax.modelbridge.transforms.choice_encode"]], "ax.modelbridge.transforms.convert_metric_names": [[9, "module-ax.modelbridge.transforms.convert_metric_names"]], "ax.modelbridge.transforms.deprecated_transform_mixin": [[9, "module-ax.modelbridge.transforms.deprecated_transform_mixin"]], "ax.modelbridge.transforms.derelativize": [[9, "module-ax.modelbridge.transforms.derelativize"]], "ax.modelbridge.transforms.int_range_to_choice": [[9, "module-ax.modelbridge.transforms.int_range_to_choice"]], "ax.modelbridge.transforms.int_to_float": [[9, "module-ax.modelbridge.transforms.int_to_float"]], "ax.modelbridge.transforms.inverse_gaussian_cdf_y": [[9, "module-ax.modelbridge.transforms.inverse_gaussian_cdf_y"]], "ax.modelbridge.transforms.ivw": [[9, "module-ax.modelbridge.transforms.ivw"]], "ax.modelbridge.transforms.log": [[9, "module-ax.modelbridge.transforms.log"]], "ax.modelbridge.transforms.log_y": [[9, "module-ax.modelbridge.transforms.log_y"]], "ax.modelbridge.transforms.logit": [[9, "module-ax.modelbridge.transforms.logit"]], "ax.modelbridge.transforms.map_unit_x": [[9, "module-ax.modelbridge.transforms.map_unit_x"]], "ax.modelbridge.transforms.merge_repeated_measurements": [[9, "module-ax.modelbridge.transforms.merge_repeated_measurements"]], "ax.modelbridge.transforms.metrics_as_task": [[9, "module-ax.modelbridge.transforms.metrics_as_task"]], "ax.modelbridge.transforms.one_hot": [[9, "module-ax.modelbridge.transforms.one_hot"]], "ax.modelbridge.transforms.percentile_y": [[9, "module-ax.modelbridge.transforms.percentile_y"]], "ax.modelbridge.transforms.relativize": [[9, "module-ax.modelbridge.transforms.relativize"]], "ax.modelbridge.transforms.remove_fixed": [[9, "module-ax.modelbridge.transforms.remove_fixed"]], "ax.modelbridge.transforms.rounding": [[9, "module-ax.modelbridge.transforms.rounding"]], "ax.modelbridge.transforms.search_space_to_choice": [[9, "module-ax.modelbridge.transforms.search_space_to_choice"]], "ax.modelbridge.transforms.standardize_y": [[9, "module-ax.modelbridge.transforms.standardize_y"]], "ax.modelbridge.transforms.stratified_standardize_y": [[9, "module-ax.modelbridge.transforms.stratified_standardize_y"]], "ax.modelbridge.transforms.task_encode": [[9, "module-ax.modelbridge.transforms.task_encode"]], "ax.modelbridge.transforms.time_as_feature": [[9, "module-ax.modelbridge.transforms.time_as_feature"]], "ax.modelbridge.transforms.transform_to_new_sq": [[9, "module-ax.modelbridge.transforms.transform_to_new_sq"]], "ax.modelbridge.transforms.trial_as_task": [[9, "module-ax.modelbridge.transforms.trial_as_task"]], "ax.modelbridge.transforms.unit_x": [[9, "module-ax.modelbridge.transforms.unit_x"]], "ax.modelbridge.transforms.utils": [[9, "module-ax.modelbridge.transforms.utils"]], "ax.modelbridge.transforms.winsorize": [[9, "module-ax.modelbridge.transforms.winsorize"]], "best_observation_features (ax.modelbridge.base.genresults attribute)": [[9, "ax.modelbridge.base.GenResults.best_observation_features"]], "bridge_class (ax.modelbridge.registry.modelsetup attribute)": [[9, "ax.modelbridge.registry.ModelSetup.bridge_class"]], "check_has_multi_objective_and_data() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.check_has_multi_objective_and_data"]], "clamp_observation_features() (in module ax.modelbridge.base)": [[9, "ax.modelbridge.base.clamp_observation_features"]], "compute_standardization_parameters() (in module ax.modelbridge.transforms.standardize_y)": [[9, "ax.modelbridge.transforms.standardize_y.compute_standardization_parameters"]], "config (ax.modelbridge.transforms.base.transform attribute)": [[9, "ax.modelbridge.transforms.base.Transform.config"]], "construct_new_search_space() (in module ax.modelbridge.transforms.utils)": [[9, "ax.modelbridge.transforms.utils.construct_new_search_space"]], "contains_constrained_integer() (in module ax.modelbridge.transforms.rounding)": [[9, "ax.modelbridge.transforms.rounding.contains_constrained_integer"]], "control_as_constant (ax.modelbridge.transforms.relativize.baserelativize property)": [[9, "ax.modelbridge.transforms.relativize.BaseRelativize.control_as_constant"]], "control_as_constant (ax.modelbridge.transforms.relativize.relativize property)": [[9, "ax.modelbridge.transforms.relativize.Relativize.control_as_constant"]], "control_as_constant (ax.modelbridge.transforms.relativize.relativizewithconstantcontrol property)": [[9, "ax.modelbridge.transforms.relativize.RelativizeWithConstantControl.control_as_constant"]], "control_as_constant (ax.modelbridge.transforms.transform_to_new_sq.transformtonewsq property)": [[9, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ.control_as_constant"]], "convert_mt_observations() (in module ax.modelbridge.transforms.convert_metric_names)": [[9, "ax.modelbridge.transforms.convert_metric_names.convert_mt_observations"]], "cross_validate() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.cross_validate"]], "cutoffs (ax.modelbridge.transforms.winsorize.winsorize attribute)": [[9, "ax.modelbridge.transforms.winsorize.Winsorize.cutoffs"]], "default_model_kwargs (ax.modelbridge.registry.modelsetup attribute)": [[9, "ax.modelbridge.registry.ModelSetup.default_model_kwargs"]], "derelativize_optimization_config_with_raw_status_quo() (in module ax.modelbridge.transforms.utils)": [[9, "ax.modelbridge.transforms.utils.derelativize_optimization_config_with_raw_status_quo"]], "evaluate_acquisition_function() (ax.modelbridge.torch.torchmodelbridge method)": [[9, "ax.modelbridge.torch.TorchModelBridge.evaluate_acquisition_function"]], "extract_objective_thresholds() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_objective_thresholds"]], "extract_objective_weights() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_objective_weights"]], "extract_outcome_constraints() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_outcome_constraints"]], "extract_parameter_constraints() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_parameter_constraints"]], "extract_risk_measure() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_risk_measure"]], "extract_robust_digest() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_robust_digest"]], "extract_search_space_digest() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.extract_search_space_digest"]], "feasible_hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.feasible_hypervolume"]], "feature_importances() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.feature_importances"]], "feature_importances() (ax.modelbridge.torch.torchmodelbridge method)": [[9, "ax.modelbridge.torch.TorchModelBridge.feature_importances"]], "fixed_features (ax.modelbridge.base.basegenargs attribute)": [[9, "ax.modelbridge.base.BaseGenArgs.fixed_features"]], "gen() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.gen"]], "gen_arms() (in module ax.modelbridge.base)": [[9, "ax.modelbridge.base.gen_arms"]], "gen_metadata (ax.modelbridge.base.genresults attribute)": [[9, "ax.modelbridge.base.GenResults.gen_metadata"]], "get_gpei() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_GPEI"]], "get_botorch() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_botorch"]], "get_data() (in module ax.modelbridge.transforms.utils)": [[9, "ax.modelbridge.transforms.utils.get_data"]], "get_empirical_bayes_thompson() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_empirical_bayes_thompson"]], "get_factorial() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_factorial"]], "get_fixed_features() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.get_fixed_features"]], "get_fixed_features_from_experiment() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.get_fixed_features_from_experiment"]], "get_metric_index() (in module ax.modelbridge.transforms.relativize)": [[9, "ax.modelbridge.transforms.relativize.get_metric_index"]], "get_model_from_generator_run() (in module ax.modelbridge.registry)": [[9, "ax.modelbridge.registry.get_model_from_generator_run"]], "get_pareto_frontier_and_configs() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.get_pareto_frontier_and_configs"]], "get_sobol() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_sobol"]], "get_thompson() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_thompson"]], "get_training_data() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.get_training_data"]], "get_uniform() (in module ax.modelbridge.factory)": [[9, "ax.modelbridge.factory.get_uniform"]], "hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.hypervolume"]], "infer_objective_thresholds() (ax.modelbridge.torch.torchmodelbridge method)": [[9, "ax.modelbridge.torch.TorchModelBridge.infer_objective_thresholds"]], "inverse_transform() (ax.modelbridge.transforms.one_hot.onehotencoder method)": [[9, "ax.modelbridge.transforms.one_hot.OneHotEncoder.inverse_transform"]], "ivw_metric_merge() (in module ax.modelbridge.transforms.ivw)": [[9, "ax.modelbridge.transforms.ivw.ivw_metric_merge"]], "lognorm_to_norm() (in module ax.modelbridge.transforms.log_y)": [[9, "ax.modelbridge.transforms.log_y.lognorm_to_norm"]], "match_ci_width() (in module ax.modelbridge.transforms.log_y)": [[9, "ax.modelbridge.transforms.log_y.match_ci_width"]], "match_ci_width_truncated() (in module ax.modelbridge.transforms.utils)": [[9, "ax.modelbridge.transforms.utils.match_ci_width_truncated"]], "metric_names (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.metric_names"]], "model (ax.modelbridge.discrete.discretemodelbridge attribute)": [[9, "ax.modelbridge.discrete.DiscreteModelBridge.model"]], "model (ax.modelbridge.torch.torchmodelbridge attribute)": [[9, "ax.modelbridge.torch.TorchModelBridge.model"]], "model_best_point() (ax.modelbridge.torch.torchmodelbridge method)": [[9, "ax.modelbridge.torch.TorchModelBridge.model_best_point"]], "model_bridge_class (ax.modelbridge.registry.modelregistrybase property)": [[9, "ax.modelbridge.registry.ModelRegistryBase.model_bridge_class"]], "model_class (ax.modelbridge.registry.modelregistrybase property)": [[9, "ax.modelbridge.registry.ModelRegistryBase.model_class"]], "model_class (ax.modelbridge.registry.modelsetup attribute)": [[9, "ax.modelbridge.registry.ModelSetup.model_class"]], "model_space (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.model_space"]], "modelbridge (ax.modelbridge.transforms.base.transform attribute)": [[9, "ax.modelbridge.transforms.base.Transform.modelbridge"]], "norm_to_lognorm() (in module ax.modelbridge.transforms.log_y)": [[9, "ax.modelbridge.transforms.log_y.norm_to_lognorm"]], "not_saved_model_kwargs (ax.modelbridge.registry.modelsetup attribute)": [[9, "ax.modelbridge.registry.ModelSetup.not_saved_model_kwargs"]], "observation_data_to_array() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.observation_data_to_array"]], "observation_features (ax.modelbridge.base.genresults attribute)": [[9, "ax.modelbridge.base.GenResults.observation_features"]], "observation_features_to_array() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.observation_features_to_array"]], "observed_hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.observed_hypervolume"]], "observed_pareto_frontier() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.observed_pareto_frontier"]], "optimization_config (ax.modelbridge.base.basegenargs attribute)": [[9, "ax.modelbridge.base.BaseGenArgs.optimization_config"]], "outcomes (ax.modelbridge.discrete.discretemodelbridge attribute)": [[9, "ax.modelbridge.discrete.DiscreteModelBridge.outcomes"]], "outcomes (ax.modelbridge.torch.torchmodelbridge attribute)": [[9, "ax.modelbridge.torch.TorchModelBridge.outcomes"]], "parameters (ax.modelbridge.discrete.discretemodelbridge attribute)": [[9, "ax.modelbridge.discrete.DiscreteModelBridge.parameters"]], "parameters (ax.modelbridge.torch.torchmodelbridge attribute)": [[9, "ax.modelbridge.torch.TorchModelBridge.parameters"]], "parameters_with_map_keys (ax.modelbridge.map_torch.maptorchmodelbridge property)": [[9, "ax.modelbridge.map_torch.MapTorchModelBridge.parameters_with_map_keys"]], "pareto_frontier() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.pareto_frontier"]], "parse_observation_features() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.parse_observation_features"]], "pending_observations (ax.modelbridge.base.basegenargs attribute)": [[9, "ax.modelbridge.base.BaseGenArgs.pending_observations"]], "pending_observations_as_array_list() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.pending_observations_as_array_list"]], "predict() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.predict"]], "predict_at_point() (in module ax.modelbridge.prediction_utils)": [[9, "ax.modelbridge.prediction_utils.predict_at_point"]], "predict_by_features() (in module ax.modelbridge.prediction_utils)": [[9, "ax.modelbridge.prediction_utils.predict_by_features"]], "predicted_hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.predicted_hypervolume"]], "predicted_pareto_frontier() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.predicted_pareto_frontier"]], "process_contextual_datasets() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.process_contextual_datasets"]], "randomized_onehot_round() (in module ax.modelbridge.transforms.rounding)": [[9, "ax.modelbridge.transforms.rounding.randomized_onehot_round"]], "randomized_round() (in module ax.modelbridge.transforms.rounding)": [[9, "ax.modelbridge.transforms.rounding.randomized_round"]], "randomized_round_parameters() (in module ax.modelbridge.transforms.rounding)": [[9, "ax.modelbridge.transforms.rounding.randomized_round_parameters"]], "search_space (ax.modelbridge.base.basegenargs attribute)": [[9, "ax.modelbridge.base.BaseGenArgs.search_space"]], "search_space (ax.modelbridge.discrete.discretemodelbridge attribute)": [[9, "ax.modelbridge.discrete.DiscreteModelBridge.search_space"]], "standard_bridge_kwargs (ax.modelbridge.registry.modelsetup attribute)": [[9, "ax.modelbridge.registry.ModelSetup.standard_bridge_kwargs"]], "status_quo (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.status_quo"]], "status_quo_data_by_trial (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.status_quo_data_by_trial"]], "statuses_to_fit (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.statuses_to_fit"]], "statuses_to_fit_map_metric (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.statuses_to_fit_map_metric"]], "statuses_to_fit_map_metric (ax.modelbridge.map_torch.maptorchmodelbridge property)": [[9, "ax.modelbridge.map_torch.MapTorchModelBridge.statuses_to_fit_map_metric"]], "strict_onehot_round() (in module ax.modelbridge.transforms.rounding)": [[9, "ax.modelbridge.transforms.rounding.strict_onehot_round"]], "target_lb (ax.modelbridge.transforms.centered_unit_x.centeredunitx attribute)": [[9, "ax.modelbridge.transforms.centered_unit_x.CenteredUnitX.target_lb"]], "target_lb (ax.modelbridge.transforms.map_unit_x.mapunitx attribute)": [[9, "ax.modelbridge.transforms.map_unit_x.MapUnitX.target_lb"]], "target_lb (ax.modelbridge.transforms.unit_x.unitx attribute)": [[9, "ax.modelbridge.transforms.unit_x.UnitX.target_lb"]], "target_range (ax.modelbridge.transforms.centered_unit_x.centeredunitx attribute)": [[9, "ax.modelbridge.transforms.centered_unit_x.CenteredUnitX.target_range"]], "target_range (ax.modelbridge.transforms.map_unit_x.mapunitx attribute)": [[9, "ax.modelbridge.transforms.map_unit_x.MapUnitX.target_range"]], "target_range (ax.modelbridge.transforms.unit_x.unitx attribute)": [[9, "ax.modelbridge.transforms.unit_x.UnitX.target_range"]], "tconfig_from_mt_experiment() (in module ax.modelbridge.transforms.convert_metric_names)": [[9, "ax.modelbridge.transforms.convert_metric_names.tconfig_from_mt_experiment"]], "training_in_design (ax.modelbridge.base.modelbridge property)": [[9, "ax.modelbridge.base.ModelBridge.training_in_design"]], "transform() (ax.modelbridge.transforms.one_hot.onehotencoder method)": [[9, "ax.modelbridge.transforms.one_hot.OneHotEncoder.transform"]], "transform_callback() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.transform_callback"]], "transform_choice_values() (in module ax.modelbridge.transforms.choice_encode)": [[9, "ax.modelbridge.transforms.choice_encode.transform_choice_values"]], "transform_observation_features() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.cast.cast method)": [[9, "ax.modelbridge.transforms.cast.Cast.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.choice_encode.choicetonumericchoice method)": [[9, "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.int_to_float.inttofloat method)": [[9, "ax.modelbridge.transforms.int_to_float.IntToFloat.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.log.log method)": [[9, "ax.modelbridge.transforms.log.Log.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.logit.logit method)": [[9, "ax.modelbridge.transforms.logit.Logit.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[9, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.one_hot.onehot method)": [[9, "ax.modelbridge.transforms.one_hot.OneHot.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.remove_fixed.removefixed method)": [[9, "ax.modelbridge.transforms.remove_fixed.RemoveFixed.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.search_space_to_choice.searchspacetochoice method)": [[9, "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.time_as_feature.timeasfeature method)": [[9, "ax.modelbridge.transforms.time_as_feature.TimeAsFeature.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.trial_as_task.trialastask method)": [[9, "ax.modelbridge.transforms.trial_as_task.TrialAsTask.transform_observation_features"]], "transform_observation_features() (ax.modelbridge.transforms.unit_x.unitx method)": [[9, "ax.modelbridge.transforms.unit_x.UnitX.transform_observation_features"]], "transform_observations() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.transform_observations"]], "transform_observations() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.transform_observations"]], "transform_observations() (ax.modelbridge.transforms.merge_repeated_measurements.mergerepeatedmeasurements method)": [[9, "ax.modelbridge.transforms.merge_repeated_measurements.MergeRepeatedMeasurements.transform_observations"]], "transform_observations() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[9, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.transform_observations"]], "transform_observations() (ax.modelbridge.transforms.relativize.baserelativize method)": [[9, "ax.modelbridge.transforms.relativize.BaseRelativize.transform_observations"]], "transform_observations() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[9, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.transform_observations"]], "transform_optimization_config() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.transform_optimization_config"]], "transform_optimization_config() (ax.modelbridge.transforms.derelativize.derelativize method)": [[9, "ax.modelbridge.transforms.derelativize.Derelativize.transform_optimization_config"]], "transform_optimization_config() (ax.modelbridge.transforms.log_y.logy method)": [[9, "ax.modelbridge.transforms.log_y.LogY.transform_optimization_config"]], "transform_optimization_config() (ax.modelbridge.transforms.relativize.baserelativize method)": [[9, "ax.modelbridge.transforms.relativize.BaseRelativize.transform_optimization_config"]], "transform_optimization_config() (ax.modelbridge.transforms.standardize_y.standardizey method)": [[9, "ax.modelbridge.transforms.standardize_y.StandardizeY.transform_optimization_config"]], "transform_optimization_config() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[9, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.transform_optimization_config"]], "transform_optimization_config() (ax.modelbridge.transforms.transform_to_new_sq.transformtonewsq method)": [[9, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ.transform_optimization_config"]], "transform_search_space() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.transform_search_space"]], "transform_search_space() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.transform_search_space"]], "transforms (ax.modelbridge.registry.modelsetup attribute)": [[9, "ax.modelbridge.registry.ModelSetup.transforms"]], "untransform_observation_features() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.cast.cast method)": [[9, "ax.modelbridge.transforms.cast.Cast.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.choice_encode.choicetonumericchoice method)": [[9, "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.int_to_float.inttofloat method)": [[9, "ax.modelbridge.transforms.int_to_float.IntToFloat.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.log.log method)": [[9, "ax.modelbridge.transforms.log.Log.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.logit.logit method)": [[9, "ax.modelbridge.transforms.logit.Logit.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.map_unit_x.mapunitx method)": [[9, "ax.modelbridge.transforms.map_unit_x.MapUnitX.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[9, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.one_hot.onehot method)": [[9, "ax.modelbridge.transforms.one_hot.OneHot.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.remove_fixed.removefixed method)": [[9, "ax.modelbridge.transforms.remove_fixed.RemoveFixed.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.search_space_to_choice.searchspacetochoice method)": [[9, "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.time_as_feature.timeasfeature method)": [[9, "ax.modelbridge.transforms.time_as_feature.TimeAsFeature.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.trial_as_task.trialastask method)": [[9, "ax.modelbridge.transforms.trial_as_task.TrialAsTask.untransform_observation_features"]], "untransform_observation_features() (ax.modelbridge.transforms.unit_x.unitx method)": [[9, "ax.modelbridge.transforms.unit_x.UnitX.untransform_observation_features"]], "untransform_observations() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.untransform_observations"]], "untransform_observations() (ax.modelbridge.transforms.convert_metric_names.convertmetricnames method)": [[9, "ax.modelbridge.transforms.convert_metric_names.ConvertMetricNames.untransform_observations"]], "untransform_observations() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[9, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.untransform_observations"]], "untransform_observations() (ax.modelbridge.transforms.relativize.baserelativize method)": [[9, "ax.modelbridge.transforms.relativize.BaseRelativize.untransform_observations"]], "untransform_observations() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[9, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.untransform_observations"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.base.transform method)": [[9, "ax.modelbridge.transforms.base.Transform.untransform_outcome_constraints"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.derelativize.derelativize method)": [[9, "ax.modelbridge.transforms.derelativize.Derelativize.untransform_outcome_constraints"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.log_y.logy method)": [[9, "ax.modelbridge.transforms.log_y.LogY.untransform_outcome_constraints"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.relativize.baserelativize method)": [[9, "ax.modelbridge.transforms.relativize.BaseRelativize.untransform_outcome_constraints"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.standardize_y.standardizey method)": [[9, "ax.modelbridge.transforms.standardize_y.StandardizeY.untransform_outcome_constraints"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[9, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.untransform_outcome_constraints"]], "untransform_outcome_constraints() (ax.modelbridge.transforms.transform_to_new_sq.transformtonewsq method)": [[9, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ.untransform_outcome_constraints"]], "unwrap_observation_data() (in module ax.modelbridge.base)": [[9, "ax.modelbridge.base.unwrap_observation_data"]], "update() (ax.modelbridge.base.modelbridge method)": [[9, "ax.modelbridge.base.ModelBridge.update"]], "validate_and_apply_final_transform() (in module ax.modelbridge.modelbridge_utils)": [[9, "ax.modelbridge.modelbridge_utils.validate_and_apply_final_transform"]], "validate_optimization_config() (in module ax.modelbridge.torch)": [[9, "ax.modelbridge.torch.validate_optimization_config"]], "view_defaults() (ax.modelbridge.registry.modelregistrybase method)": [[9, "ax.modelbridge.registry.ModelRegistryBase.view_defaults"]], "view_kwargs() (ax.modelbridge.registry.modelregistrybase method)": [[9, "ax.modelbridge.registry.ModelRegistryBase.view_kwargs"]], "weights (ax.modelbridge.base.genresults attribute)": [[9, "ax.modelbridge.base.GenResults.weights"]], "acquisition (class in ax.models.torch.botorch_modular.acquisition)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition"]], "botorchmodel (class in ax.models.torch.botorch_modular.model)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel"]], "botorchmodel (class in ax.models.torch.botorch)": [[10, "ax.models.torch.botorch.BotorchModel"]], "discretemodel (class in ax.models.discrete_base)": [[10, "ax.models.discrete_base.DiscreteModel"]], "empiricalbayesthompsonsampler (class in ax.models.discrete.eb_thompson)": [[10, "ax.models.discrete.eb_thompson.EmpiricalBayesThompsonSampler"]], "fullfactorialgenerator (class in ax.models.discrete.full_factorial)": [[10, "ax.models.discrete.full_factorial.FullFactorialGenerator"]], "knowledgegradient (class in ax.models.torch.botorch_kg)": [[10, "ax.models.torch.botorch_kg.KnowledgeGradient"]], "l1_norm_func() (in module ax.models.torch.botorch_modular.sebo)": [[10, "ax.models.torch.botorch_modular.sebo.L1_norm_func"]], "lceabo (class in ax.models.torch.cbo_lcea)": [[10, "ax.models.torch.cbo_lcea.LCEABO"]], "lcembo (class in ax.models.torch.cbo_lcem)": [[10, "ax.models.torch.cbo_lcem.LCEMBO"]], "model (class in ax.models.base)": [[10, "ax.models.base.Model"]], "multiobjectivebotorchmodel (class in ax.models.torch.botorch_moo)": [[10, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel"]], "randommodel (class in ax.models.random.base)": [[10, "ax.models.random.base.RandomModel"]], "sacbo (class in ax.models.torch.cbo_sac)": [[10, "ax.models.torch.cbo_sac.SACBO"]], "seboacquisition (class in ax.models.torch.botorch_modular.sebo)": [[10, "ax.models.torch.botorch_modular.sebo.SEBOAcquisition"]], "scalematernkernel (class in ax.models.torch.botorch_modular.kernels)": [[10, "ax.models.torch.botorch_modular.kernels.ScaleMaternKernel"]], "sobolgenerator (class in ax.models.random.sobol)": [[10, "ax.models.random.sobol.SobolGenerator"]], "subsetmodeldata (class in ax.models.torch.utils)": [[10, "ax.models.torch.utils.SubsetModelData"]], "surrogate (class in ax.models.torch.botorch_modular.surrogate)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate"]], "surrogatespec (class in ax.models.torch.botorch_modular.model)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec"]], "tacqfconstructor (class in ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.TAcqfConstructor"]], "temporalkernel (class in ax.models.torch.botorch_modular.kernels)": [[10, "ax.models.torch.botorch_modular.kernels.TemporalKernel"]], "thompsonsampler (class in ax.models.discrete.thompson)": [[10, "ax.models.discrete.thompson.ThompsonSampler"]], "torchgenresults (class in ax.models.torch_base)": [[10, "ax.models.torch_base.TorchGenResults"]], "torchmodel (class in ax.models.torch_base)": [[10, "ax.models.torch_base.TorchModel"]], "torchmodellike (class in ax.models.model_utils)": [[10, "ax.models.model_utils.TorchModelLike"]], "torchoptconfig (class in ax.models.torch_base)": [[10, "ax.models.torch_base.TorchOptConfig"]], "uniformgenerator (class in ax.models.random.uniform)": [[10, "ax.models.random.uniform.UniformGenerator"]], "winsorizationconfig (class in ax.models.winsorization_config)": [[10, "ax.models.winsorization_config.WinsorizationConfig"]], "xs (ax.models.torch.botorch.botorchmodel attribute)": [[10, "ax.models.torch.botorch.BotorchModel.Xs"]], "xs (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.Xs"]], "xs (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.Xs"]], "xs (ax.models.torch.botorch_moo.multiobjectivebotorchmodel attribute)": [[10, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.Xs"]], "ys (ax.models.torch.botorch.botorchmodel attribute)": [[10, "ax.models.torch.botorch.BotorchModel.Ys"]], "ys (ax.models.torch.botorch_moo.multiobjectivebotorchmodel attribute)": [[10, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.Ys"]], "yvars (ax.models.torch.botorch.botorchmodel attribute)": [[10, "ax.models.torch.botorch.BotorchModel.Yvars"]], "yvars (ax.models.torch.botorch_moo.multiobjectivebotorchmodel attribute)": [[10, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.Yvars"]], "acqf (ax.models.torch.botorch_modular.acquisition.acquisition attribute)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.acqf"]], "acquisition_class (ax.models.torch.botorch_modular.model.botorchmodel attribute)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.acquisition_class"]], "acquisition_options (ax.models.torch.botorch_modular.model.botorchmodel attribute)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.acquisition_options"]], "add_fixed_features() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.add_fixed_features"]], "allow_batched_models (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.allow_batched_models"]], "as_array() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.as_array"]], "ax.models": [[10, "module-ax.models"]], "ax.models.base": [[10, "module-ax.models.base"]], "ax.models.discrete.eb_thompson": [[10, "module-ax.models.discrete.eb_thompson"]], "ax.models.discrete.full_factorial": [[10, "module-ax.models.discrete.full_factorial"]], "ax.models.discrete.thompson": [[10, "module-ax.models.discrete.thompson"]], "ax.models.discrete_base": [[10, "module-ax.models.discrete_base"]], "ax.models.model_utils": [[10, "module-ax.models.model_utils"]], "ax.models.random.base": [[10, "module-ax.models.random.base"]], "ax.models.random.sobol": [[10, "module-ax.models.random.sobol"]], "ax.models.random.uniform": [[10, "module-ax.models.random.uniform"]], "ax.models.torch.botorch": [[10, "module-ax.models.torch.botorch"]], "ax.models.torch.botorch_defaults": [[10, "module-ax.models.torch.botorch_defaults"]], "ax.models.torch.botorch_kg": [[10, "module-ax.models.torch.botorch_kg"]], "ax.models.torch.botorch_modular.acquisition": [[10, "module-ax.models.torch.botorch_modular.acquisition"]], "ax.models.torch.botorch_modular.input_constructors.covar_modules": [[10, "module-ax.models.torch.botorch_modular.input_constructors.covar_modules"]], "ax.models.torch.botorch_modular.input_constructors.input_transforms": [[10, "module-ax.models.torch.botorch_modular.input_constructors.input_transforms"]], "ax.models.torch.botorch_modular.input_constructors.outcome_transform": [[10, "module-ax.models.torch.botorch_modular.input_constructors.outcome_transform"]], "ax.models.torch.botorch_modular.kernels": [[10, "module-ax.models.torch.botorch_modular.kernels"]], "ax.models.torch.botorch_modular.model": [[10, "module-ax.models.torch.botorch_modular.model"]], "ax.models.torch.botorch_modular.optimizer_argparse": [[10, "module-ax.models.torch.botorch_modular.optimizer_argparse"]], "ax.models.torch.botorch_modular.sebo": [[10, "module-ax.models.torch.botorch_modular.sebo"]], "ax.models.torch.botorch_modular.surrogate": [[10, "module-ax.models.torch.botorch_modular.surrogate"]], "ax.models.torch.botorch_modular.utils": [[10, "module-ax.models.torch.botorch_modular.utils"]], "ax.models.torch.botorch_moo": [[10, "module-ax.models.torch.botorch_moo"]], "ax.models.torch.botorch_moo_defaults": [[10, "module-ax.models.torch.botorch_moo_defaults"]], "ax.models.torch.cbo_lcea": [[10, "module-ax.models.torch.cbo_lcea"]], "ax.models.torch.cbo_lcem": [[10, "module-ax.models.torch.cbo_lcem"]], "ax.models.torch.cbo_sac": [[10, "module-ax.models.torch.cbo_sac"]], "ax.models.torch.utils": [[10, "module-ax.models.torch.utils"]], "ax.models.torch_base": [[10, "module-ax.models.torch_base"]], "ax.models.types": [[10, "module-ax.models.types"]], "ax.models.winsorization_config": [[10, "module-ax.models.winsorization_config"]], "best_in_sample_point() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.best_in_sample_point"]], "best_in_sample_point() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.best_in_sample_point"]], "best_observed_point() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.best_observed_point"]], "best_out_of_sample_point() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.best_out_of_sample_point"]], "best_point() (ax.models.discrete_base.discretemodel method)": [[10, "ax.models.discrete_base.DiscreteModel.best_point"]], "best_point() (ax.models.torch.botorch.botorchmodel method)": [[10, "ax.models.torch.botorch.BotorchModel.best_point"]], "best_point() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.best_point"]], "best_point() (ax.models.torch.cbo_lcea.lceabo method)": [[10, "ax.models.torch.cbo_lcea.LCEABO.best_point"]], "best_point() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.best_point"]], "botorch_acqf_class (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.botorch_acqf_class"]], "botorch_acqf_class (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.botorch_acqf_class"]], "botorch_model_class (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.botorch_model_class"]], "botorch_model_kwargs (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.botorch_model_kwargs"]], "candidate_metadata (ax.models.torch_base.torchgenresults attribute)": [[10, "ax.models.torch_base.TorchGenResults.candidate_metadata"]], "check_duplicate() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.check_duplicate"]], "check_outcome_dataset_match() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.check_outcome_dataset_match"]], "check_param_constraints() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.check_param_constraints"]], "choose_botorch_acqf_class() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.choose_botorch_acqf_class"]], "choose_model_class() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.choose_model_class"]], "clamp_candidates() (in module ax.models.torch.botorch_modular.sebo)": [[10, "ax.models.torch.botorch_modular.sebo.clamp_candidates"]], "clone_reset() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.clone_reset"]], "compute_diagnostics() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.compute_diagnostics"]], "compute_model_dependencies() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.compute_model_dependencies"]], "construct_acquisition_and_optimizer_options() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.construct_acquisition_and_optimizer_options"]], "convert_to_block_design() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.convert_to_block_design"]], "covar_module_class (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.covar_module_class"]], "covar_module_kwargs (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.covar_module_kwargs"]], "cross_validate() (ax.models.discrete_base.discretemodel method)": [[10, "ax.models.discrete_base.DiscreteModel.cross_validate"]], "cross_validate() (ax.models.torch.botorch.botorchmodel method)": [[10, "ax.models.torch.botorch.BotorchModel.cross_validate"]], "cross_validate() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.cross_validate"]], "cross_validate() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.cross_validate"]], "deduplicate (ax.models.random.base.randommodel attribute)": [[10, "ax.models.random.base.RandomModel.deduplicate"]], "deserialize_state() (ax.models.base.model class method)": [[10, "ax.models.base.Model.deserialize_state"]], "device (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.device"]], "device (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.device"]], "device (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.device"]], "device (ax.models.torch_base.torchmodel attribute)": [[10, "ax.models.torch_base.TorchModel.device"]], "dtype (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.dtype"]], "dtype (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.dtype"]], "dtype (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.dtype"]], "dtype (ax.models.torch_base.torchmodel attribute)": [[10, "ax.models.torch_base.TorchModel.dtype"]], "engine (ax.models.random.sobol.sobolgenerator property)": [[10, "ax.models.random.sobol.SobolGenerator.engine"]], "enumerate_discrete_combinations() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.enumerate_discrete_combinations"]], "evaluate() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.evaluate"]], "evaluate_acquisition_function() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.evaluate_acquisition_function"]], "evaluate_acquisition_function() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.evaluate_acquisition_function"]], "fallback_to_sample_polytope (ax.models.random.base.randommodel attribute)": [[10, "ax.models.random.base.RandomModel.fallback_to_sample_polytope"]], "feature_importances() (ax.models.base.model method)": [[10, "ax.models.base.Model.feature_importances"]], "feature_importances() (ax.models.torch.botorch.botorchmodel method)": [[10, "ax.models.torch.botorch.BotorchModel.feature_importances"]], "feature_importances() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.feature_importances"]], "filter_constraints_and_fixed_features() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.filter_constraints_and_fixed_features"]], "fit() (ax.models.discrete.thompson.thompsonsampler method)": [[10, "ax.models.discrete.thompson.ThompsonSampler.fit"]], "fit() (ax.models.discrete_base.discretemodel method)": [[10, "ax.models.discrete_base.DiscreteModel.fit"]], "fit() (ax.models.torch.botorch.botorchmodel method)": [[10, "ax.models.torch.botorch.BotorchModel.fit"]], "fit() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.fit"]], "fit() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.fit"]], "fit() (ax.models.torch.cbo_lcea.lceabo method)": [[10, "ax.models.torch.cbo_lcea.LCEABO.fit"]], "fit() (ax.models.torch.cbo_sac.sacbo method)": [[10, "ax.models.torch.cbo_sac.SACBO.fit"]], "fit() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.fit"]], "fit_botorch_model() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.fit_botorch_model"]], "fit_out_of_design (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.fit_out_of_design"]], "fixed_features (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.fixed_features"], [10, "id0"]], "gen() (ax.models.discrete.full_factorial.fullfactorialgenerator method)": [[10, "ax.models.discrete.full_factorial.FullFactorialGenerator.gen"]], "gen() (ax.models.discrete.thompson.thompsonsampler method)": [[10, "ax.models.discrete.thompson.ThompsonSampler.gen"]], "gen() (ax.models.discrete_base.discretemodel method)": [[10, "ax.models.discrete_base.DiscreteModel.gen"]], "gen() (ax.models.random.base.randommodel method)": [[10, "ax.models.random.base.RandomModel.gen"]], "gen() (ax.models.random.sobol.sobolgenerator method)": [[10, "ax.models.random.sobol.SobolGenerator.gen"]], "gen() (ax.models.torch.botorch.botorchmodel method)": [[10, "ax.models.torch.botorch.BotorchModel.gen"]], "gen() (ax.models.torch.botorch_kg.knowledgegradient method)": [[10, "ax.models.torch.botorch_kg.KnowledgeGradient.gen"]], "gen() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.gen"]], "gen() (ax.models.torch.botorch_moo.multiobjectivebotorchmodel method)": [[10, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.gen"]], "gen() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.gen"]], "gen_metadata (ax.models.torch_base.torchgenresults attribute)": [[10, "ax.models.torch_base.TorchGenResults.gen_metadata"]], "generate_model_space_decomposition() (in module ax.models.torch.cbo_sac)": [[10, "ax.models.torch.cbo_sac.generate_model_space_decomposition"]], "generated_points (ax.models.random.base.randommodel attribute)": [[10, "ax.models.random.base.RandomModel.generated_points"]], "get_ehvi() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.get_EHVI"]], "get_nehvi() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.get_NEHVI"]], "get_nei() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_NEI"]], "get_acqf() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_acqf"]], "get_and_fit_model() (ax.models.torch.cbo_lcea.lceabo method)": [[10, "ax.models.torch.cbo_lcea.LCEABO.get_and_fit_model"]], "get_and_fit_model() (ax.models.torch.cbo_lcem.lcembo method)": [[10, "ax.models.torch.cbo_lcem.LCEMBO.get_and_fit_model"]], "get_and_fit_model() (ax.models.torch.cbo_sac.sacbo method)": [[10, "ax.models.torch.cbo_sac.SACBO.get_and_fit_model"]], "get_and_fit_model() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_and_fit_model"]], "get_batch_initial_conditions() (in module ax.models.torch.botorch_modular.sebo)": [[10, "ax.models.torch.botorch_modular.sebo.get_batch_initial_conditions"]], "get_botorch_objective_and_transform() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.get_botorch_objective_and_transform"]], "get_botorch_objective_and_transform() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.get_botorch_objective_and_transform"]], "get_feature_importances_from_botorch_model() (in module ax.models.torch.botorch)": [[10, "ax.models.torch.botorch.get_feature_importances_from_botorch_model"]], "get_map_model() (in module ax.models.torch.cbo_lcea)": [[10, "ax.models.torch.cbo_lcea.get_map_model"]], "get_observed() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.get_observed"]], "get_out_of_sample_best_point_acqf() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.get_out_of_sample_best_point_acqf"]], "get_post_processing_func() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.get_post_processing_func"]], "get_qei() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_qEI"]], "get_qlogehvi() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.get_qLogEHVI"]], "get_qlogei() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_qLogEI"]], "get_qlognehvi() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.get_qLogNEHVI"]], "get_qlognei() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_qLogNEI"]], "get_rounding_func() (in module ax.models.torch.botorch)": [[10, "ax.models.torch.botorch.get_rounding_func"]], "get_subset_datasets() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.get_subset_datasets"]], "get_warping_transform() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.get_warping_transform"]], "get_weighted_mc_objective_and_objective_thresholds() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.get_weighted_mc_objective_and_objective_thresholds"]], "indices (ax.models.torch.utils.subsetmodeldata attribute)": [[10, "ax.models.torch.utils.SubsetModelData.indices"]], "infer_objective_thresholds() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.infer_objective_thresholds"]], "init_engine() (ax.models.random.sobol.sobolgenerator method)": [[10, "ax.models.random.sobol.SobolGenerator.init_engine"]], "init_position (ax.models.random.base.randommodel attribute)": [[10, "ax.models.random.base.RandomModel.init_position"]], "input_transform_classes (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.input_transform_classes"]], "input_transform_options (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.input_transform_options"]], "is_moo (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.is_moo"], [10, "id1"]], "is_noiseless() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.is_noiseless"]], "likelihood_class (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.likelihood_class"]], "likelihood_kwargs (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.likelihood_kwargs"]], "linear_constraints (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.linear_constraints"], [10, "id2"]], "lower_boundary (ax.models.winsorization_config.winsorizationconfig attribute)": [[10, "ax.models.winsorization_config.WinsorizationConfig.lower_boundary"]], "lower_quantile_margin (ax.models.winsorization_config.winsorizationconfig attribute)": [[10, "ax.models.winsorization_config.WinsorizationConfig.lower_quantile_margin"]], "mk_discrete_choices() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.mk_discrete_choices"]], "mll_class (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.mll_class"]], "mll_kwargs (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.mll_kwargs"]], "model (ax.models.torch.botorch.botorchmodel property)": [[10, "ax.models.torch.botorch.BotorchModel.model"]], "model (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.model"]], "model (ax.models.torch.cbo_lcea.lceabo property)": [[10, "ax.models.torch.cbo_lcea.LCEABO.model"]], "model (ax.models.torch.utils.subsetmodeldata attribute)": [[10, "ax.models.torch.utils.SubsetModelData.model"]], "model_gen_options (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.model_gen_options"], [10, "id3"]], "normalize_indices() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.normalize_indices"]], "objective_thresholds (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.objective_thresholds"]], "objective_thresholds (ax.models.torch.utils.subsetmodeldata attribute)": [[10, "ax.models.torch.utils.SubsetModelData.objective_thresholds"]], "objective_thresholds (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.objective_thresholds"], [10, "id4"]], "objective_weights (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.objective_weights"]], "objective_weights (ax.models.torch.utils.subsetmodeldata attribute)": [[10, "ax.models.torch.utils.SubsetModelData.objective_weights"]], "objective_weights (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.objective_weights"], [10, "id5"]], "opt_config_metrics (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.opt_config_metrics"], [10, "id6"]], "optimize() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.optimize"]], "optimize() (ax.models.torch.botorch_modular.sebo.seboacquisition method)": [[10, "ax.models.torch.botorch_modular.sebo.SEBOAcquisition.optimize"]], "options (ax.models.torch.botorch_modular.acquisition.acquisition attribute)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.options"]], "outcome_constraints (ax.models.torch.utils.subsetmodeldata attribute)": [[10, "ax.models.torch.utils.SubsetModelData.outcome_constraints"]], "outcome_constraints (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.outcome_constraints"], [10, "id7"]], "outcome_transform_classes (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.outcome_transform_classes"]], "outcome_transform_options (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.outcome_transform_options"]], "outcomes (ax.models.torch.botorch_modular.model.surrogatespec attribute)": [[10, "ax.models.torch.botorch_modular.model.SurrogateSpec.outcomes"]], "outcomes (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.outcomes"]], "outcomes_by_surrogate_label (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.outcomes_by_surrogate_label"]], "output_order (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.output_order"]], "pareto_frontier() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.pareto_frontier"]], "pareto_frontier_evaluator() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.pareto_frontier_evaluator"]], "pending_observations (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.pending_observations"], [10, "id8"]], "pick_best_out_of_sample_point_acqf_class() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.pick_best_out_of_sample_point_acqf_class"]], "points (ax.models.torch_base.torchgenresults attribute)": [[10, "ax.models.torch_base.TorchGenResults.points"]], "predict() (ax.models.discrete.thompson.thompsonsampler method)": [[10, "ax.models.discrete.thompson.ThompsonSampler.predict"]], "predict() (ax.models.discrete_base.discretemodel method)": [[10, "ax.models.discrete_base.DiscreteModel.predict"]], "predict() (ax.models.model_utils.torchmodellike method)": [[10, "ax.models.model_utils.TorchModelLike.predict"]], "predict() (ax.models.torch.botorch.botorchmodel method)": [[10, "ax.models.torch.botorch.BotorchModel.predict"]], "predict() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.predict"]], "predict() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.predict"]], "predict() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.predict"]], "predict_from_model() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.predict_from_model"]], "predict_from_surrogate() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.predict_from_surrogate"]], "randomize_objective_weights() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.randomize_objective_weights"]], "recommend_best_observed_point() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.recommend_best_observed_point"]], "recommend_best_out_of_sample_point() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.recommend_best_out_of_sample_point"]], "rejection_sample() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.rejection_sample"]], "risk_measure (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.risk_measure"], [10, "id9"]], "rounding_func (ax.models.torch_base.torchoptconfig attribute)": [[10, "ax.models.torch_base.TorchOptConfig.rounding_func"], [10, "id10"]], "scipy_optimizer() (in module ax.models.torch.botorch_defaults)": [[10, "ax.models.torch.botorch_defaults.scipy_optimizer"]], "scipy_optimizer_list() (in module ax.models.torch.botorch_moo_defaults)": [[10, "ax.models.torch.botorch_moo_defaults.scipy_optimizer_list"]], "scramble (ax.models.random.sobol.sobolgenerator attribute)": [[10, "ax.models.random.sobol.SobolGenerator.scramble"]], "search_space_digest (ax.models.torch.botorch.botorchmodel property)": [[10, "ax.models.torch.botorch.BotorchModel.search_space_digest"]], "search_space_digest (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.search_space_digest"]], "seed (ax.models.random.base.randommodel attribute)": [[10, "ax.models.random.base.RandomModel.seed"]], "serialize_state() (ax.models.base.model class method)": [[10, "ax.models.base.Model.serialize_state"]], "single_surrogate_only() (in module ax.models.torch.botorch_modular.model)": [[10, "ax.models.torch.botorch_modular.model.single_surrogate_only"]], "subset_model() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.subset_model"]], "subset_state_dict() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.subset_state_dict"]], "surrogate (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.surrogate"]], "surrogate_specs (ax.models.torch.botorch_modular.model.botorchmodel attribute)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.surrogate_specs"]], "surrogates (ax.models.torch.botorch_modular.acquisition.acquisition attribute)": [[10, "ax.models.torch.botorch_modular.acquisition.Acquisition.surrogates"]], "surrogates (ax.models.torch.botorch_modular.model.botorchmodel property)": [[10, "ax.models.torch.botorch_modular.model.BoTorchModel.surrogates"]], "tensor_callable_to_array_callable() (in module ax.models.torch.utils)": [[10, "ax.models.torch.utils.tensor_callable_to_array_callable"]], "training_data (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[10, "ax.models.torch.botorch_modular.surrogate.Surrogate.training_data"]], "tunable_feature_indices() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.tunable_feature_indices"]], "update() (ax.models.torch_base.torchmodel method)": [[10, "ax.models.torch_base.TorchModel.update"]], "upper_boundary (ax.models.winsorization_config.winsorizationconfig attribute)": [[10, "ax.models.winsorization_config.WinsorizationConfig.upper_boundary"]], "upper_quantile_margin (ax.models.winsorization_config.winsorizationconfig attribute)": [[10, "ax.models.winsorization_config.WinsorizationConfig.upper_quantile_margin"]], "use_model_list() (in module ax.models.torch.botorch_modular.utils)": [[10, "ax.models.torch.botorch_modular.utils.use_model_list"]], "validate_bounds() (in module ax.models.model_utils)": [[10, "ax.models.model_utils.validate_bounds"]], "weights (ax.models.torch_base.torchgenresults attribute)": [[10, "ax.models.torch_base.TorchGenResults.weights"]], "a000() (in module ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.A000"]], "acqf_kwargs (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.ACQF_KWARGS"]], "autoset_surrogate (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.AUTOSET_SURROGATE"]], "aug_branin (class in ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.Aug_Branin"]], "aug_hartmann6 (class in ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.Aug_Hartmann6"]], "axoutputnamefilter (class in ax.utils.common.logger)": [[16, "ax.utils.common.logger.AxOutputNameFilter"]], "batch_init_conditions (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.BATCH_INIT_CONDITIONS"]], "backendsimulator (class in ax.utils.testing.backend_simulator)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator"]], "backendsimulatoroptions (class in ax.utils.testing.backend_simulator)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorOptions"]], "backendsimulatorstate (class in ax.utils.testing.backend_simulator)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState"]], "base (class in ax.utils.common.base)": [[16, "ax.utils.common.base.Base"]], "branin (class in ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.Branin"]], "candidate_set (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.CANDIDATE_SET"]], "candidate_size (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.CANDIDATE_SIZE"]], "cnn (class in ax.utils.tutorials.cnn_utils)": [[16, "ax.utils.tutorials.cnn_utils.CNN"]], "cost_aware_utility (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.COST_AWARE_UTILITY"]], "cost_intercept (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.COST_INTERCEPT"]], "current_value (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.CURRENT_VALUE"]], "classdecorator (class in ax.utils.common.decorator)": [[16, "ax.utils.common.decorator.ClassDecorator"]], "decorate_private (ax.utils.common.decorator.classdecorator attribute)": [[16, "ax.utils.common.decorator.ClassDecorator.DECORATE_PRIVATE"]], "docstringchecker (class in ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker"]], "docstringcheckervisitor (class in ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor"]], "expand (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.EXPAND"]], "expected_acqf_val (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.EXPECTED_ACQF_VAL"]], "err (class in ax.utils.common.result)": [[16, "ax.utils.common.result.Err"]], "error (class in ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.Error"]], "exceptione (class in ax.utils.common.result)": [[16, "ax.utils.common.result.ExceptionE"]], "fidelity_features (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.FIDELITY_FEATURES"]], "fidelity_weights (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.FIDELITY_WEIGHTS"]], "frac_random (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.FRAC_RANDOM"]], "full_parameterization (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.FULL_PARAMETERIZATION"]], "frombotorch (class in ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.FromBotorch"]], "gaussianlinkmean() (in module ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.GaussianLinkMean"]], "gpdgsmgpmean (class in ax.utils.sensitivity.derivative_measures)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean"]], "gpdgsmgpsampling (class in ax.utils.sensitivity.derivative_measures)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling"]], "hartmann6 (class in ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.Hartmann6"]], "immutable_search_space_and_opt_conf (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.IMMUTABLE_SEARCH_SPACE_AND_OPT_CONF"]], "inittest (class in ax.utils.testing.test_init_files)": [[16, "ax.utils.testing.test_init_files.InitTest"]], "keys (class in ax.utils.common.constants)": [[16, "ax.utils.common.constants.Keys"]], "maximize (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.MAXIMIZE"]], "metadata (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.METADATA"]], "metric_names (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.METRIC_NAMES"]], "num_fantasies (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.NUM_FANTASIES"]], "num_inner_restarts (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.NUM_INNER_RESTARTS"]], "num_restarts (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.NUM_RESTARTS"]], "num_trace_observations (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.NUM_TRACE_OBSERVATIONS"]], "objective (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.OBJECTIVE"]], "only_surrogate (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.ONLY_SURROGATE"]], "optimizer_kwargs (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.OPTIMIZER_KWARGS"]], "ok (class in ax.utils.common.result)": [[16, "ax.utils.common.result.Ok"]], "pairwise_preference_query (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.PAIRWISE_PREFERENCE_QUERY"]], "preference_data (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.PREFERENCE_DATA"]], "primary_surrogate (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.PRIMARY_SURROGATE"]], "project (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.PROJECT"]], "probitlinkmean() (in module ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.ProbitLinkMean"]], "qmc (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.QMC"]], "raw_inner_samples (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.RAW_INNER_SAMPLES"]], "raw_samples (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.RAW_SAMPLES"]], "resumed_from_storage_ts (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.RESUMED_FROM_STORAGE_TS"]], "result (class in ax.utils.common.result)": [[16, "ax.utils.common.result.Result"]], "sampler (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.SAMPLER"]], "seed_inner (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.SEED_INNER"]], "sequential (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.SEQUENTIAL"]], "state_dict (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.STATE_DICT"]], "subclass (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.SUBCLASS"]], "subset_model (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.SUBSET_MODEL"]], "serializationmixin (class in ax.utils.common.serialization)": [[16, "ax.utils.common.serialization.SerializationMixin"]], "simstatus (class in ax.utils.testing.backend_simulator)": [[16, "ax.utils.testing.backend_simulator.SimStatus"]], "simtrial (class in ax.utils.testing.backend_simulator)": [[16, "ax.utils.testing.backend_simulator.SimTrial"]], "sobolsensitivity (class in ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivity"]], "sobolsensitivitygpmean (class in ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean"]], "sobolsensitivitygpsampling (class in ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling"]], "sortablebase (class in ax.utils.common.base)": [[16, "ax.utils.common.base.SortableBase"]], "syntheticfunction (class in ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction"]], "task_features (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.TASK_FEATURES"]], "trial_completion_timestamp (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.TRIAL_COMPLETION_TIMESTAMP"]], "testcase (class in ax.utils.common.testutils)": [[16, "ax.utils.common.testutils.TestCase"]], "unwraperror": [[16, "ax.utils.common.result.UnwrapError"]], "warm_start_refitting (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.WARM_START_REFITTING"]], "x_baseline (ax.utils.common.constants.keys attribute)": [[16, "ax.utils.common.constants.Keys.X_BASELINE"]], "aggregation() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.aggregation"]], "aggregation() (ax.utils.sensitivity.derivative_measures.gpdgsmgpsampling method)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling.aggregation"]], "agresti_coull_sem() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.agresti_coull_sem"]], "all_trials (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.all_trials"]], "assertaxbaseequal() (ax.utils.common.testutils.testcase method)": [[16, "ax.utils.common.testutils.TestCase.assertAxBaseEqual"]], "assertdictsalmostequal() (ax.utils.common.testutils.testcase method)": [[16, "ax.utils.common.testutils.TestCase.assertDictsAlmostEqual"]], "assertequal() (ax.utils.common.testutils.testcase method)": [[16, "ax.utils.common.testutils.TestCase.assertEqual"]], "assertraiseson() (ax.utils.common.testutils.testcase method)": [[16, "ax.utils.common.testutils.TestCase.assertRaisesOn"]], "ax.utils": [[16, "module-ax.utils"]], "ax.utils.common.base": [[16, "module-ax.utils.common.base"]], "ax.utils.common.constants": [[16, "module-ax.utils.common.constants"]], "ax.utils.common.decorator": [[16, "module-ax.utils.common.decorator"]], "ax.utils.common.deprecation": [[16, "module-ax.utils.common.deprecation"]], "ax.utils.common.docutils": [[16, "module-ax.utils.common.docutils"]], "ax.utils.common.equality": [[16, "module-ax.utils.common.equality"]], "ax.utils.common.executils": [[16, "module-ax.utils.common.executils"]], "ax.utils.common.kwargs": [[16, "module-ax.utils.common.kwargs"]], "ax.utils.common.logger": [[16, "module-ax.utils.common.logger"]], "ax.utils.common.mock": [[16, "module-ax.utils.common.mock"]], "ax.utils.common.random": [[16, "module-ax.utils.common.random"]], "ax.utils.common.result": [[16, "module-ax.utils.common.result"]], "ax.utils.common.serialization": [[16, "module-ax.utils.common.serialization"]], "ax.utils.common.testutils": [[16, "module-ax.utils.common.testutils"]], "ax.utils.common.timeutils": [[16, "module-ax.utils.common.timeutils"]], "ax.utils.common.typeutils": [[16, "module-ax.utils.common.typeutils"]], "ax.utils.common.typeutils_nonnative": [[16, "module-ax.utils.common.typeutils_nonnative"]], "ax.utils.common.typeutils_torch": [[16, "module-ax.utils.common.typeutils_torch"]], "ax.utils.flake8_plugins.docstring_checker": [[16, "module-ax.utils.flake8_plugins.docstring_checker"]], "ax.utils.measurement.synthetic_functions": [[16, "module-ax.utils.measurement.synthetic_functions"]], "ax.utils.sensitivity.derivative_gp": [[16, "module-ax.utils.sensitivity.derivative_gp"]], "ax.utils.sensitivity.derivative_measures": [[16, "module-ax.utils.sensitivity.derivative_measures"]], "ax.utils.sensitivity.sobol_measures": [[16, "module-ax.utils.sensitivity.sobol_measures"]], "ax.utils.stats.statstools": [[16, "module-ax.utils.stats.statstools"]], "ax.utils.testing.backend_simulator": [[16, "module-ax.utils.testing.backend_simulator"]], "ax.utils.testing.mock": [[16, "module-ax.utils.testing.mock"]], "ax.utils.testing.test_init_files": [[16, "module-ax.utils.testing.test_init_files"]], "ax.utils.testing.torch_stubs": [[16, "module-ax.utils.testing.torch_stubs"]], "ax.utils.testing.utils": [[16, "module-ax.utils.testing.utils"]], "ax.utils.tutorials.cnn_utils": [[16, "module-ax.utils.tutorials.cnn_utils"]], "ax_parameter_sens() (in module ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.ax_parameter_sens"]], "bootstrap_indices (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean attribute)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.bootstrap_indices"]], "build_file_handler() (in module ax.utils.common.logger)": [[16, "ax.utils.common.logger.build_file_handler"]], "build_stream_handler() (in module ax.utils.common.logger)": [[16, "ax.utils.common.logger.build_stream_handler"]], "callable_from_reference() (in module ax.utils.common.serialization)": [[16, "ax.utils.common.serialization.callable_from_reference"]], "callable_to_reference() (in module ax.utils.common.serialization)": [[16, "ax.utils.common.serialization.callable_to_reference"]], "check_a000() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.check_A000"]], "checked_cast() (in module ax.utils.common.typeutils)": [[16, "ax.utils.common.typeutils.checked_cast"]], "checked_cast_dict() (in module ax.utils.common.typeutils)": [[16, "ax.utils.common.typeutils.checked_cast_dict"]], "checked_cast_list() (in module ax.utils.common.typeutils)": [[16, "ax.utils.common.typeutils.checked_cast_list"]], "checked_cast_optional() (in module ax.utils.common.typeutils)": [[16, "ax.utils.common.typeutils.checked_cast_optional"]], "checked_cast_to_tuple() (in module ax.utils.common.typeutils)": [[16, "ax.utils.common.typeutils.checked_cast_to_tuple"]], "col (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.Error.col"]], "completed (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState.completed"]], "completed (ax.utils.testing.backend_simulator.simstatus attribute)": [[16, "ax.utils.testing.backend_simulator.SimStatus.completed"], [16, "id0"]], "compute_derivatives_from_model_list() (in module ax.utils.sensitivity.derivative_measures)": [[16, "ax.utils.sensitivity.derivative_measures.compute_derivatives_from_model_list"]], "compute_sobol_indices_from_model_list() (in module ax.utils.sensitivity.sobol_measures)": [[16, "ax.utils.sensitivity.sobol_measures.compute_sobol_indices_from_model_list"]], "consolidate_kwargs() (in module ax.utils.common.kwargs)": [[16, "ax.utils.common.kwargs.consolidate_kwargs"]], "copy_doc() (in module ax.utils.common.docutils)": [[16, "ax.utils.common.docutils.copy_doc"]], "current_timestamp_in_millis() (in module ax.utils.common.timeutils)": [[16, "ax.utils.common.timeutils.current_timestamp_in_millis"]], "dataframe_equals() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.dataframe_equals"]], "datetime_equals() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.datetime_equals"]], "db_id (ax.utils.common.base.base property)": [[16, "ax.utils.common.base.Base.db_id"]], "decorate_callable() (ax.utils.common.decorator.classdecorator method)": [[16, "ax.utils.common.decorator.ClassDecorator.decorate_callable"]], "decorate_callable() (ax.utils.common.logger.disable_logger method)": [[16, "ax.utils.common.logger.disable_logger.decorate_callable"]], "decorate_callable() (ax.utils.common.logger.disable_loggers method)": [[16, "ax.utils.common.logger.disable_loggers.decorate_callable"]], "decorate_class() (ax.utils.common.decorator.classdecorator method)": [[16, "ax.utils.common.decorator.ClassDecorator.decorate_class"]], "deserialize_init_args() (ax.utils.common.serialization.serializationmixin class method)": [[16, "ax.utils.common.serialization.SerializationMixin.deserialize_init_args"]], "dim (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling property)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.dim"]], "disable_logger (class in ax.utils.common.logger)": [[16, "ax.utils.common.logger.disable_logger"]], "disable_loggers (class in ax.utils.common.logger)": [[16, "ax.utils.common.logger.disable_loggers"]], "domain (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.domain"]], "equality_typechecker() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.equality_typechecker"]], "err (ax.utils.common.result.err property)": [[16, "ax.utils.common.result.Err.err"]], "err (ax.utils.common.result.ok property)": [[16, "ax.utils.common.result.Ok.err"]], "err (ax.utils.common.result.result property)": [[16, "ax.utils.common.result.Result.err"]], "errors (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.errors"]], "evaluate() (in module ax.utils.tutorials.cnn_utils)": [[16, "ax.utils.tutorials.cnn_utils.evaluate"]], "evalute_function() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.evalute_function"]], "exception (ax.utils.common.result.exceptione attribute)": [[16, "ax.utils.common.result.ExceptionE.exception"]], "execute_with_timeout() (in module ax.utils.common.executils)": [[16, "ax.utils.common.executils.execute_with_timeout"]], "extract_init_args() (in module ax.utils.common.serialization)": [[16, "ax.utils.common.serialization.extract_init_args"]], "f() (ax.utils.measurement.synthetic_functions.syntheticfunction method)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.f"]], "failed (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState.failed"]], "failed (ax.utils.testing.backend_simulator.simstatus attribute)": [[16, "ax.utils.testing.backend_simulator.SimStatus.failed"], [16, "id1"]], "failure_rate (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.failure_rate"]], "fast_botorch_optimize() (in module ax.utils.testing.mock)": [[16, "ax.utils.testing.mock.fast_botorch_optimize"]], "fast_botorch_optimize_context_manager() (in module ax.utils.testing.mock)": [[16, "ax.utils.testing.mock.fast_botorch_optimize_context_manager"]], "fikename (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.fikename"]], "filter() (ax.utils.common.logger.axoutputnamefilter method)": [[16, "ax.utils.common.logger.AxOutputNameFilter.filter"]], "filter_kwargs() (in module ax.utils.common.kwargs)": [[16, "ax.utils.common.kwargs.filter_kwargs"]], "first_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.first_order_indices"]], "first_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpmean method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean.first_order_indices"]], "first_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.first_order_indices"]], "fmax (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.fmax"]], "fmin (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.fmin"]], "format() (in module ax.utils.testing.backend_simulator)": [[16, "ax.utils.testing.backend_simulator.format"]], "forward() (ax.utils.tutorials.cnn_utils.cnn method)": [[16, "ax.utils.tutorials.cnn_utils.CNN.forward"]], "from_botorch() (in module ax.utils.measurement.synthetic_functions)": [[16, "ax.utils.measurement.synthetic_functions.from_botorch"]], "from_state() (ax.utils.testing.backend_simulator.backendsimulator class method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.from_state"]], "generate_all_input_matrix() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.generate_all_input_matrix"]], "generic_equals() (in module ax.utils.testing.utils)": [[16, "ax.utils.testing.utils.generic_equals"]], "get_kxx_inv() (in module ax.utils.sensitivity.derivative_gp)": [[16, "ax.utils.sensitivity.derivative_gp.get_KXX_inv"]], "get_kxx_dx() (in module ax.utils.sensitivity.derivative_gp)": [[16, "ax.utils.sensitivity.derivative_gp.get_KxX_dx"]], "get_kxx_dx2() (in module ax.utils.sensitivity.derivative_gp)": [[16, "ax.utils.sensitivity.derivative_gp.get_Kxx_dx2"]], "get_function_argument_names() (in module ax.utils.common.kwargs)": [[16, "ax.utils.common.kwargs.get_function_argument_names"]], "get_function_default_arguments() (in module ax.utils.common.kwargs)": [[16, "ax.utils.common.kwargs.get_function_default_arguments"]], "get_logger() (in module ax.utils.common.logger)": [[16, "ax.utils.common.logger.get_logger"]], "get_partition_data_loaders() (in module ax.utils.tutorials.cnn_utils)": [[16, "ax.utils.tutorials.cnn_utils.get_partition_data_loaders"]], "get_sim_trial_by_index() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.get_sim_trial_by_index"]], "get_torch_test_data() (in module ax.utils.testing.torch_stubs)": [[16, "ax.utils.testing.torch_stubs.get_torch_test_data"]], "gradient_absolute_measure() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.gradient_absolute_measure"]], "gradient_measure() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.gradient_measure"]], "gradients_square_measure() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.gradients_square_measure"]], "handle_exceptions_in_retries() (in module ax.utils.common.executils)": [[16, "ax.utils.common.executils.handle_exceptions_in_retries"]], "informative_failure_on_none() (ax.utils.measurement.synthetic_functions.syntheticfunction method)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.informative_failure_on_none"]], "internal_clock (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.internal_clock"]], "inverse_variance_weight() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.inverse_variance_weight"]], "is_ax_equal() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.is_ax_equal"]], "is_copy_doc_call() (in module ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.is_copy_doc_call"]], "is_err() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.is_err"]], "is_err() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.is_err"]], "is_err() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.is_err"]], "is_ok() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.is_ok"]], "is_ok() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.is_ok"]], "is_ok() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.is_ok"]], "lineno (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.Error.lineno"]], "load_mnist() (in module ax.utils.tutorials.cnn_utils)": [[16, "ax.utils.tutorials.cnn_utils.load_mnist"]], "lookup_trial_index_status() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.lookup_trial_index_status"]], "make_indices_str() (in module ax.utils.common.logger)": [[16, "ax.utils.common.logger.make_indices_str"]], "map() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.map"]], "map() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.map"]], "map() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.map"]], "map_err() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.map_err"]], "map_err() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.map_err"]], "map_err() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.map_err"]], "map_or() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.map_or"]], "map_or() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.map_or"]], "map_or() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.map_or"]], "map_or_else() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.map_or_else"]], "map_or_else() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.map_or_else"]], "map_or_else() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.map_or_else"]], "marginal_effects() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.marginal_effects"]], "max_concurrency (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.max_concurrency"]], "maximums (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.maximums"]], "mean_gradients (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean attribute)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.mean_gradients"]], "mean_gradients_btsp (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean attribute)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.mean_gradients_btsp"]], "message (ax.utils.common.result.exceptione attribute)": [[16, "ax.utils.common.result.ExceptionE.message"]], "message (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.Error.message"]], "minimums (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.minimums"]], "mock_patch_method_original() (in module ax.utils.common.mock)": [[16, "ax.utils.common.mock.mock_patch_method_original"]], "name (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.name"]], "name (ax.utils.measurement.synthetic_functions.frombotorch property)": [[16, "ax.utils.measurement.synthetic_functions.FromBotorch.name"]], "name (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.name"]], "named_tuple_to_dict() (in module ax.utils.common.serialization)": [[16, "ax.utils.common.serialization.named_tuple_to_dict"]], "new_error() (in module ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.new_error"]], "new_trial() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.new_trial"]], "not_none() (in module ax.utils.common.typeutils)": [[16, "ax.utils.common.typeutils.not_none"]], "num_completed (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.num_completed"]], "num_failed (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.num_failed"]], "num_queued (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.num_queued"]], "num_running (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.num_running"]], "numpy_type_to_python_type() (in module ax.utils.common.typeutils_nonnative)": [[16, "ax.utils.common.typeutils_nonnative.numpy_type_to_python_type"]], "object_attribute_dicts_equal() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.object_attribute_dicts_equal"]], "object_attribute_dicts_find_unequal_fields() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.object_attribute_dicts_find_unequal_fields"]], "ok (ax.utils.common.result.err property)": [[16, "ax.utils.common.result.Err.ok"]], "ok (ax.utils.common.result.ok property)": [[16, "ax.utils.common.result.Ok.ok"]], "ok (ax.utils.common.result.result property)": [[16, "ax.utils.common.result.Result.ok"]], "options (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState.options"]], "positive_part_james_stein() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.positive_part_james_stein"]], "posterior_derivative() (in module ax.utils.sensitivity.derivative_gp)": [[16, "ax.utils.sensitivity.derivative_gp.posterior_derivative"]], "queued (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState.queued"]], "queued (ax.utils.testing.backend_simulator.simstatus attribute)": [[16, "ax.utils.testing.backend_simulator.SimStatus.queued"], [16, "id2"]], "relativize() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.relativize"]], "relativize_data() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.relativize_data"]], "required_dimensionality (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[16, "ax.utils.measurement.synthetic_functions.SyntheticFunction.required_dimensionality"]], "reset() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.reset"]], "retry_on_exception() (in module ax.utils.common.executils)": [[16, "ax.utils.common.executils.retry_on_exception"]], "run() (ax.utils.flake8_plugins.docstring_checker.docstringchecker method)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.run"]], "run_trial() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.run_trial"]], "running (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState.running"]], "running (ax.utils.testing.backend_simulator.simstatus attribute)": [[16, "ax.utils.testing.backend_simulator.SimStatus.running"], [16, "id3"]], "same_elements() (in module ax.utils.common.equality)": [[16, "ax.utils.common.equality.same_elements"]], "sample_discrete_parameters() (in module ax.utils.sensitivity.derivative_measures)": [[16, "ax.utils.sensitivity.derivative_measures.sample_discrete_parameters"]], "samples_gradients (ax.utils.sensitivity.derivative_measures.gpdgsmgpsampling attribute)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling.samples_gradients"]], "samples_gradients_btsp (ax.utils.sensitivity.derivative_measures.gpdgsmgpsampling attribute)": [[16, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling.samples_gradients_btsp"]], "second_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.second_order_indices"]], "second_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpmean method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean.second_order_indices"]], "second_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.second_order_indices"]], "serialize_init_args() (ax.utils.common.serialization.serializationmixin class method)": [[16, "ax.utils.common.serialization.SerializationMixin.serialize_init_args"]], "serialize_init_args() (in module ax.utils.common.serialization)": [[16, "ax.utils.common.serialization.serialize_init_args"]], "setup() (ax.utils.common.testutils.testcase method)": [[16, "ax.utils.common.testutils.TestCase.setUp"]], "set_rng_seed() (in module ax.utils.common.random)": [[16, "ax.utils.common.random.set_rng_seed"]], "set_stderr_log_level() (in module ax.utils.common.logger)": [[16, "ax.utils.common.logger.set_stderr_log_level"]], "setup_import_mocks() (in module ax.utils.common.testutils)": [[16, "ax.utils.common.testutils.setup_import_mocks"]], "should_check() (in module ax.utils.flake8_plugins.docstring_checker)": [[16, "ax.utils.flake8_plugins.docstring_checker.should_check"]], "silence_stderr() (ax.utils.common.testutils.testcase static method)": [[16, "ax.utils.common.testutils.TestCase.silence_stderr"]], "sim_completed_time (ax.utils.testing.backend_simulator.simtrial attribute)": [[16, "ax.utils.testing.backend_simulator.SimTrial.sim_completed_time"], [16, "id5"]], "sim_queued_time (ax.utils.testing.backend_simulator.simtrial attribute)": [[16, "ax.utils.testing.backend_simulator.SimTrial.sim_queued_time"], [16, "id6"]], "sim_runtime (ax.utils.testing.backend_simulator.simtrial attribute)": [[16, "ax.utils.testing.backend_simulator.SimTrial.sim_runtime"], [16, "id7"]], "sim_start_time (ax.utils.testing.backend_simulator.simtrial attribute)": [[16, "ax.utils.testing.backend_simulator.SimTrial.sim_start_time"], [16, "id8"]], "skip_fit_gpytorch_mll() (in module ax.utils.testing.mock)": [[16, "ax.utils.testing.mock.skip_fit_gpytorch_mll"]], "skip_fit_gpytorch_mll_context_manager() (in module ax.utils.testing.mock)": [[16, "ax.utils.testing.mock.skip_fit_gpytorch_mll_context_manager"]], "split_dataset() (in module ax.utils.tutorials.cnn_utils)": [[16, "ax.utils.tutorials.cnn_utils.split_dataset"]], "state() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.state"]], "status() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.status"]], "stop_trial() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.stop_trial"]], "tb_str() (ax.utils.common.result.exceptione method)": [[16, "ax.utils.common.result.ExceptionE.tb_str"]], "test_initfiles() (ax.utils.testing.test_init_files.inittest method)": [[16, "ax.utils.testing.test_init_files.InitTest.test_InitFiles"]], "time (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.time"]], "time_remaining (ax.utils.testing.backend_simulator.simstatus attribute)": [[16, "ax.utils.testing.backend_simulator.SimStatus.time_remaining"], [16, "id4"]], "time_scaling (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.time_scaling"]], "timestamps_in_range() (in module ax.utils.common.timeutils)": [[16, "ax.utils.common.timeutils.timestamps_in_range"]], "to_ds() (in module ax.utils.common.timeutils)": [[16, "ax.utils.common.timeutils.to_ds"]], "to_ts() (in module ax.utils.common.timeutils)": [[16, "ax.utils.common.timeutils.to_ts"]], "torch_type_from_str() (in module ax.utils.common.typeutils_torch)": [[16, "ax.utils.common.typeutils_torch.torch_type_from_str"]], "torch_type_to_str() (in module ax.utils.common.typeutils_torch)": [[16, "ax.utils.common.typeutils_torch.torch_type_to_str"]], "total_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.total_order_indices"]], "total_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpmean method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean.total_order_indices"]], "total_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling method)": [[16, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.total_order_indices"]], "total_variance() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.total_variance"]], "train() (in module ax.utils.tutorials.cnn_utils)": [[16, "ax.utils.tutorials.cnn_utils.train"]], "tree (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.tree"]], "trial_index (ax.utils.testing.backend_simulator.simtrial attribute)": [[16, "ax.utils.testing.backend_simulator.SimTrial.trial_index"], [16, "id9"]], "type (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.Error.type"]], "unixtime_to_pandas_ts() (in module ax.utils.common.timeutils)": [[16, "ax.utils.common.timeutils.unixtime_to_pandas_ts"]], "unrelativize() (in module ax.utils.stats.statstools)": [[16, "ax.utils.stats.statstools.unrelativize"]], "unwrap() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.unwrap"]], "unwrap() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.unwrap"]], "unwrap() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.unwrap"]], "unwrap_err() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.unwrap_err"]], "unwrap_err() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.unwrap_err"]], "unwrap_err() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.unwrap_err"]], "unwrap_or() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.unwrap_or"]], "unwrap_or() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.unwrap_or"]], "unwrap_or() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.unwrap_or"]], "unwrap_or_else() (ax.utils.common.result.err method)": [[16, "ax.utils.common.result.Err.unwrap_or_else"]], "unwrap_or_else() (ax.utils.common.result.ok method)": [[16, "ax.utils.common.result.Ok.unwrap_or_else"]], "unwrap_or_else() (ax.utils.common.result.result method)": [[16, "ax.utils.common.result.Result.unwrap_or_else"]], "update() (ax.utils.testing.backend_simulator.backendsimulator method)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.update"]], "use_internal_clock (ax.utils.testing.backend_simulator.backendsimulator property)": [[16, "ax.utils.testing.backend_simulator.BackendSimulator.use_internal_clock"]], "use_update_as_start_time (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.use_update_as_start_time"]], "value (ax.utils.common.result.err property)": [[16, "ax.utils.common.result.Err.value"]], "value (ax.utils.common.result.ok property)": [[16, "ax.utils.common.result.Ok.value"]], "value (ax.utils.common.result.result property)": [[16, "ax.utils.common.result.Result.value"]], "verbose_logging (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[16, "ax.utils.testing.backend_simulator.BackendSimulatorState.verbose_logging"]], "version (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.version"]], "visit_asyncfunctiondef() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.visit_AsyncFunctionDef"]], "visit_classdef() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.visit_ClassDef"]], "visit_functiondef() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[16, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.visit_FunctionDef"]], "warn_on_kwargs() (in module ax.utils.common.kwargs)": [[16, "ax.utils.common.kwargs.warn_on_kwargs"]], "with_rng_seed() (in module ax.utils.common.random)": [[16, "ax.utils.common.random.with_rng_seed"]]}})