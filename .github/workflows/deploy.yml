# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Deploy

on:
  release:
    types: [created]

jobs:
  tests-and-coverage-latest:
    name: Tests with latest BoTorch
    uses: ./.github/workflows/reusable_test.yml
    with:
      pinned_botorch: false
    secrets: inherit

  tests-and-coverage-pinned:
    name: Tests with pinned BoTorch
    uses: ./.github/workflows/reusable_test.yml
    with:
      pinned_botorch: true
    secrets: inherit

  version-and-publish-website:
    name: Version and Publish website
    uses: ./.github/workflows/publish_website.yml
    with:
      new_version: ${{ github.event.release.tag_name }}
      run_tutorials: true
      pinned_botorch: true
    permissions:
      pages: write
      id-token: write
      contents: write

  deploy:
    needs: tests-and-coverage-pinned # only run if test step succeeds
    runs-on: ubuntu-latest
    env:
      # `uv pip ...` requires venv by default. This skips that requirement.
      UV_SYSTEM_PYTHON: 1
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        # use stable Botorch
        uv pip install -e ".[dev,mysql,notebook]"
        uv pip install --upgrade build setuptools setuptools_scm wheel
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Build wheel
      run: |
        python -m build --sdist --wheel
    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        verbose: true
